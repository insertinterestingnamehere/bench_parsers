(KEYWORD from)
(ID __future__)
(KEYWORD import)
(ID absolute_import)
(NEWLINE)
(KEYWORD import)
(ID cython)
(NEWLINE)
(ID cython)
(PUNCT ".")
(ID declare)
(PUNCT "(")
(ID error)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID warning)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID warn_once)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID InternalError)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID CompileError)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID UtilityCode)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID TempitaUtilityCode)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID StringEncoding)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID operator)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID local_errors)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID report_error)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID Naming)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID Nodes)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID py_object_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID list_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID tuple_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID set_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID dict_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID unicode_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID str_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID bytes_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID type_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID Builtin)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID Symtab)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID Utils)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID find_coercion_error)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID debug_disposal_code)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID debug_temp_alloc)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID debug_coercion)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID bytearray_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID slice_type)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID _py_int_types)
(PUNCT "=")
(ID object)
(PUNCT ",")
(ID IS_PYTHON3)
(PUNCT "=")
(ID cython)
(PUNCT ".")
(ID bint)
(PUNCT ")")
(NEWLINE)
(KEYWORD import)
(ID re)
(NEWLINE)
(KEYWORD import)
(ID sys)
(NEWLINE)
(KEYWORD import)
(ID copy)
(NEWLINE)
(KEYWORD import)
(ID os)
(PUNCT ".")
(ID path)
(NEWLINE)
(KEYWORD import)
(ID operator)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID Errors)
(KEYWORD import)
(PUNCT "(")
(ID error)
(PUNCT ",")
(ID warning)
(PUNCT ",")
(ID InternalError)
(PUNCT ",")
(ID CompileError)
(PUNCT ",")
(ID report_error)
(PUNCT ",")
(ID local_errors)
(PUNCT ")")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID Code)
(KEYWORD import)
(ID UtilityCode)
(PUNCT ",")
(ID TempitaUtilityCode)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID StringEncoding)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Naming)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Nodes)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID Nodes)
(KEYWORD import)
(ID Node)
(PUNCT ",")
(ID utility_code_for_imports)
(PUNCT ",")
(ID analyse_type_annotation)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID PyrexTypes)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID PyrexTypes)
(KEYWORD import)
(ID py_object_type)
(PUNCT ",")
(ID c_long_type)
(PUNCT ",")
(ID typecast)
(PUNCT ",")
(ID error_type)
(PUNCT ",")
(ID unspecified_type)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID TypeSlots)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID Builtin)
(KEYWORD import)
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ",")
(ID set_type)
(PUNCT ",")
(ID dict_type)
(PUNCT ",")
(ID type_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ",")
(ID slice_type)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Builtin)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Symtab)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID Utils)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID Annotate)
(KEYWORD import)
(ID AnnotationItem)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Future)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID Debugging)
(KEYWORD import)
(ID print_call_chain)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID DebugFlags)
(KEYWORD import)
(ID debug_disposal_code)
(PUNCT ",")
(ID debug_temp_alloc)
(PUNCT ",")
(ID debug_coercion)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID Pythran)
(KEYWORD import)
(ID to_pythran)
(PUNCT ",")
(ID is_pythran_supported_type)
(PUNCT ",")
(ID is_pythran_supported_operation_type)
(PUNCT ",")
(ID is_pythran_expr)
(PUNCT ",")
(ID pythran_func_type)
(PUNCT ",")
(ID pythran_binop_type)
(PUNCT ",")
(ID pythran_unaryop_type)
(PUNCT ",")
(ID has_np_pythran)
(PUNCT ",")
(ID pythran_indexing_code)
(PUNCT ",")
(ID pythran_indexing_type)
(PUNCT ",")
(ID is_pythran_supported_node_or_none)
(PUNCT ",")
(ID pythran_type)
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID PyrexTypes)
(KEYWORD import)
(ID PythranExpr)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID __builtin__)
(KEYWORD import)
(ID basestring)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID ImportError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID basestring)
(PUNCT "=")
(ID str)
(NEWLINE)
(ID any_string_type)
(PUNCT "=")
(PUNCT "(")
(ID bytes)
(PUNCT ",")
(ID str)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID any_string_type)
(PUNCT "=")
(PUNCT "(")
(ID bytes)
(PUNCT ",")
(ID unicode)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID sys)
(PUNCT ".")
(ID version_info)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ">=")
(LIT "3")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID IS_PYTHON3)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID _py_int_types)
(PUNCT "=")
(ID int)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID IS_PYTHON3)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID _py_int_types)
(PUNCT "=")
(PUNCT "(")
(ID int)
(PUNCT ",")
(ID long)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID NotConstant)
(PUNCT "(")
(ID object)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID _obj)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID __new__)
(PUNCT "(")
(ID cls)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID NotConstant)
(PUNCT ".")
(ID _obj)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID NotConstant)
(PUNCT ".")
(ID _obj)
(PUNCT "=")
(ID super)
(PUNCT "(")
(ID NotConstant)
(PUNCT ",")
(ID cls)
(PUNCT ")")
(PUNCT ".")
(ID __new__)
(PUNCT "(")
(ID cls)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID NotConstant)
(PUNCT ".")
(ID _obj)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID __repr__)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID not_a_constant)
(PUNCT "=")
(ID NotConstant)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID constant_value_not_set)
(PUNCT "=")
(ID object)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID coercion_error_dict)
(PUNCT "=")
(PUNCT "{")
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID str_type)
(PUNCT ")")
(PUNCT ":")
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID bytes_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_char_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_uchar_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID str_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ")")
(PUNCT ":")
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_unicode_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_py_unicode_ptr_type)
(PUNCT ")")
(PUNCT ":")
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID basestring_type)
(PUNCT ",")
(ID bytes_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ":")
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID bytes_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_char_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_uchar_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_unicode_ptr_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_py_unicode_ptr_type)
(PUNCT ")")
(PUNCT ":")
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_char_ptr_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ":")
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_ptr_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_uchar_ptr_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ":")
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID find_coercion_error)
(PUNCT "(")
(ID type_tuple)
(PUNCT ",")
(ID default)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID err)
(PUNCT "=")
(ID coercion_error_dict)
(PUNCT ".")
(ID get)
(PUNCT "(")
(ID type_tuple)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID err)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID default)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD and)
(ID any)
(PUNCT "(")
(ID t)
(KEYWORD in)
(ID type_tuple)
(KEYWORD for)
(ID t)
(KEYWORD in)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_ptr_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_char_ptr_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_uchar_ptr_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type_tuple)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID default)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID default)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID type_tuple)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID name)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID err)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID default_str_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(ID bytes_type)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID bytearray_type)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID str_type)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID unicode_type)
(PUNCT "}")
(PUNCT ".")
(ID get)
(PUNCT "(")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_negative_indices)
(PUNCT "(")
(PUNCT "*")
(ID nodes)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD for)
(ID node)
(KEYWORD in)
(ID nodes)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID node)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(PUNCT "(")
(KEYWORD not)
(ID isinstance)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID isinstance)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID float)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID node)
(PUNCT ".")
(ID constant_result)
(PUNCT "<")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT ",")
(ID level)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_sequence_item_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID seq_node)
(PUNCT ",")
(ID index_node)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID seq_type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID seq_node)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID seq_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID seq_type)
(PUNCT "=")
(ID seq_node)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID seq_type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID seq_node)
(PUNCT ".")
(ID cf_state)
(KEYWORD and)
(ID len)
(PUNCT "(")
(ID seq_node)
(PUNCT ".")
(ID cf_state)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID seq_node)
(PUNCT "=")
(ID seq_node)
(PUNCT ".")
(ID cf_state)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID rhs)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID AttributeError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID seq_node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID seq_node)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID index_node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID index_node)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT "=")
(ID seq_node)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID index_node)
(PUNCT ".")
(ID constant_result)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID ValueError)
(PUNCT ",")
(ID TypeError)
(PUNCT ",")
(ID IndexError)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID item)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID item_types)
(PUNCT "=")
(ID set)
(PUNCT "(")
(PUNCT "[")
(ID item)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID seq_node)
(PUNCT ".")
(ID args)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID item_types)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID item_types)
(PUNCT ".")
(ID pop)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_exception_handler)
(PUNCT "(")
(ID exception_value)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID exception_value)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID exception_value)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID exception_value)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ",")
(ID exception_value)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID exception_value)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID cname)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID inside)
(PUNCT ",")
(ID exception_value)
(PUNCT ",")
(ID nogil)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID raise_py_exception)
(PUNCT "=")
(ID get_exception_handler)
(PUNCT "(")
(ID exception_value)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID inside)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_ensure_gil)
(PUNCT "(")
(ID declare_gilstate)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID raise_py_exception)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_release_ensured_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID translate_double_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID lhs_type)
(PUNCT ",")
(ID lhs_code)
(PUNCT ",")
(ID rhs_code)
(PUNCT ",")
(ID lhs_exc_val)
(PUNCT ",")
(ID assign_exc_val)
(PUNCT ",")
(ID nogil)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID handle_lhs_exc)
(PUNCT "=")
(ID get_exception_handler)
(PUNCT "(")
(ID lhs_exc_val)
(PUNCT ")")
(NEWLINE)
(ID handle_assignment_exc)
(PUNCT "=")
(ID get_exception_handler)
(PUNCT "(")
(ID assign_exc_val)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID lhs_type)
(PUNCT ".")
(ID declaration_code)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID lhs_code)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID rhs_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_ensure_gil)
(PUNCT "(")
(ID declare_gilstate)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID handle_assignment_exc)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_release_ensured_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_ensure_gil)
(PUNCT "(")
(ID declare_gilstate)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID handle_lhs_exc)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_release_ensured_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID ExprNode)
(PUNCT "(")
(ID Node)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result_ctype)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID annotation)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID temp_code)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID old_temp)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID use_managed_ref)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID result_is_used)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_numpy_attribute)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_sequence_constructor)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_dict_literal)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_set_literal)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_string_literal)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_attribute)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_subscript)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_slice)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_buffer_access)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_memview_index)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_memview_slice)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_memview_broadcast)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_memview_copy_assignment)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID saved_subexpr_nodes)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_target)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_starred)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID constant_result)
(PUNCT "=")
(ID constant_value_not_set)
(NEWLINE)
(ID child_attrs)
(PUNCT "=")
(ID property)
(PUNCT "(")
(ID fget)
(PUNCT "=")
(ID operator)
(PUNCT ".")
(ID attrgetter)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID not_implemented)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID method_name)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID print_call_chain)
(PUNCT "(")
(ID method_name)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID InternalError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID __class__)
(PUNCT ".")
(ID __name__)
(PUNCT ",")
(ID method_name)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_lvalue)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "0")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_addressable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID is_lvalue)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID is_temp)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID subexpr_nodes)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID nodes)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID name)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID subexprs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT "=")
(ID getattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID item)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type)
(PUNCT "(")
(ID item)
(PUNCT ")")
(KEYWORD is)
(ID list)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID nodes)
(PUNCT ".")
(ID extend)
(PUNCT "(")
(ID item)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID nodes)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID item)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID nodes)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID temp_code)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID pythran_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type_)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_supported_node_or_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID to_pythran)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(PUNCT "(")
(ID type_)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID to_pythran)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type_)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_c_result_required)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID type)
(PUNCT "!=")
(ID py_object_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID typecast)
(PUNCT "(")
(ID type)
(PUNCT ",")
(ID py_object_type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID typecast)
(PUNCT "(")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID py_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID ctype)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_ctype)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID has_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID constant_result)
(KEYWORD is)
(KEYWORD not)
(ID constant_value_not_set)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID constant_result)
(KEYWORD is)
(KEYWORD not)
(ID not_a_constant)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value_error)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID e)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID e)
(PUNCT ".")
(ID __class__)
(PUNCT ".")
(ID __name__)
(PUNCT ",")
(ID e)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_const_expression)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_expression)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_target_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_boolean_expression)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID bool)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID bool)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_temp_boolean_expression)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID node)
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID sum)
(PUNCT "(")
(PUNCT "[")
(ID node)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID node)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID subexpr_nodes)
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ",")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_implemented)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID is_literal)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID inferable_item_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID index)
(PUNCT "=")
(LIT "0")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD return)
(ID IndexNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ",")
(ID index)
(PUNCT "=")
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID index)
(PUNCT ")")
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID index)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_module)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_extension_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_implemented)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID gil_assignment_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID nogil)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID not_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const_addr)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID addr_not_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID addr_not_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result_in_temp)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID is_temp)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID target_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_implemented)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID allocate_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID RuntimeError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID __class__)
(PUNCT ".")
(ID __name__)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID type)
(PUNCT ".")
(ID is_void)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result_is_used)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID is_c_result_required)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID release_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID result_is_used)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID pos)
(PUNCT "=")
(PUNCT "(")
(ID os)
(PUNCT ".")
(ID path)
(PUNCT ".")
(ID basename)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID get_description)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT "+")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT "[")
(LIT "1")
(PUNCT ":")
(PUNCT "]")
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID pos)
(KEYWORD else)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID old_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID RuntimeError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID old_temp)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID __class__)
(PUNCT ".")
(ID __name__)
(PUNCT ",")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID RuntimeError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID __class__)
(PUNCT ".")
(ID __name__)
(PUNCT ",")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID old_temp)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID temp_code)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID make_owned_reference)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID make_owned_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_incref_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID have_gil)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID generate_result_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD and)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID node)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID subexpr_nodes)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_implemented)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xdecref_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID have_gil)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID node)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID subexpr_nodes)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_post_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID exception_check)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID exception_value)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_deletion_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID ignore_nonexisting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_void)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID release_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID free_subexpr_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID sub)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID subexpr_nodes)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sub)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_function_definitions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID node)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID subexpr_nodes)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT "=")
(ID self)
(NEWLINE)
(ID src_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID check_for_coercion_error)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID used_as_reference)
(PUNCT "=")
(ID dst_type)
(PUNCT ".")
(ID is_reference)
(NEWLINE)
(KEYWORD if)
(ID used_as_reference)
(KEYWORD and)
(KEYWORD not)
(ID src_type)
(PUNCT ".")
(ID is_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID dst_type)
(PUNCT "=")
(ID dst_type)
(PUNCT ".")
(ID ref_base_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID src_type)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src_type)
(PUNCT "=")
(ID src_type)
(PUNCT ".")
(ID const_base_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID src_type)
(PUNCT ".")
(ID is_fused)
(KEYWORD or)
(ID dst_type)
(PUNCT ".")
(ID is_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID src_type)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD and)
(KEYWORD not)
(ID dst_type)
(PUNCT ".")
(ID is_fused)
(KEYWORD and)
(ID dst_type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD and)
(ID dst_type)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID dst_type)
(PUNCT "=")
(ID dst_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(KEYWORD for)
(ID signature)
(KEYWORD in)
(ID src_type)
(PUNCT ".")
(ID get_all_specialized_function_types)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID signature)
(PUNCT ".")
(ID same_as)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID signature)
(NEWLINE)
(ID src)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID entry)
(NEWLINE)
(ID src)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID src_type)
(PUNCT ".")
(ID is_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID src_type)
(PUNCT ".")
(ID is_null_ptr)
(KEYWORD and)
(ID dst_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID coercion_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID NameNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID name)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID coercion_type)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT "=")
(ID CoerceToMemViewSliceNode)
(PUNCT "(")
(ID src)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT "=")
(ID CythonArrayNode)
(PUNCT ".")
(ID from_carray)
(PUNCT "(")
(ID src)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID src_type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID src_type)
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID writable_needed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID dst_type)
(PUNCT ".")
(ID writable_needed)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID conforms_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID broadcast)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID is_memview_broadcast)
(PUNCT ",")
(ID copying)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID is_memview_copy_assignment)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(PUNCT ".")
(ID same_as)
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID dtype)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID msg)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID tup)
(PUNCT "=")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID dst_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID msg)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID tup)
(PUNCT "=")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(PUNCT ",")
(ID dst_type)
(PUNCT ".")
(ID dtype)
(NEWLINE)
(DEDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID msg)
(PUNCT "%")
(ID tup)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(KEYWORD is)
(ID bytes_type)
(KEYWORD and)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT "=")
(ID CoerceIntToBytesNode)
(PUNCT "(")
(ID src)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT "=")
(ID CoerceToPyTypeNode)
(PUNCT "(")
(ID src)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID src)
(PUNCT ".")
(ID constant_result)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT "=")
(ID PyTypeTestNode)
(PUNCT "(")
(ID src)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID is_pythran_expr)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(KEYWORD and)
(ID is_pythran_supported_type)
(PUNCT "(")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID src)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID is_pythran_expr)
(PUNCT "(")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_supported_type)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID src)
(NEWLINE)
(DEDENT)
(ID src)
(PUNCT "=")
(ID CoerceToPyTypeNode)
(PUNCT "(")
(ID src)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID used_as_reference)
(KEYWORD and)
(ID dst_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID src)
(PUNCT "=")
(ID CoerceFromPyTypeNode)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID src)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID is_complex)
(KEYWORD and)
(ID src_type)
(PUNCT "!=")
(ID dst_type)
(KEYWORD and)
(ID dst_type)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID src_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID src)
(PUNCT "=")
(ID CoerceToComplexNode)
(PUNCT "(")
(ID src)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT "==")
(ID dst_type)
(KEYWORD or)
(ID str)
(PUNCT "(")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT "==")
(ID str)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(KEYWORD or)
(ID dst_type)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID src_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID fail_assignment)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID src)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID fail_assignment)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID dst_type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_for_coercion_error)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID fail)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID default)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID fail)
(KEYWORD and)
(KEYWORD not)
(ID default)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID default)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID message)
(PUNCT "=")
(ID find_coercion_error)
(PUNCT "(")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID dst_type)
(PUNCT ")")
(PUNCT ",")
(ID default)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID message)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID message)
(PUNCT "%")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID dst_type)
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID fail)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID fail_assignment)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_pyobject)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID bool_value)
(PUNCT "=")
(ID bool)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID BoolNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID bool_value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID bool_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_enum)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID CoerceToBooleanNode)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID SimpleCallNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID function)
(PUNCT "=")
(ID AttributeNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ",")
(ID attribute)
(PUNCT "=")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type)
(PUNCT ".")
(ID is_ctuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID bool_value)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID type)
(PUNCT ".")
(ID components)
(PUNCT ")")
(PUNCT "==")
(LIT "0")
(NEWLINE)
(KEYWORD return)
(ID BoolNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID bool_value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID bool_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_to_integer)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_long_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_to_temp)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID CoerceToTempNode)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_to_simple)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD and)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID constant_result)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_cython_attribute)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_none_safe_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID message)
(PUNCT ",")
(ID error)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID format_args)
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NoneCheckNode)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID error)
(PUNCT ",")
(ID message)
(PUNCT ",")
(ID format_args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID classmethod)
(NEWLINE)
(KEYWORD def)
(ID from_node)
(PUNCT "(")
(ID cls)
(PUNCT ",")
(ID node)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID attributes)
(PUNCT "=")
(LIT "s")
(PUNCT ".")
(ID split)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID attr_name)
(KEYWORD in)
(ID attributes)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID attr_name)
(KEYWORD in)
(ID kwargs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID getattr)
(PUNCT "(")
(ID node)
(PUNCT ",")
(ID attr_name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID AttributeError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID kwargs)
(PUNCT "[")
(ID attr_name)
(PUNCT "]")
(PUNCT "=")
(ID value)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID cls)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AtomicExprNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyConstNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_literal)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NoneNode)
(PUNCT "(")
(ID PyConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_none)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID constant_result)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID nogil_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID dst_type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD or)
(ID dst_type)
(PUNCT ".")
(ID is_error)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID NoneNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID EllipsisNode)
(PUNCT "(")
(ID PyConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID constant_result)
(PUNCT "=")
(ID Ellipsis)
(NEWLINE)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID Ellipsis)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ConstNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_literal)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID nogil_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID str)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID BoolNode)
(PUNCT "(")
(ID ConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(KEYWORD and)
(LIT "s")
(KEYWORD or)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID str)
(PUNCT "(")
(ID int)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID BoolNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID bool_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID BoolNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID ConstNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NullNode)
(PUNCT "(")
(ID ConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_null_ptr_type)
(NEWLINE)
(ID value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID constant_result)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CharNode)
(PUNCT "(")
(ID ConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_type)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID ord)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID ord)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID StringEncoding)
(PUNCT ".")
(ID escape_char)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID IntNode)
(PUNCT "(")
(ID ConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID unsigned)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID longness)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID is_c_literal)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(PUNCT "**")
(ID kwds)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(PUNCT "**")
(ID kwds)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "s")
(KEYWORD not)
(KEYWORD in)
(ID kwds)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID find_suitable_type_for_value)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID find_suitable_type_for_value)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID constant_result)
(KEYWORD is)
(ID constant_value_not_set)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID calculate_constant_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID ValueError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_c_literal)
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID unsigned)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rank)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT "==")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(LIT "2")
(KEYWORD or)
(LIT "1")
(NEWLINE)
(ID suitable_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID modifiers_and_name_to_type)
(PUNCT "[")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID unsigned)
(PUNCT ",")
(ID rank)
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID suitable_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID suitable_type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "-")
(LIT "2")
(PUNCT "**")
(LIT "31")
(PUNCT "<=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "<")
(LIT "2")
(PUNCT "**")
(LIT "31")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID suitable_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID suitable_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_long_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID suitable_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID suitable_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID dst_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID FloatNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID int)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID FloatNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID not_a_constant)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_numeric)
(KEYWORD and)
(KEYWORD not)
(ID dst_type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ",")
(ID is_c_literal)
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID unsigned)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unsigned)
(PUNCT ",")
(ID longness)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ",")
(ID is_c_literal)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID unsigned)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unsigned)
(PUNCT ",")
(ID longness)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID unsigned)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unsigned)
(PUNCT ",")
(ID longness)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID ConstNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID node)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ",")
(ID unsigned)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unsigned)
(PUNCT ",")
(ID longness)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID plain_integer_string)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID Utils)
(PUNCT ".")
(ID str_to_number)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_int)
(PUNCT "(")
(ID plain_integer_string)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_constant_c_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID unsigned)
(PUNCT ",")
(ID longness)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unsigned)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID longness)
(NEWLINE)
(ID literal)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value_as_c_integer_string)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID unsigned)
(KEYWORD or)
(ID longness)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID literal)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "==")
(LIT "s")
(KEYWORD and)
(ID literal)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT "!=")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID rank)
(PUNCT ">=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_longlong_type)
(PUNCT ".")
(ID rank)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID longness)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID rank)
(PUNCT ">=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_long_type)
(PUNCT ".")
(ID rank)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID longness)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID literal)
(PUNCT "+")
(ID unsigned)
(PUNCT "+")
(ID longness)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID value_as_c_integer_string)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID value)
(PUNCT ")")
(PUNCT "<=")
(LIT "2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID value)
(NEWLINE)
(DEDENT)
(ID neg_sign)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID value)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID neg_sign)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID value)
(PUNCT "=")
(ID value)
(PUNCT "[")
(LIT "1")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID value)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID literal_type)
(PUNCT "=")
(ID value)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID neg_sign)
(KEYWORD and)
(ID literal_type)
(KEYWORD in)
(LIT "s")
(KEYWORD and)
(ID value)
(PUNCT "[")
(LIT "2")
(PUNCT ":")
(PUNCT "]")
(PUNCT ".")
(ID isdigit)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID Utils)
(PUNCT ".")
(ID str_to_number)
(PUNCT "(")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID literal_type)
(KEYWORD in)
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(LIT "s")
(PUNCT "+")
(ID value)
(PUNCT "[")
(LIT "2")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID literal_type)
(KEYWORD in)
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID int)
(PUNCT "(")
(ID value)
(PUNCT "[")
(LIT "2")
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT "2")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID value)
(PUNCT ".")
(ID isdigit)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID unsigned)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID longness)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID neg_sign)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID int)
(PUNCT "(")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID neg_sign)
(PUNCT "+")
(ID value)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID Utils)
(PUNCT ".")
(ID str_to_number)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID Utils)
(PUNCT ".")
(ID str_to_number)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID FloatNode)
(PUNCT "(")
(ID ConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_double_type)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID FloatNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID float_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_float)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID FloatNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID ConstNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID strval)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(KEYWORD assert)
(ID isinstance)
(PUNCT "(")
(ID strval)
(PUNCT ",")
(ID basestring)
(PUNCT ")")
(NEWLINE)
(ID cmpval)
(PUNCT "=")
(ID repr)
(PUNCT "(")
(ID float)
(PUNCT "(")
(ID strval)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID cmpval)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID cmpval)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID cmpval)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID strval)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID c_value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_constant_c_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID c_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID c_value)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID _analyse_name_as_type)
(PUNCT "(")
(ID name)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID parse_basic_type)
(PUNCT "(")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type)
(NEWLINE)
(DEDENT)
(ID global_entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID global_scope)
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID global_entry)
(KEYWORD and)
(ID global_entry)
(PUNCT ".")
(ID type)
(KEYWORD and)
(PUNCT "(")
(ID global_entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID global_entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_struct_or_union)
(KEYWORD or)
(ID global_entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD or)
(ID global_entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID global_entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD from)
(PUNCT ".")
(ID TreeFragment)
(KEYWORD import)
(ID TreeFragment)
(NEWLINE)
(KEYWORD with)
(ID local_errors)
(PUNCT "(")
(ID ignore)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID pos)
(PUNCT "=")
(PUNCT "(")
(ID pos)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ",")
(ID pos)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT ",")
(ID pos)
(PUNCT "[")
(LIT "2")
(PUNCT "]")
(PUNCT "-")
(LIT "7")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID declaration)
(PUNCT "=")
(ID TreeFragment)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID name)
(PUNCT ",")
(ID name)
(PUNCT "=")
(ID pos)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID filename)
(PUNCT ",")
(ID initial_pos)
(PUNCT "=")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID CompileError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sizeof_node)
(PUNCT "=")
(ID declaration)
(PUNCT ".")
(ID root)
(PUNCT ".")
(ID stats)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID expr)
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID sizeof_node)
(PUNCT ",")
(ID SizeofTypeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sizeof_node)
(PUNCT "=")
(ID sizeof_node)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID sizeof_node)
(PUNCT ",")
(ID SizeofTypeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID sizeof_node)
(PUNCT ".")
(ID arg_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID BytesNode)
(PUNCT "(")
(ID ConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_string_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID bytes_type)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_sliced_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID start)
(PUNCT ",")
(ID stop)
(PUNCT ",")
(ID step)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID bytes_literal)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "[")
(ID start)
(PUNCT ":")
(ID stop)
(PUNCT ":")
(ID step)
(PUNCT "]")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID encoding)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID BytesNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID byteencode)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID _analyse_name_as_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID decode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID can_coerce_to_char_literal)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID bool_value)
(PUNCT "=")
(ID bool)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID BoolNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID bool_value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID bool_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "==")
(ID dst_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID can_coerce_to_char_literal)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_unicode_char)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID CharNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID ord)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID BytesNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(KEYWORD in)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID check_for_coercion_error)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID fail)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(KEYWORD in)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_char_ptr_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(KEYWORD in)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_ptr_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_uchar_ptr_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_void_ptr_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_char_ptr_type)
(KEYWORD if)
(ID dst_type)
(PUNCT "==")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_uchar_ptr_type)
(KEYWORD else)
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID CastNode)
(PUNCT "(")
(ID node)
(PUNCT ",")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID dst_type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(ID dst_type)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID ConstNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID node)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_string_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_string_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID literal)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID as_c_string_literal)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID result)
(PUNCT "=")
(ID typecast)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_void_ptr_type)
(PUNCT ",")
(ID literal)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID UnicodeNode)
(PUNCT "(")
(ID ConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_string_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID bytes_value)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID unicode_type)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID _analyse_name_as_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_sliced_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID start)
(PUNCT ",")
(ID stop)
(PUNCT ",")
(ID step)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID StringEncoding)
(PUNCT ".")
(ID string_contains_surrogates)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "[")
(PUNCT ":")
(ID stop)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID value)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "[")
(ID start)
(PUNCT ":")
(ID stop)
(PUNCT ":")
(ID step)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID value)
(PUNCT ".")
(ID encoding)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID encoding)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID bytes_value)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID bytes_value)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID bytes_literal)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID bytes_value)
(PUNCT "[")
(ID start)
(PUNCT ":")
(ID stop)
(PUNCT ":")
(ID step)
(PUNCT "]")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID bytes_value)
(PUNCT ".")
(ID encoding)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID bytes_value)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID UnicodeNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ",")
(ID bytes_value)
(PUNCT "=")
(ID bytes_value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(KEYWORD is)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_unicode_char)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID can_coerce_to_char_literal)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID int_value)
(PUNCT "=")
(ID ord)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID int_value)
(PUNCT ")")
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID int_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_string)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID bytes_value)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID BytesNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID bytes_value)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID UnicodeNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID basestring_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID check_for_coercion_error)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID fail)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID can_coerce_to_char_literal)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID bool_value)
(PUNCT "=")
(ID bool)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID BoolNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID bool_value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID bool_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID contains_surrogates)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID StringEncoding)
(PUNCT ".")
(ID string_contains_surrogates)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID contains_surrogates)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_const)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID data_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_pyunicode_ptr_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_cached_constants_writer)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT ",")
(ID data_cname)
(PUNCT ",")
(ID data_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_string_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_pyunicode_ptr_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID StringNode)
(PUNCT "(")
(ID PyConstNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID str_type)
(NEWLINE)
(ID is_string_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_identifier)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID unicode_value)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID unicode_value)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unicode_value)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID _analyse_name_as_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unicode_value)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID decode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_sliced_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID start)
(PUNCT ",")
(ID stop)
(PUNCT ",")
(ID step)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "[")
(ID start)
(PUNCT ":")
(ID stop)
(PUNCT ":")
(ID step)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID value)
(PUNCT ".")
(ID encoding)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID encoding)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID unicode_value)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID StringEncoding)
(PUNCT ".")
(ID string_contains_surrogates)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unicode_value)
(PUNCT "[")
(PUNCT ":")
(ID stop)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID unicode_value)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unicode_value)
(PUNCT "[")
(ID start)
(PUNCT ":")
(ID stop)
(PUNCT ":")
(ID step)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID unicode_value)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID StringNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ",")
(ID unicode_value)
(PUNCT "=")
(ID unicode_value)
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID value)
(PUNCT ",")
(ID is_identifier)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID is_identifier)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(KEYWORD is)
(KEYWORD not)
(ID py_object_type)
(KEYWORD and)
(KEYWORD not)
(ID str_type)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID BytesNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(KEYWORD is)
(KEYWORD not)
(ID Builtin)
(PUNCT ".")
(ID basestring_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID check_for_coercion_error)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID fail)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID can_coerce_to_char_literal)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_identifier)
(KEYWORD and)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_string_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID identifier)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID is_identifier)
(PUNCT ",")
(ID is_str)
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID unicode_value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unicode_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID is_unicode)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID IS_PYTHON3)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID byteencode)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID unicode_value)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID unicode_value)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID decode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID IdentifierStringNode)
(PUNCT "(")
(ID StringNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_identifier)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID ImagNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_double_complex_type)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID complex)
(PUNCT "(")
(LIT "0.0")
(PUNCT ",")
(ID float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID complex)
(PUNCT "(")
(LIT "0.0")
(PUNCT ",")
(ID float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID create_declaration_utility_code)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID dst_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID ImagNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID complex_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID AtomicExprNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID node)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_parts)
(PUNCT ",")
(ID float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID float)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NewExprNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cppclass)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(KEYWORD not)
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID cpp_check)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID constructor)
(PUNCT "=")
(ID type)
(PUNCT ".")
(ID get_constructor)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID class_type)
(PUNCT "=")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID constructor)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID constructor)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "+")
(ID self)
(PUNCT ".")
(ID class_type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NameNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_name)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_cython_module)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID cython_attribute)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID lhs_of_first_assignment)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_used_as_rvalue)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(ID entry)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID type_entry)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID cf_maybe_null)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID cf_is_null)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID allow_null)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID nogil)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID inferred_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID as_cython_attribute)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID cython_attribute)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_unspecified)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID self)
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unspecified_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID inferred_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID inferred_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID name)
(PUNCT "==")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID name)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID is_builtin_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID inferred_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID inferred_type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID might_overflow)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID inferred_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID denv)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID KeyError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID cname)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID var_entry)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID as_variable)
(NEWLINE)
(KEYWORD if)
(ID var_entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID var_entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD and)
(ID var_entry)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID var_entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID declare_builtin)
(PUNCT "(")
(ID var_entry)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID NameNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID var_entry)
(NEWLINE)
(ID node)
(PUNCT ".")
(ID analyse_rvalue_entry)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID NameNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID declare_from_annotation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID as_target)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID is_module_scope)
(KEYWORD or)
(ID env)
(PUNCT ".")
(ID is_py_class_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID name)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD or)
(ID env)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID name)
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID annotation)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID annotation)
(NEWLINE)
(KEYWORD if)
(ID annotation)
(PUNCT ".")
(ID is_string_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID atype)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID _)
(PUNCT ",")
(ID atype)
(PUNCT "=")
(ID analyse_type_annotation)
(PUNCT "(")
(ID annotation)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID atype)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID atype)
(PUNCT "=")
(ID unspecified_type)
(KEYWORD if)
(ID as_target)
(KEYWORD and)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT "!=")
(KEYWORD False)
(KEYWORD else)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID declare_var)
(PUNCT "(")
(ID name)
(PUNCT ",")
(ID atype)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID is_cdef)
(PUNCT "=")
(KEYWORD not)
(ID as_target)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID annotation)
(PUNCT "=")
(ID annotation)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_module)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID as_module)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID as_module)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cython_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID parse_basic_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID cython_attribute)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID parse_basic_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type)
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_as_extension_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID annotation)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID declare_from_annotation)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID as_target)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ",")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT "!=")
(KEYWORD False)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID unspecified_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID declare_var)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_declared_generic)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_module)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_variable)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID initialized_check)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID declare_builtin)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID entry)
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_buffer)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Buffer)
(NEWLINE)
(ID Buffer)
(PUNCT ".")
(ID used_buffer_aux_vars)
(PUNCT "(")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID analyse_rvalue_entry)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_entry)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID is_target)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID as_variable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_overridable)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_overridable)
(PUNCT ")")
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_lvalue)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID fused_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID as_variable)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_lvalue)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_buffer)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Buffer)
(NEWLINE)
(ID Buffer)
(PUNCT ".")
(ID used_buffer_aux_vars)
(PUNCT "(")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_rvalue_entry)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_entry)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_declared_generic)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_pyglobal)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_used_as_rvalue)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_used_as_rvalue)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_used_as_rvalue)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID is_pyglobal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID analyse_entry)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID is_target)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID check_identifier_kind)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID is_target)
(KEYWORD and)
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID inferred_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID inferred_type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID inferred_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_identifier_kind)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_type)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_entry)
(PUNCT "=")
(ID entry)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_type)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_enum)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID py_entry)
(PUNCT "=")
(ID Symtab)
(PUNCT ".")
(ID Entry)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID py_entry)
(PUNCT ".")
(ID is_pyglobal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID py_entry)
(PUNCT ".")
(ID scope)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID scope)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID py_entry)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_const)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_variable)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_variable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_variable)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_cython_module)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_cimported_module_without_shadow)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cython_module)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID cython_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD or)
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID as_module)
(KEYWORD and)
(KEYWORD not)
(ID entry)
(PUNCT ".")
(ID is_variable)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cf_state)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID getattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID _none_checking)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID may_be_none)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID assignment)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID cf_state)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID assignment)
(PUNCT ".")
(ID rhs)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID may_be_none)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD del)
(ID self)
(PUNCT ".")
(ID _none_checking)
(NEWLINE)
(KEYWORD return)
(ID may_be_none)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID NameNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID ExprNode)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID in_closure)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID is_local)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_arg)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_readonly)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_target_results)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_const)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_const)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const_addr)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_cglobal)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID addr_not_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_lvalue)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_variable)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_readonly)
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_overridable)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_addressable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_variable)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "0")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID cname)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID is_pyclass_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID interned_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID namespace)
(PUNCT "=")
(ID Naming)
(PUNCT ".")
(ID builtins_cname)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID namespace)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID namespace_cname)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cf_is_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID namespace)
(PUNCT ",")
(ID interned_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID interned_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cf_is_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD and)
(KEYWORD not)
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID interned_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID interned_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID is_pyglobal)
(KEYWORD or)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID interned_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID interned_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID namespace_cname)
(PUNCT ",")
(ID interned_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID is_local)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID in_closure)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID from_closure)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID raise_unbound)
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID cf_maybe_null)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID cf_is_null)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID allow_null)
(PUNCT ")")
(NEWLINE)
(ID null_code)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID check_for_null_code)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ")")
(NEWLINE)
(ID memslice_check)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID initialized_check)
(NEWLINE)
(KEYWORD if)
(ID null_code)
(KEYWORD and)
(ID raise_unbound)
(KEYWORD and)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID memslice_check)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_unbound)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID entry)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID exception_check)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID exception_value)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID ListNode)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID lhs_of_first_assignment)
(KEYWORD and)
(KEYWORD not)
(ID rhs)
(PUNCT ".")
(ID in_module_scope)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_pyglobal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID interned_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID namespace)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID namespace_cname)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_member)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID setter)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID namespace)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID namespace)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID setter)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID namespace)
(PUNCT "=")
(ID Naming)
(PUNCT ".")
(ID moddict_cname)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID entry)
(PUNCT ".")
(ID is_pyclass_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID setter)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(KEYWORD False)
(PUNCT ",")
(ID repr)
(PUNCT "(")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID setter)
(PUNCT ",")
(ID namespace)
(PUNCT ",")
(ID interned_cname)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID debug_disposal_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID print)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID print)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID rhs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_member)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID parent_type)
(PUNCT ".")
(ID typeptr_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_acquire_memoryviewslice)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_buffer)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_acquire_buffer)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID assigned)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhs)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID is_external_ref)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID is_cglobal)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID in_closure)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID from_closure)
(NEWLINE)
(KEYWORD if)
(ID is_external_ref)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cf_is_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cf_maybe_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xgotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID assigned)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_cglobal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref_set)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cf_is_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cf_maybe_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xdecref_set)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref_set)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID assigned)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID is_external_ref)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID assigned)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID overloaded_assignment)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID result)
(PUNCT ")")
(PUNCT ",")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID result)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID result)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID result)
(PUNCT "!=")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID result)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID debug_disposal_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID print)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID print)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID rhs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID rhs)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID rhs)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhs)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_acquire_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(ID MemoryView)
(PUNCT ".")
(ID put_acquire_memoryviewslice)
(PUNCT "(")
(ID lhs_cname)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID lhs_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID lhs_pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID rhs)
(PUNCT "=")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT "=")
(ID code)
(PUNCT ",")
(ID have_gil)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ",")
(ID first_assignment)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cf_is_null)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_acquire_buffer)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID pretty_rhs)
(PUNCT "=")
(ID isinstance)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID NameNode)
(PUNCT ")")
(KEYWORD or)
(ID rhs)
(PUNCT ".")
(ID is_temp)
(NEWLINE)
(KEYWORD if)
(ID pretty_rhs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhstmp)
(PUNCT "=")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhstmp)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID rhstmp)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Buffer)
(NEWLINE)
(ID Buffer)
(PUNCT ".")
(ID put_assign_to_buffer)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhstmp)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ",")
(ID is_initialized)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID lhs_of_first_assignment)
(PUNCT ",")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID code)
(PUNCT "=")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID pretty_rhs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID rhstmp)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID rhstmp)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_deletion_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID ignore_nonexisting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_pyclass_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID namespace)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID namespace_cname)
(NEWLINE)
(ID interned_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID ignore_nonexisting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID key_error_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID key_error_code)
(PUNCT "=")
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID namespace)
(PUNCT ",")
(ID interned_cname)
(PUNCT ",")
(ID key_error_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_pyglobal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID interned_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID del_code)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID module_cname)
(PUNCT ",")
(ID interned_cname)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID ignore_nonexisting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID del_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID del_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cf_is_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cf_maybe_null)
(KEYWORD and)
(KEYWORD not)
(ID ignore_nonexisting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_unbound)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID in_closure)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID ignore_nonexisting)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID cf_maybe_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xgotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID ignore_nonexisting)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID cf_maybe_null)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xdecref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xdecref_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ",")
(ID have_gil)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID is_called)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID pos)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT "[")
(LIT "2")
(PUNCT "]")
(PUNCT "-")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(PUNCT "-")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID style)
(PUNCT ",")
(ID text)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID style)
(PUNCT ",")
(ID text)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID AnnotationItem)
(PUNCT "(")
(ID style)
(PUNCT ",")
(ID text)
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID size)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID BackquoteNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID repr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ImportNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID level)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD or)
(ID Future)
(PUNCT ".")
(ID absolute_import)
(KEYWORD not)
(KEYWORD in)
(ID env)
(PUNCT ".")
(ID global_scope)
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID context)
(PUNCT ".")
(ID future_directives)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID level)
(PUNCT "=")
(PUNCT "-")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID level)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID module_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID module_name)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID module_name)
(PUNCT "=")
(ID module_name)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID name_list)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name_list)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID name_list)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID name_list)
(PUNCT "=")
(ID name_list)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID name_list)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name_list_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID name_list)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name_list_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID import_code)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID module_name)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID name_list_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID level)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID level)
(PUNCT "<=")
(LIT "0")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID module_name)
(PUNCT ".")
(ID is_string_literal)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID module_name)
(PUNCT ".")
(ID value)
(KEYWORD in)
(ID utility_code_for_imports)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID helper_func)
(PUNCT ",")
(ID code_name)
(PUNCT ",")
(ID code_file)
(PUNCT "=")
(ID utility_code_for_imports)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID module_name)
(PUNCT ".")
(ID value)
(PUNCT "]")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(ID code_name)
(PUNCT ",")
(ID code_file)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID import_code)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID helper_func)
(PUNCT ",")
(ID import_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID import_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID IteratorNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID iter_func_ptr)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID counter_cname)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID cpp_iterator_cname)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID reversed)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_async)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_cpp_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID _func_iternext_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID CFuncType)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ",")
(PUNCT "[")
(ID PyrexTypes)
(PUNCT ".")
(ID CFuncTypeArg)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID sequence_type)
(PUNCT ".")
(ID is_array)
(KEYWORD or)
(ID sequence_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID sequence_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID sequence_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID begin)
(PUNCT "=")
(ID sequence_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID begin)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID begin)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID sequence_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID sequence_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_cpp_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID sequence_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type)
(PUNCT "=")
(ID sequence_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(ID begin)
(PUNCT "=")
(ID sequence_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID end)
(PUNCT "=")
(ID sequence_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID begin)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(KEYWORD not)
(ID begin)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD or)
(ID begin)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID end)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(KEYWORD not)
(ID end)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD or)
(ID end)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID iter_type)
(PUNCT "=")
(ID begin)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(KEYWORD if)
(ID iter_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID lookup_operator_for_types)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(PUNCT "[")
(ID iter_type)
(PUNCT ",")
(ID end)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID return_type)
(PUNCT "]")
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID lookup_operator_for_types)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(PUNCT "[")
(ID iter_type)
(PUNCT "]")
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID lookup_operator_for_types)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(PUNCT "[")
(ID iter_type)
(PUNCT "]")
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID iter_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID iter_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID iter_type)
(PUNCT "==")
(ID end)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID return_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID iter_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID sequence_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID is_name)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID begin_func)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_ptr_type)
(PUNCT "(")
(ID sequence_type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID cpp_iterator_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID sequence_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID cpp_iterator_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID begin_func)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID cpp_iterator_cname)
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID begin_func)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID sequence_type)
(PUNCT ".")
(ID is_array)
(KEYWORD or)
(ID sequence_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID InternalError)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID is_builtin_sequence)
(PUNCT "=")
(ID sequence_type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID is_builtin_sequence)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID reversed)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID may_be_a_sequence)
(PUNCT "=")
(KEYWORD not)
(ID sequence_type)
(PUNCT ".")
(ID is_builtin_type)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID may_be_a_sequence)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID is_builtin_sequence)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID may_be_a_sequence)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID reversed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID sequence_type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID init_value)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID init_value)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID init_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ",")
(ID init_value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID is_builtin_sequence)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID _func_iternext_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID may_be_a_sequence)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID may_be_a_sequence)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_next_sequence_item)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID test_name)
(PUNCT ",")
(ID result_name)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID final_size)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID test_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_count)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID mult_factor)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID final_size)
(PUNCT "=")
(ID item_count)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID final_size)
(PUNCT "=")
(ID item_count)
(PUNCT "*")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ",")
(ID final_size)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID reversed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID inc_dec)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID inc_dec)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_name)
(PUNCT ",")
(ID test_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ",")
(ID result_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ",")
(ID inc_dec)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ",")
(ID inc_dec)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID result_name)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_iter_next_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID result_name)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID reversed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID sequence_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cpp_iterator_cname)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID end_func)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID cpp_iterator_cname)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID end_func)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID end_func)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID sequence_type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_next_sequence_item)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID result_name)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID sequence_type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_next_sequence_item)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID result_name)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID may_be_a_sequence)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_next_sequence_item)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID result_name)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_next_sequence_item)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID result_name)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID result_name)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID result_name)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID counter_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID iter_func_ptr)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cpp_iterator_cname)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID cpp_iterator_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID ExprNode)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NextNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID iterator)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID AtomicExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID iterator)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT "=")
(ID iterator)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID iterator_type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID iterator_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID iterator_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID iterator_type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID iterator_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID iterator_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID iterator_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_type)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup_operator_for_types)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(PUNCT "[")
(ID iterator_type)
(PUNCT "]")
(PUNCT ")")
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(KEYWORD if)
(ID item_type)
(PUNCT ".")
(ID is_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_type)
(PUNCT "=")
(ID item_type)
(PUNCT ".")
(ID ref_base_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID item_type)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_type)
(PUNCT "=")
(ID item_type)
(PUNCT ".")
(ID const_base_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID item_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID fake_index_node)
(PUNCT "=")
(ID IndexNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT ".")
(ID sequence)
(PUNCT ",")
(ID index)
(PUNCT "=")
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID fake_index_node)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT ".")
(ID generate_iter_next_result_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AsyncIteratorNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_async)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID sequence)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AsyncNextNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID iterator)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID AtomicExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID iterator)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT "=")
(ID iterator)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID iterator)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID WithExitCallNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID test_if_run)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID await_expr)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID test_if_run)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID with_stat)
(PUNCT ".")
(ID exit_var)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID result_var)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_var)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID with_stat)
(PUNCT ".")
(ID exit_var)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID with_stat)
(PUNCT ".")
(ID exit_var)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result_var)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID result_var)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID source_cname)
(PUNCT "=")
(ID result_var)
(PUNCT ",")
(ID decref_source)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_var)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID await_expr)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result_is_used)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID result_var)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID result_var)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result_is_used)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID result_var)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID test_if_run)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ExcValueNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID set_var)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID var)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID var)
(PUNCT "=")
(ID var)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID var)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID TempNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID allocate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID temp_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID release)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID temp_cname)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID temp_cname)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID temp_cname)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(KEYWORD False)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID allocate_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID release_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyTempNode)
(PUNCT "(")
(ID TempNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID TempNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID RawCNameExprNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID cname)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID cname)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cname)
(PUNCT "=")
(ID cname)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID set_cname)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID cname)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cname)
(PUNCT "=")
(ID cname)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID cname)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID JoinedStrNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID unicode_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID values)
(PUNCT "=")
(PUNCT "[")
(ID v)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID v)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID values)
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID num_items)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID values)
(PUNCT ")")
(NEWLINE)
(ID list_var)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID ulength_var)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID max_char_var)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ucs4_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID list_var)
(PUNCT ",")
(ID num_items)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID list_var)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID list_var)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID ulength_var)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID max_char_var)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID node)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID values)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID ulength)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID node)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID max_char_value)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID node)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID is_ascii)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID node)
(PUNCT ",")
(ID UnicodeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID encode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID max_char_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID encode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID is_ascii)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID UnicodeEncodeError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID max_char_value)
(PUNCT "!=")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID max_char)
(PUNCT "=")
(ID max)
(PUNCT "(")
(ID map)
(PUNCT "(")
(ID ord)
(PUNCT ",")
(ID node)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID max_char)
(PUNCT "<")
(LIT "0xD800")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID max_char_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID ulength)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID max_char)
(PUNCT ">=")
(LIT "65536")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID max_char_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID ulength)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ulength)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID node)
(PUNCT ",")
(ID FormattedValueNode)
(PUNCT ")")
(KEYWORD and)
(ID node)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_numeric)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_ascii)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID is_ascii)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID max_char_var)
(PUNCT ",")
(ID max_char_value)
(PUNCT ",")
(ID max_char_var)
(PUNCT ",")
(ID max_char_value)
(PUNCT ",")
(ID max_char_var)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID ulength_var)
(PUNCT ",")
(ID ulength)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID list_var)
(PUNCT ",")
(ID i)
(PUNCT ",")
(ID node)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID list_var)
(PUNCT ",")
(ID num_items)
(PUNCT ",")
(ID ulength_var)
(PUNCT ",")
(ID max_char_var)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID list_var)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID list_var)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID ulength_var)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID max_char_var)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID FormattedValueNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID unicode_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID c_format_spec)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID find_conversion_func)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "}")
(PUNCT ".")
(ID get)
(NEWLINE)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID format_spec)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT ".")
(ID is_string_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID c_format_spec)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT ".")
(ID value)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID format_spec)
(KEYWORD else)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID default_format_spec)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID can_coerce_to_pystring)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID format_spec)
(PUNCT "=")
(ID c_format_spec)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID c_format_spec)
(PUNCT "=")
(ID c_format_spec)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID c_format_spec)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID format_spec)
(KEYWORD and)
(PUNCT "(")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID conversion_char)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID conversion_char)
(PUNCT "==")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID value)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID c_format_spec)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID convert_func_call)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID convert_to_pystring)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID c_format_spec)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID convert_func_call)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID value_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID value_is_unicode)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID format_func)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID format_spec)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID format_func)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID format_spec)
(PUNCT "=")
(ID Naming)
(PUNCT ".")
(ID empty_unicode)
(NEWLINE)
(DEDENT)
(ID conversion_char)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID conversion_char)
(NEWLINE)
(KEYWORD if)
(ID conversion_char)
(PUNCT "==")
(LIT "s")
(KEYWORD and)
(ID value_is_unicode)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID conversion_char)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID conversion_char)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID fn)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID find_conversion_func)
(PUNCT "(")
(ID conversion_char)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID fn)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID conversion_char)
(NEWLINE)
(ID value_result)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID fn)
(PUNCT ",")
(ID value_result)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID format_func)
(PUNCT "+=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID format_spec)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID format_func)
(PUNCT ",")
(ID value_result)
(PUNCT ",")
(ID format_spec)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ParallelThreadsAvailableNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID temp_code)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ParallelThreadIdNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID temp_code)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID _IndexingBaseNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID basestring_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const_addr)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID check_const_addr)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_lvalue)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ref_base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID IndexNode)
(PUNCT "(")
(ID _IndexingBaseNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID type_indices)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_subscript)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_fused_index)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID constant_result)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base)
(PUNCT "[")
(ID index)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID base)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD and)
(PUNCT "(")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID SliceNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ",")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID base_type)
(KEYWORD and)
(KEYWORD not)
(ID base_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID TupleNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID template_values)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID template_values)
(PUNCT "=")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID type_node)
(PUNCT "=")
(ID Nodes)
(PUNCT ".")
(ID TemplatedTypeNode)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID positional_args)
(PUNCT "=")
(ID template_values)
(PUNCT ",")
(ID keyword_args)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID type_node)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID base_type)
(PUNCT "=")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID index)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID CArrayType)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(ID int)
(PUNCT "(")
(ID index)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT "+")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID is_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID bytes_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID unicode_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID bytes_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID index_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID index_type)
(KEYWORD and)
(ID index_type)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID IntNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID base_type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ucs4_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(KEYWORD is)
(ID str_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(KEYWORD is)
(ID bytearray_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ",")
(ID BytesNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID tuple_type)
(PUNCT ",")
(ID list_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_type)
(PUNCT "=")
(ID infer_sequence_item_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID seq_type)
(PUNCT "=")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID item_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID item_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_ctuple)
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID IntNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(KEYWORD if)
(ID index)
(PUNCT "<")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "+=")
(ID base_type)
(PUNCT ".")
(ID size)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "0")
(PUNCT "<=")
(ID index)
(PUNCT "<")
(ID base_type)
(PUNCT ".")
(ID size)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base_type)
(PUNCT ".")
(ID components)
(PUNCT "[")
(ID index)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD class)
(ID FakeOperand)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(PUNCT "**")
(ID kwds)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID __dict__)
(PUNCT ".")
(ID update)
(PUNCT "(")
(ID kwds)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID operands)
(PUNCT "=")
(PUNCT "[")
(ID FakeOperand)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID base_type)
(PUNCT ")")
(PUNCT ",")
(ID FakeOperand)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID index_type)
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID index_func)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup_operator)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID operands)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID index_func)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID index_func)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID base_type)
(PUNCT ")")
(KEYWORD and)
(ID is_pythran_expr)
(PUNCT "(")
(ID index_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_with_type)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID index_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID PythranExpr)
(PUNCT "(")
(ID pythran_indexing_type)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(PUNCT "[")
(ID index_with_type)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID unicode_type)
(PUNCT ",")
(ID str_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_base_and_index_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_base_and_index_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID setting)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID node)
(KEYWORD is)
(ID self)
(KEYWORD and)
(KEYWORD not)
(ID node)
(PUNCT ".")
(ID is_lvalue)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID node)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_base_and_index_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID setting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID analyse_base)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID analyse_base)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID is_slice)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID is_slice)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID check_negative_indices)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID start)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID stop)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID check_negative_indices)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID is_slice)
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID IntNode)
(PUNCT ")")
(KEYWORD and)
(ID Utils)
(PUNCT ".")
(ID long_literal)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID is_memslice)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID is_memslice)
(KEYWORD and)
(PUNCT "(")
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ",")
(ID BytesNode)
(PUNCT ")")
(KEYWORD or)
(ID is_slice)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID replacement_node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_as_buffer_operation)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID replacement_node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID replacement_node)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID nogil)
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID base_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID original_index_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_unicode_char)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID setting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID level)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(KEYWORD in)
(PUNCT "(")
(LIT "0")
(PUNCT ",")
(PUNCT "-")
(LIT "1")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_as_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID is_slice)
(PUNCT ",")
(ID getting)
(PUNCT ",")
(ID setting)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_as_c_array)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID is_slice)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_as_cpp)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID setting)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_as_c_function)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_ctuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_as_c_tuple)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ",")
(ID setting)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_as_pyobject)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID is_slice)
(PUNCT ",")
(ID getting)
(PUNCT ",")
(ID setting)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_unicode_char)
(KEYWORD and)
(ID base_type)
(KEYWORD is)
(KEYWORD not)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT ",")
(ID level)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID base_type)
(KEYWORD is)
(KEYWORD not)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID getting)
(KEYWORD and)
(PUNCT "(")
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ")")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(KEYWORD or)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD or)
(PUNCT "(")
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID IntNode)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(PUNCT ">=")
(LIT "0")
(PUNCT ")")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID original_index_type)
(PUNCT ".")
(ID create_to_py_utility_code)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID base_type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ucs4_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID base_type)
(KEYWORD is)
(ID bytearray_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID setting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID is_slice)
(KEYWORD and)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ",")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_type)
(PUNCT "=")
(ID infer_sequence_item_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID seq_type)
(PUNCT "=")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID item_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID item_type)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ",")
(ID dict_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID wrap_in_nonecheck_node)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_c_array)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID is_slice)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(KEYWORD if)
(ID is_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_cpp)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID setting)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID function)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup_operator)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID function)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID func_type)
(PUNCT "=")
(ID function)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_check)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_value)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID setting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_value)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(KEYWORD if)
(ID setting)
(KEYWORD and)
(KEYWORD not)
(ID func_type)
(PUNCT ".")
(ID return_type)
(PUNCT ".")
(ID is_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_c_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID parse_indexed_fused_cdef)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_indices)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID parse_index_as_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID templates)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type_indices)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID len)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID templates)
(PUNCT ")")
(PUNCT "!=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type_indices)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID templates)
(PUNCT ")")
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type_indices)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID specialize)
(PUNCT "(")
(ID dict)
(PUNCT "(")
(ID zip)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID templates)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type_indices)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_c_tuple)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ",")
(ID setting)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID IntNode)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(KEYWORD if)
(PUNCT "-")
(ID base_type)
(PUNCT ".")
(ID size)
(PUNCT "<=")
(ID index)
(PUNCT "<")
(ID base_type)
(PUNCT ".")
(ID size)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID index)
(PUNCT "<")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "+=")
(ID base_type)
(PUNCT ".")
(ID size)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID components)
(PUNCT "[")
(ID index)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID index)
(PUNCT ",")
(ID base_type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_base_and_index_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(ID getting)
(PUNCT ",")
(ID setting)
(PUNCT "=")
(ID setting)
(PUNCT ",")
(ID analyse_base)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_as_buffer_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID TupleNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID indices)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID indices)
(PUNCT "=")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID replacement_node)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(KEYWORD if)
(ID base)
(PUNCT ".")
(ID is_memview_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID merged_indices)
(PUNCT "=")
(ID base)
(PUNCT ".")
(ID merged_indices)
(PUNCT "(")
(ID indices)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID merged_indices)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base)
(PUNCT "=")
(ID base)
(PUNCT ".")
(ID base)
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID indices)
(PUNCT "=")
(ID merged_indices)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID have_slices)
(PUNCT ",")
(ID indices)
(PUNCT ",")
(ID newaxes)
(PUNCT "=")
(ID MemoryView)
(PUNCT ".")
(ID unellipsify)
(PUNCT "(")
(ID indices)
(PUNCT ",")
(ID base_type)
(PUNCT ".")
(ID ndim)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID have_slices)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID replacement_node)
(PUNCT "=")
(ID MemoryViewSliceNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID indices)
(PUNCT "=")
(ID indices)
(PUNCT ",")
(ID base)
(PUNCT "=")
(ID base)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID replacement_node)
(PUNCT "=")
(ID MemoryViewIndexNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID indices)
(PUNCT "=")
(ID indices)
(PUNCT ",")
(ID base)
(PUNCT "=")
(ID base)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_buffer)
(KEYWORD or)
(ID base_type)
(PUNCT ".")
(ID is_pythran_expr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_pythran_expr)
(KEYWORD or)
(ID len)
(PUNCT "(")
(ID indices)
(PUNCT ")")
(PUNCT "==")
(ID base_type)
(PUNCT ".")
(ID ndim)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_buffer_access)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID indices)
(PUNCT "=")
(PUNCT "[")
(ID index)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID index)
(KEYWORD in)
(ID indices)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_pythran_expr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID do_replacement)
(PUNCT "=")
(ID all)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID index)
(PUNCT ".")
(ID is_slice)
(KEYWORD or)
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pythran_expr)
(KEYWORD for)
(ID index)
(KEYWORD in)
(ID indices)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID do_replacement)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID index)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID indices)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID index)
(PUNCT ".")
(ID is_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "=")
(ID SliceIntNode)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID start)
(PUNCT "=")
(ID index)
(PUNCT ".")
(ID start)
(PUNCT ",")
(ID stop)
(PUNCT "=")
(ID index)
(PUNCT ".")
(ID stop)
(PUNCT ",")
(ID step)
(PUNCT "=")
(ID index)
(PUNCT ".")
(ID step)
(PUNCT ")")
(NEWLINE)
(ID index)
(PUNCT "=")
(ID index)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID indices)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID index)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID do_replacement)
(PUNCT "=")
(ID all)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD for)
(ID index)
(KEYWORD in)
(ID indices)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID do_replacement)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID replacement_node)
(PUNCT "=")
(ID BufferIndexNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID indices)
(PUNCT "=")
(ID indices)
(PUNCT ",")
(ID base)
(PUNCT "=")
(ID base)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(KEYWORD not)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID CloneNode)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID replacement_node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID replacement_node)
(PUNCT "=")
(ID replacement_node)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID replacement_node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID wrap_in_nonecheck_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID parse_index_as_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID required)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID TupleNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID indices)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID indices)
(PUNCT "=")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID type_indices)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID index)
(KEYWORD in)
(ID indices)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_indices)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type_indices)
(PUNCT "[")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID required)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID type_indices)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID parse_indexed_fused_cdef)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_fused_index)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID positions)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID is_name)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID is_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID positions)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ",")
(ID TupleNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID positions)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID specific_types)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID parse_index_as_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID required)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID specific_types)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_variable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_variable)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_fused_index)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID type)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID specific_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID specific_types)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID type)
(PUNCT ".")
(ID specialize_fused)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID fused_types)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID get_fused_types)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID specific_types)
(PUNCT ")")
(PUNCT ">")
(ID len)
(PUNCT "(")
(ID fused_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID len)
(PUNCT "(")
(ID specific_types)
(PUNCT ")")
(PUNCT "<")
(ID len)
(PUNCT "(")
(ID fused_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID t)
(PUNCT "=")
(ID fused_types)
(PUNCT "[")
(ID len)
(PUNCT "(")
(ID specific_types)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT "%")
(ID t)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID pos)
(PUNCT ",")
(ID specific_type)
(PUNCT ",")
(ID fused_type)
(KEYWORD in)
(ID zip)
(PUNCT "(")
(ID positions)
(PUNCT ",")
(ID specific_types)
(PUNCT ",")
(ID fused_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID any)
(PUNCT "(")
(PUNCT "[")
(ID specific_type)
(PUNCT ".")
(ID same_as)
(PUNCT "(")
(ID t)
(PUNCT ")")
(KEYWORD for)
(ID t)
(KEYWORD in)
(ID fused_type)
(PUNCT ".")
(ID types)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID error)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID specific_type)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID specific_type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID fused_to_specific)
(PUNCT "=")
(ID dict)
(PUNCT "(")
(ID zip)
(PUNCT "(")
(ID fused_types)
(PUNCT ",")
(ID specific_types)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID specialize)
(PUNCT "(")
(ID fused_to_specific)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID signature)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID get_all_specialized_function_types)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID same_as)
(PUNCT "(")
(ID signature)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID signature)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID signature)
(PUNCT ".")
(ID entry)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_attribute)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID obj)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID signature)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID signature)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID InternalError)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytearray_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(KEYWORD False)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(PUNCT "[")
(ID param)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID param)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID type_indices)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ctuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(KEYWORD if)
(ID index)
(PUNCT "<")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "+=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID size)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID index)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "==")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID index_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID index_code)
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID extra_index_params)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_list)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(NEWLINE)
(ID wraparound)
(PUNCT "=")
(PUNCT "(")
(ID bool)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID original_index_type)
(PUNCT ".")
(ID signed)
(KEYWORD and)
(KEYWORD not)
(PUNCT "(")
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID constant_result)
(PUNCT ">=")
(LIT "0")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID boundscheck)
(PUNCT "=")
(ID bool)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID original_index_type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID original_index_type)
(PUNCT ".")
(ID signed)
(KEYWORD and)
(LIT "1")
(KEYWORD or)
(LIT "0")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID original_index_type)
(PUNCT ".")
(ID to_py_function)
(PUNCT ",")
(ID is_list)
(PUNCT ",")
(ID wraparound)
(PUNCT ",")
(ID boundscheck)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID utility_code)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID utility_code)
(PUNCT "=")
(ID TempitaUtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID py_object_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID str_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID TempitaUtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_unicode_char)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(NEWLINE)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID error_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytearray_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(NEWLINE)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(NEWLINE)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID error_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(KEYWORD False)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID utility_code)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID utility_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error_check)
(PUNCT "=")
(LIT "s")
(KEYWORD if)
(ID error_value)
(PUNCT "==")
(LIT "s")
(KEYWORD else)
(LIT "s")
(PUNCT "%")
(ID error_value)
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID index_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID extra_index_params)
(PUNCT "(")
(ID code)
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if)
(PUNCT "(")
(ID error_check)
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_setitem_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID value_code)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytearray_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID index_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID function)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID index_code)
(PUNCT ",")
(ID value_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID extra_index_params)
(PUNCT "(")
(ID code)
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID exception_check)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID exception_value)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_setitem_code)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytearray_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID _check_byte_value)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_setitem_code)
(PUNCT "(")
(ID value_code)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID overloaded_assignment)
(KEYWORD and)
(ID exception_check)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT "!=")
(ID exception_value)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_double_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID _check_byte_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ",")
(ID repr)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID value_code)
(PUNCT "=")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID rhs)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "0")
(PUNCT "<=")
(ID rhs)
(PUNCT ".")
(ID constant_result)
(PUNCT "<")
(LIT "256")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID value_code)
(NEWLINE)
(DEDENT)
(ID needs_cast)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID warning)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT "%")
(ID rhs)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID level)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID needs_cast)
(PUNCT "=")
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID conditions)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID rhs)
(PUNCT ".")
(ID is_literal)
(KEYWORD or)
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID conditions)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID value_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID is_literal)
(KEYWORD or)
(KEYWORD not)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID is_temp)
(KEYWORD and)
(ID rhs)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_schar_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID conditions)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID value_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID conditions)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID conditions)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT "%")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID needs_cast)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value_code)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID value_code)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID value_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_deletion_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID ignore_nonexisting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID index_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID index)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID function)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID index_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID extra_index_params)
(PUNCT "(")
(ID code)
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID BufferIndexNode)
(PUNCT "(")
(ID _IndexingBaseNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_buffer_access)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID writable_needed)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(KEYWORD not)
(ID is_pythran_expr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID getting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID writable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID writable_needed)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_buffer)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID buffer_aux)
(PUNCT ".")
(ID writable_needed)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID none_error_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_buffer_index)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID wrap_in_nonecheck_node)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_buffer_index)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index_with_type_list)
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID idx)
(PUNCT ",")
(ID idx)
(PUNCT ".")
(ID type)
(PUNCT ")")
(KEYWORD for)
(ID idx)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PythranExpr)
(PUNCT "(")
(ID pythran_indexing_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID index_with_type_list)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID buffer_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID getting)
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pythran_expr)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_assignment)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID wrap_in_nonecheck_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID none_error_message)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_buffer_access)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID is_memview_index)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID buffer_ptr_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID buffer_entry)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_nonecheck)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base)
(PUNCT "=")
(ID base)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID get_entry)
(PUNCT "(")
(ID base)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_index_in_temp)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID ivar)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ret)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID ivar)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_ssize_t_type)
(KEYWORD if)
(ID ivar)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(KEYWORD else)
(ID PyrexTypes)
(PUNCT ".")
(ID c_size_t_type)
(PUNCT ")")
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID ret)
(PUNCT ",")
(ID ivar)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID ret)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID buffer_lookup_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_buffer_access)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID is_memview_index)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID level)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID index_temps)
(PUNCT "=")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID get_index_in_temp)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID ivar)
(PUNCT ")")
(KEYWORD for)
(ID ivar)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT "]")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Buffer)
(NEWLINE)
(ID buffer_entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID buffer_entry)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID buffer_entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_buffer)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID negative_indices)
(PUNCT "=")
(ID buffer_entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID negative_indices)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID negative_indices)
(PUNCT "=")
(ID Buffer)
(PUNCT ".")
(ID buffer_defaults)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID buffer_entry)
(PUNCT ",")
(ID Buffer)
(PUNCT ".")
(ID put_buffer_lookup_code)
(PUNCT "(")
(ID entry)
(PUNCT "=")
(ID buffer_entry)
(PUNCT ",")
(ID index_signeds)
(PUNCT "=")
(PUNCT "[")
(ID ivar)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(KEYWORD for)
(ID ivar)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT "]")
(PUNCT ",")
(ID index_cnames)
(PUNCT "=")
(ID index_temps)
(PUNCT ",")
(ID directives)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT ",")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID code)
(PUNCT "=")
(ID code)
(PUNCT ",")
(ID negative_indices)
(PUNCT "=")
(ID negative_indices)
(PUNCT ",")
(ID in_nogil_context)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_buffer_setitem_code)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_buffer_setitem_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID op)
(PUNCT "=")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID base_type)
(PUNCT ")")
(KEYWORD and)
(ID is_pythran_supported_type)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PythranExpr)
(PUNCT "(")
(ID pythran_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID obj)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID obj)
(PUNCT ",")
(ID obj)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID obj)
(PUNCT ",")
(ID pythran_indexing_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT ")")
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID buffer_entry)
(PUNCT ",")
(ID ptrexpr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID buffer_lookup_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID buffer_type)
(PUNCT ".")
(ID dtype)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ptr)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID buffer_entry)
(PUNCT ".")
(ID buf_ptr_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID rhs_code)
(PUNCT "=")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID ptr)
(PUNCT ",")
(ID ptrexpr)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID ptr)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID rhs_code)
(PUNCT ",")
(ID ptr)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID ptr)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID rhs_code)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID ptr)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID ptr)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID ptrexpr)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID res)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID res)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID res)
(PUNCT ",")
(ID res)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID pythran_indexing_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID buffer_entry)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID buffer_ptr_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID buffer_lookup_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID buffer_ptr_code)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MemoryViewIndexNode)
(PUNCT "(")
(ID BufferIndexNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_memview_index)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_buffer_access)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID warned_untyped_idx)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_pythran_mode)
(PUNCT "=")
(ID has_np_pythran)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID indices)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID indices)
(NEWLINE)
(ID have_slices)
(PUNCT ",")
(ID indices)
(PUNCT ",")
(ID newaxes)
(PUNCT "=")
(ID MemoryView)
(PUNCT ".")
(ID unellipsify)
(PUNCT "(")
(ID indices)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID getting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID writable_needed)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_name)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID writable_needed)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID memslice_index)
(PUNCT "=")
(PUNCT "(")
(KEYWORD not)
(ID newaxes)
(KEYWORD and)
(ID len)
(PUNCT "(")
(ID indices)
(PUNCT ")")
(PUNCT "==")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT ")")
(NEWLINE)
(ID axes)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID index_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(NEWLINE)
(ID new_indices)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID indices)
(PUNCT ")")
(PUNCT "-")
(ID len)
(PUNCT "(")
(ID newaxes)
(PUNCT ")")
(PUNCT ">")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(ID error)
(PUNCT "(")
(ID indices)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT "]")
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID axis_idx)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID index)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID indices)
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "=")
(ID index)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID index)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_memview_slice)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID new_indices)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID index)
(PUNCT ")")
(NEWLINE)
(ID axes)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID access)
(PUNCT ",")
(ID packing)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID axes)
(PUNCT "[")
(ID axis_idx)
(PUNCT "]")
(NEWLINE)
(ID axis_idx)
(PUNCT "+=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID index)
(PUNCT ".")
(ID is_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_memview_slice)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID index)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID axes)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID access)
(PUNCT ",")
(ID packing)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID axes)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID access)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID attr)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID getattr)
(PUNCT "(")
(ID index)
(PUNCT ",")
(ID attr)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID value)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID index_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID setattr)
(PUNCT "(")
(ID index)
(PUNCT ",")
(ID attr)
(PUNCT ",")
(ID value)
(PUNCT ")")
(NEWLINE)
(ID new_indices)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID warned_untyped_idx)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID level)
(PUNCT "=")
(LIT "2")
(PUNCT ")")
(NEWLINE)
(ID MemoryViewIndexNode)
(PUNCT ".")
(ID warned_untyped_idx)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_memview_index)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID index)
(PUNCT "=")
(ID index)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID index_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID indices)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID index)
(NEWLINE)
(ID new_indices)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID index)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(ID error)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID index)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_memview_index)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID is_memview_index)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_memview_slice)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT "=")
(ID new_indices)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID original_indices)
(PUNCT "=")
(ID indices)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID nogil)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_operation)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ",")
(ID axes)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID wrap_in_nonecheck_node)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ",")
(ID axes)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID none_error_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_buffer_index)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_broadcast_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID lhs)
(PUNCT "=")
(ID self)
(NEWLINE)
(KEYWORD if)
(ID lhs)
(PUNCT ".")
(ID is_memview_broadcast)
(KEYWORD or)
(ID rhs)
(PUNCT ".")
(ID is_memview_broadcast)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID lhs)
(PUNCT ".")
(ID is_memview_broadcast)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID is_memview_broadcast)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_as_memview_scalar_assignment)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID lhs)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_assignment)
(PUNCT "(")
(ID rhs)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID lhs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhs)
(PUNCT ".")
(ID is_memview_copy_assignment)
(PUNCT "=")
(ID lhs)
(PUNCT ".")
(ID is_memview_copy_assignment)
(NEWLINE)
(KEYWORD return)
(ID lhs)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MemoryViewSliceNode)
(PUNCT "(")
(ID MemoryViewIndexNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_memview_slice)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_ellipsis_noop)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_memview_scalar_assignment)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_memview_index)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_memview_broadcast)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID analyse_ellipsis_noop)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_ellipsis_noop)
(PUNCT "=")
(ID all)
(PUNCT "(")
(ID index)
(PUNCT ".")
(ID is_slice)
(KEYWORD and)
(ID index)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_none)
(KEYWORD and)
(ID index)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_none)
(KEYWORD and)
(ID index)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_none)
(KEYWORD for)
(ID index)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_ellipsis_noop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ",")
(ID axes)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID getting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_memview_broadcast)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID none_error_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID none_error_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID analyse_ellipsis_noop)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_ellipsis_noop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID index)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID MemoryView)
(PUNCT ".")
(ID validate_axes)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID axes)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID MemoryViewSliceType)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(PUNCT ",")
(ID axes)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID coerce_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_assignment)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ")")
(KEYWORD or)
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID MemoryCopyScalar)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID MemoryCopySlice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID merged_indices)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID indices)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID indices)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID new_indices)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID original_indices)
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID indices)
(PUNCT "=")
(ID indices)
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID s)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID original_indices)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID s)
(PUNCT ".")
(ID is_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID s)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_none)
(KEYWORD and)
(ID s)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_none)
(KEYWORD and)
(ID s)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_indices)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID indices)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(NEWLINE)
(ID indices)
(PUNCT ".")
(ID pop)
(PUNCT "(")
(LIT "0")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID indices)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID new_indices)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID s)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID indices)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID new_indices)
(PUNCT ")")
(PUNCT "+")
(ID len)
(PUNCT "(")
(ID indices)
(PUNCT ")")
(PUNCT ">")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID new_indices)
(PUNCT "+=")
(ID indices)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID new_indices)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_ellipsis_noop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_ellipsis_noop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID buffer_entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID buffer_entry)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID have_gil)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(NEWLINE)
(ID have_slices)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID it)
(PUNCT "=")
(ID iter)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID indices)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID index)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID original_indices)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID index)
(PUNCT ".")
(ID is_slice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID have_slices)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID index)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT ".")
(ID start)
(PUNCT "=")
(ID next)
(PUNCT "(")
(ID it)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID index)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID next)
(PUNCT "(")
(ID it)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID index)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT ".")
(ID step)
(PUNCT "=")
(ID next)
(PUNCT "(")
(ID it)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID next)
(PUNCT "(")
(ID it)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD assert)
(KEYWORD not)
(ID list)
(PUNCT "(")
(ID it)
(PUNCT ")")
(NEWLINE)
(ID buffer_entry)
(PUNCT ".")
(ID generate_buffer_slice_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID original_indices)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID have_gil)
(PUNCT "=")
(ID have_gil)
(PUNCT ",")
(ID have_slices)
(PUNCT "=")
(ID have_slices)
(PUNCT ",")
(ID directives)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_ellipsis_noop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_memview_scalar_assignment)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_memoryviewslice_assign_scalar_code)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_memoryviewslice_setslice_code)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_ellipsis_noop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MemoryCopyNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID dst)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID MemoryCopyNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT "=")
(ID dst)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID _generate_assignment_code)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MemoryCopySlice)
(PUNCT "(")
(ID MemoryCopyNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID is_memview_copy_assignment)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID copy_slice_cname)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID _generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID src)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID dst)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID dst)
(NEWLINE)
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID assert_direct_dims)
(PUNCT "(")
(ID src)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID assert_direct_dims)
(PUNCT "(")
(ID dst)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID copy_slice_cname)
(PUNCT ",")
(ID src)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID dst)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID src)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT ",")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT ",")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ")")
(PUNCT ",")
(ID dst)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MemoryCopyScalar)
(PUNCT "(")
(ID MemoryCopyNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID dst)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID MemoryCopyScalar)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID dst)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID _generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID scalar)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID assert_direct_dims)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID dtype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID dtype)
(NEWLINE)
(ID type_decl)
(PUNCT "=")
(ID dtype)
(PUNCT ".")
(ID declaration_code)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID slice_decl)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID declaration_code)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID begin_block)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID type_decl)
(PUNCT ",")
(ID scalar)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID dst_temp)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID slice_decl)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID dst_temp)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID slice_iter_obj)
(PUNCT "=")
(ID MemoryView)
(PUNCT ".")
(ID slice_iter)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID dst_temp)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID dst)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ndim)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID p)
(PUNCT "=")
(ID slice_iter_obj)
(PUNCT ".")
(ID start_loops)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID dtype)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID p)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID type_decl)
(PUNCT ",")
(ID p)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID dtype)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID slice_iter_obj)
(PUNCT ".")
(ID end_loops)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID end_block)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SliceIndexNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID slice)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID base_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID bytes_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID unicode_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ",")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_array_type)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID base_type)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID inferable_item_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID index)
(PUNCT "=")
(LIT "0")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID index)
(KEYWORD is)
(KEYWORD not)
(ID not_a_constant)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "+=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID index)
(PUNCT "=")
(ID not_a_constant)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID inferable_item_node)
(PUNCT "(")
(ID index)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID base_type)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ",")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID stop)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID constant_result)
(PUNCT "[")
(ID start)
(PUNCT ":")
(ID stop)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID stop)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base)
(PUNCT "[")
(ID start)
(PUNCT ":")
(ID stop)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_buffer)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pythran_expr)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID none_node)
(PUNCT "=")
(ID NoneNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID index)
(PUNCT "=")
(ID SliceNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD or)
(ID none_node)
(PUNCT ",")
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(KEYWORD or)
(ID none_node)
(PUNCT ",")
(ID step)
(PUNCT "=")
(ID none_node)
(PUNCT ")")
(NEWLINE)
(ID index_node)
(PUNCT "=")
(ID IndexNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID index)
(PUNCT "=")
(ID index)
(PUNCT ",")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID index_node)
(PUNCT ".")
(ID analyse_base_and_index_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID getting)
(PUNCT "=")
(ID getting)
(PUNCT ",")
(ID setting)
(PUNCT "=")
(KEYWORD not)
(ID getting)
(PUNCT ",")
(ID analyse_base)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID check_negative_indices)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_array)
(KEYWORD and)
(KEYWORD not)
(ID getting)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID base_type)
(PUNCT ".")
(ID is_cpp_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID default_str_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID unicode_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID base_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_literal)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID stop)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_literal)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID none_node)
(PUNCT "=")
(ID NoneNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID slice)
(PUNCT "=")
(ID SliceNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID start)
(PUNCT "=")
(ID copy)
(PUNCT ".")
(ID deepcopy)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD or)
(ID none_node)
(PUNCT ")")
(PUNCT ",")
(ID stop)
(PUNCT "=")
(ID copy)
(PUNCT ".")
(ID deepcopy)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID stop)
(KEYWORD or)
(ID none_node)
(PUNCT ")")
(PUNCT ",")
(ID step)
(PUNCT "=")
(ID none_node)
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID c_int)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID c_int)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID c_int)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID nogil_check)
(PUNCT "=")
(ID Node)
(PUNCT ".")
(ID gil_error)
(NEWLINE)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID get_slice_utility_code)
(PUNCT "=")
(ID TempitaUtilityCode)
(PUNCT ".")
(ID load)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID context)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(ID set_slice_utility_code)
(PUNCT "=")
(ID TempitaUtilityCode)
(PUNCT ".")
(ID load)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID context)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_string)
(PUNCT ")")
(KEYWORD and)
(ID dst_type)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID dst_type)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID dst_type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_array)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID SliceIndexNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID base_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID start_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID stop_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_char_ptr_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_result)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID base_result)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytearray_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_name)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID name)
(PUNCT ".")
(ID title)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID type_name)
(PUNCT ",")
(ID base_result)
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID type_name)
(PUNCT ",")
(ID base_result)
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID stop_code)
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_unicode_ptr_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_result)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID base_result)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID base_result)
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID base_result)
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID stop_code)
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID base_result)
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID stop_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID get_slice_utility_code)
(PUNCT ")")
(NEWLINE)
(PUNCT "(")
(ID has_c_start)
(PUNCT ",")
(ID has_c_stop)
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_start)
(PUNCT ",")
(ID py_stop)
(PUNCT ",")
(ID py_slice)
(PUNCT ")")
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_slice_config)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_start)
(PUNCT ",")
(ID py_stop)
(PUNCT ",")
(ID py_slice)
(PUNCT ",")
(ID has_c_start)
(PUNCT ",")
(ID has_c_stop)
(PUNCT ",")
(ID bool)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID TempitaUtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID cfunc)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID TempitaUtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID cfunc)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cfunc)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID cfunc)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID start_code)
(PUNCT ",")
(ID stop_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID exception_check)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID exception_value)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID set_slice_utility_code)
(PUNCT ")")
(NEWLINE)
(PUNCT "(")
(ID has_c_start)
(PUNCT ",")
(ID has_c_stop)
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_start)
(PUNCT ",")
(ID py_stop)
(PUNCT ",")
(ID py_slice)
(PUNCT ")")
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_slice_config)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_start)
(PUNCT ",")
(ID py_stop)
(PUNCT ",")
(ID py_slice)
(PUNCT ",")
(ID has_c_start)
(PUNCT ",")
(ID has_c_stop)
(PUNCT ",")
(ID bool)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start_offset)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start_code)
(PUNCT "(")
(PUNCT ")")
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(KEYWORD else)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID array_length)
(PUNCT "=")
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID size)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_slice_guard_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID array_length)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID array_length)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID stop_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID start_offset)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID start_offset)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID array_length)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_deletion_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID ignore_nonexisting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID generate_subexpr_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID set_slice_utility_code)
(PUNCT ")")
(NEWLINE)
(PUNCT "(")
(ID has_c_start)
(PUNCT ",")
(ID has_c_stop)
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_start)
(PUNCT ",")
(ID py_stop)
(PUNCT ",")
(ID py_slice)
(PUNCT ")")
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_slice_config)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_start)
(PUNCT ",")
(ID py_stop)
(PUNCT ",")
(ID py_slice)
(PUNCT ",")
(ID has_c_start)
(PUNCT ",")
(ID has_c_stop)
(PUNCT ",")
(ID bool)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID free_subexpr_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_slice_config)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID has_c_start)
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID py_start)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID has_c_start)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(KEYWORD if)
(ID has_c_start)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID c_start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID py_start)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID has_c_stop)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_stop)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID has_c_stop)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(KEYWORD if)
(ID has_c_stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID c_stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID py_stop)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID py_slice)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID slice)
(KEYWORD and)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID slice)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(LIT "s")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID has_c_start)
(PUNCT ",")
(ID has_c_stop)
(PUNCT ",")
(ID c_start)
(PUNCT ",")
(ID c_stop)
(PUNCT ",")
(ID py_start)
(PUNCT ",")
(ID py_stop)
(PUNCT ",")
(ID py_slice)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_slice_guard_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID target_size)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID slice_size)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID size)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID total_length)
(PUNCT "=")
(ID slice_size)
(PUNCT "=")
(ID int)
(PUNCT "(")
(ID slice_size)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID ValueError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID total_length)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID start)
(PUNCT "=")
(ID stop)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID stop)
(PUNCT "=")
(ID int)
(PUNCT "(")
(ID stop)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID stop)
(PUNCT "<")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID total_length)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID slice_size)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID slice_size)
(PUNCT ",")
(ID stop)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID slice_size)
(PUNCT "+=")
(ID stop)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID slice_size)
(PUNCT "=")
(ID stop)
(NEWLINE)
(DEDENT)
(ID stop)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID ValueError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(ID int)
(PUNCT "(")
(ID start)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID start)
(PUNCT "<")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID total_length)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID size)
(PUNCT ",")
(ID start)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "+=")
(ID total_length)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID slice_size)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID slice_size)
(PUNCT "-=")
(ID start)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID slice_size)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID slice_size)
(PUNCT ",")
(ID start)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID start)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID ValueError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID runtime_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID compile_time_check)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID int_target_size)
(PUNCT "=")
(ID int)
(PUNCT "(")
(ID target_size)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID ValueError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID int_target_size)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID compile_time_check)
(PUNCT "=")
(ID isinstance)
(PUNCT "(")
(ID slice_size)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID compile_time_check)
(KEYWORD and)
(ID slice_size)
(PUNCT "<")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID int_target_size)
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID compile_time_check)
(KEYWORD and)
(ID start)
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(ID stop)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID int_target_size)
(PUNCT "!=")
(ID slice_size)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID slice_size)
(PUNCT ",")
(ID target_size)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID start)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID stop)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID stop)
(PUNCT "=")
(ID slice_size)
(NEWLINE)
(DEDENT)
(ID runtime_check)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID stop)
(PUNCT ",")
(ID start)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID stop)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID runtime_check)
(PUNCT "=")
(ID stop)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID runtime_check)
(PUNCT "=")
(ID slice_size)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID runtime_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID runtime_check)
(PUNCT ",")
(ID target_size)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID target_size)
(PUNCT ",")
(ID runtime_check)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID start_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID stop_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID base)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID size)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SliceNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_slice)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID slice_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID slice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID step)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID slice)
(PUNCT "(")
(ID start)
(PUNCT ",")
(ID stop)
(PUNCT ",")
(ID step)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID step)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT "=")
(ID start)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID stop)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID step)
(PUNCT "=")
(ID step)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_literal)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_literal)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_const)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID cleanup_level)
(PUNCT "=")
(LIT "2")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_cached_constants_writer)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SliceIntNode)
(PUNCT "(")
(ID SliceNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_temp)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID slice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID step)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID slice)
(PUNCT "(")
(ID start)
(PUNCT ",")
(ID stop)
(PUNCT ",")
(ID step)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID step)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID coerce_to_integer)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID coerce_to_integer)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID step)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID coerce_to_integer)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_literal)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_literal)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID a)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID start)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID stop)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID step)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID a)
(PUNCT ",")
(ID CloneNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID a)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CallNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID may_return_none)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(NEWLINE)
(ID func_type)
(PUNCT "=")
(ID function)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID function)
(PUNCT ",")
(ID NewExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID function)
(PUNCT ".")
(ID class_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID getattr)
(PUNCT "(")
(ID function)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(KEYWORD or)
(ID func_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID getattr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(KEYWORD and)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID alternatives)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID all_alternatives)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID arg_types)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(ID func_entry)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID best_match)
(PUNCT "(")
(ID arg_types)
(PUNCT ",")
(ID alternatives)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID func_entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID func_entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID func_type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID func_type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID func_type)
(KEYWORD is)
(ID type_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID function)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result_type)
(PUNCT "=")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID result_type)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID result_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID result_type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_double_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(KEYWORD in)
(ID Builtin)
(PUNCT ".")
(ID types_that_construct_their_instance)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID result_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID may_return_none)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID may_return_none)
(NEWLINE)
(DEDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID func_type)
(KEYWORD is)
(ID type_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_name)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID name)
(KEYWORD in)
(ID Builtin)
(PUNCT ".")
(ID types_that_construct_their_instance)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID set_py_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID func_type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID func_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID function)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID type_type)
(KEYWORD and)
(PUNCT "(")
(ID function)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_builtin)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(KEYWORD in)
(ID Builtin)
(PUNCT ".")
(ID types_that_construct_their_instance)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_double_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_double_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID builtin_types)
(PUNCT "[")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID may_return_none)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID function)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID type_entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID function)
(PUNCT ".")
(ID type_entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID may_return_none)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type_constructor)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(KEYWORD and)
(ID type)
(PUNCT ".")
(ID is_struct_or_union)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT ",")
(ID kwds)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID explicit_args_kwds)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID items)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg)
(PUNCT ",")
(ID member)
(KEYWORD in)
(ID zip)
(PUNCT "(")
(ID args)
(PUNCT ",")
(ID type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID var_entries)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID DictItemNode)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID key)
(PUNCT "=")
(ID StringNode)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID member)
(PUNCT ".")
(ID name)
(PUNCT ")")
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID arg)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID kwds)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "+=")
(ID kwds)
(PUNCT ".")
(ID key_value_pairs)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "=")
(ID items)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID __class__)
(PUNCT "=")
(ID DictNode)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type)
(KEYWORD and)
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(ID constructor)
(PUNCT "=")
(ID type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT "=")
(ID RawCNameExprNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID constructor)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID constructor)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID set_cname)
(PUNCT "(")
(ID type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_c_function_call)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID type)
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_lvalue)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_reference)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID getattr)
(PUNCT "(")
(ID func_type)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID SimpleCallNode)
(PUNCT "(")
(ID CallNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID coerced_self)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID arg_tuple)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID wrapper_call)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID has_optional_args)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID nogil)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID analysed)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID overflowcheck)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID function)
(PUNCT "(")
(PUNCT "*")
(ID args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID attr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID as_cython_attribute)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID attr)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "!=")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID attr)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "!=")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID explicit_args_kwds)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID analyse_as_type_constructor)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID analysed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID analysed)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_called)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(NEWLINE)
(KEYWORD if)
(ID function)
(PUNCT ".")
(ID is_attribute)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID self)
(PUNCT "=")
(ID function)
(PUNCT ".")
(ID obj)
(NEWLINE)
(ID function)
(PUNCT ".")
(ID obj)
(PUNCT "=")
(ID CloneNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_numpy_call_with_exprs)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID has_np_pythran)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_numpy_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID has_pythran_args)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT "=")
(ID TupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID has_pythran_args)
(PUNCT "&=")
(ID is_pythran_supported_node_or_none)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_numpy_call_with_exprs)
(PUNCT "=")
(ID bool)
(PUNCT "(")
(ID has_pythran_args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_numpy_call_with_exprs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID add_include_file)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID NumPyMethodCallNode)
(PUNCT ".")
(ID from_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ",")
(ID arg_tuple)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PythranExpr)
(PUNCT "(")
(ID pythran_func_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID attribute)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID func_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT "=")
(ID TupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID set_py_result_type)
(PUNCT "(")
(ID function)
(PUNCT ",")
(ID func_type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_c_function_call)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID function_type)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID func_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_c_function_call)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID func_type)
(KEYWORD is)
(ID error_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD and)
(ID func_type)
(PUNCT ".")
(ID is_static_method)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID self)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID self)
(PUNCT "]")
(PUNCT "+")
(ID self)
(PUNCT ".")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID overloaded_entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID overloaded_entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID overloaded_entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_subscript)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_fused_index)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID overloaded_entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID entry)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID overloaded_entry)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID overloaded_entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID functypes)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID get_all_specialized_function_types)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID alternatives)
(PUNCT "=")
(PUNCT "[")
(ID f)
(PUNCT ".")
(ID entry)
(KEYWORD for)
(ID f)
(KEYWORD in)
(ID functypes)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID alternatives)
(PUNCT "=")
(ID overloaded_entry)
(PUNCT ".")
(ID all_alternatives)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID best_match)
(PUNCT "(")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID args)
(PUNCT "]")
(PUNCT ",")
(ID alternatives)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID args)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID func_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID entry)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID func_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID func_type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID max_nargs)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID expected_nargs)
(PUNCT "=")
(ID max_nargs)
(PUNCT "-")
(ID func_type)
(PUNCT ".")
(ID optional_arg_count)
(NEWLINE)
(ID actual_nargs)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID optional_arg_count)
(KEYWORD and)
(ID expected_nargs)
(PUNCT "!=")
(ID actual_nargs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID has_optional_args)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(KEYWORD and)
(ID func_type)
(PUNCT ".")
(ID args)
(KEYWORD and)
(KEYWORD not)
(ID func_type)
(PUNCT ".")
(ID is_static_method)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID formal_arg)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(NEWLINE)
(ID arg)
(PUNCT "=")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID formal_arg)
(PUNCT ".")
(ID not_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID self)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ".")
(ID format)
(PUNCT "(")
(LIT "s")
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ")")
(PUNCT "<=")
(LIT "30")
(KEYWORD else)
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID error)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID format_args)
(PUNCT "=")
(PUNCT "[")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID format_args)
(PUNCT "=")
(PUNCT "[")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID formal_arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID name)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID formal_arg)
(PUNCT ".")
(ID accept_builtin_subtypes)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID CMethodSelfCloneNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID CloneNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID coerced_self)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID formal_arg)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID formal_arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID formal_arg)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID PyTypeTestNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID exact_builtin_type)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "=")
(ID arg)
(NEWLINE)
(DEDENT)
(ID some_args_in_temps)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID min)
(PUNCT "(")
(ID max_nargs)
(PUNCT ",")
(ID actual_nargs)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID formal_arg)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(ID formal_type)
(PUNCT "=")
(ID formal_arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID arg)
(PUNCT "=")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID formal_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID formal_arg)
(PUNCT ".")
(ID not_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID some_args_in_temps)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT "==")
(LIT "0")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID self)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID some_args_in_temps)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID max_nargs)
(PUNCT ",")
(ID actual_nargs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID str_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_ctype)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_ptr_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_ctype)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID default_coerced_ctype)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID arg_ctype)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID arg_ctype)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_temp)
(KEYWORD and)
(ID i)
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID some_args_in_temps)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID some_args_in_temps)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID actual_nargs)
(PUNCT "-")
(LIT "1")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT "==")
(LIT "0")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID self)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID arg)
(PUNCT "=")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID env)
(PUNCT ".")
(ID nogil)
(KEYWORD and)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT ">")
(LIT "0")
(KEYWORD or)
(ID i)
(PUNCT "==")
(LIT "1")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID self)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "0")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT "=")
(ID args)
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ",")
(ID NewExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID class_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_name)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID func_entry)
(KEYWORD and)
(PUNCT "(")
(ID func_entry)
(PUNCT ".")
(ID utility_code)
(KEYWORD or)
(ID func_entry)
(PUNCT ".")
(ID utility_code_definition)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID func_type)
(PUNCT ".")
(ID exception_value)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD or)
(ID func_type)
(PUNCT ".")
(ID exception_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CFakeReferenceType)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ref_base_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID nogil)
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID nogil)
(KEYWORD and)
(ID func_type)
(PUNCT ".")
(ID exception_check)
(KEYWORD and)
(ID func_type)
(PUNCT ".")
(ID exception_check)
(PUNCT "!=")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID pyerr_occurred_withgil_utility_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID exception_value)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID overflowcheck)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID c_call_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID c_call_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(KEYWORD or)
(KEYWORD not)
(ID func_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(ID formal_args)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID args)
(NEWLINE)
(ID arg_list_code)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID args)
(PUNCT "=")
(ID list)
(PUNCT "(")
(ID zip)
(PUNCT "(")
(ID formal_args)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID max_nargs)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID expected_nargs)
(PUNCT "=")
(ID max_nargs)
(PUNCT "-")
(ID func_type)
(PUNCT ".")
(ID optional_arg_count)
(NEWLINE)
(ID actual_nargs)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID formal_arg)
(PUNCT ",")
(ID actual_arg)
(KEYWORD in)
(ID args)
(PUNCT "[")
(PUNCT ":")
(ID expected_nargs)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT "=")
(ID actual_arg)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID formal_arg)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID arg_list_code)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_overridable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_list_code)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID str)
(PUNCT "(")
(ID int)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID wrapper_call)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_unbound_cmethod)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID optional_arg_count)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID expected_nargs)
(PUNCT "==")
(ID actual_nargs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID optional_args)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID optional_args)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID opt_arg_struct)
(NEWLINE)
(DEDENT)
(ID arg_list_code)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID optional_args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID actual_arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID len)
(PUNCT "(")
(ID formal_args)
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_list_code)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID actual_arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID result)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID arg_list_code)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_c_result_required)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID func_type)
(PUNCT ".")
(ID exception_value)
(KEYWORD or)
(ID func_type)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(NEWLINE)
(KEYWORD if)
(ID function)
(PUNCT ".")
(ID is_name)
(KEYWORD or)
(ID function)
(PUNCT ".")
(ID is_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_entry_utility_code)
(PUNCT "(")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID function)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ">")
(LIT "1")
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID is_literal)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID SimpleCallNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(KEYWORD else)
(KEYWORD None)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID self)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID coerced_self)
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID subexpr)
(KEYWORD in)
(ID subexprs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID subexpr)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexpr)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID is_temp)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID function)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID function)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID subexpr)
(KEYWORD in)
(ID subexprs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID subexpr)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexpr)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID subexpr)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID func_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID has_optional_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID actual_nargs)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID expected_nargs)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "-")
(ID func_type)
(PUNCT ".")
(ID optional_arg_count)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID opt_arg_struct)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID op_arg_struct)
(PUNCT ".")
(ID base_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID opt_arg_struct)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID pyrex_prefix)
(PUNCT "+")
(LIT "s")
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "-")
(ID expected_nargs)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID args)
(PUNCT "=")
(ID list)
(PUNCT "(")
(ID zip)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID formal_arg)
(PUNCT ",")
(ID actual_arg)
(KEYWORD in)
(ID args)
(PUNCT "[")
(ID expected_nargs)
(PUNCT ":")
(ID actual_nargs)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID opt_arg_struct)
(PUNCT ",")
(ID func_type)
(PUNCT ".")
(ID opt_arg_cname)
(PUNCT "(")
(ID formal_arg)
(PUNCT ".")
(ID name)
(PUNCT ")")
(PUNCT ",")
(ID actual_arg)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID formal_arg)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID exc_checks)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID exc_checks)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID is_temp)
(NEWLINE)
(ID exc_checks)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID error_condition)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID exc_val)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_value)
(NEWLINE)
(ID exc_check)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_check)
(NEWLINE)
(KEYWORD if)
(ID exc_val)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID exc_checks)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID func_type)
(PUNCT ".")
(ID return_type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID exc_val)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID exc_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID exc_checks)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID exc_checks)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD or)
(ID exc_checks)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhs)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID c_call_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID lhs)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhs)
(PUNCT "=")
(ID typecast)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID lhs)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID lhs)
(PUNCT ",")
(ID rhs)
(PUNCT ")")
(PUNCT ",")
(ID func_type)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID nogil)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID overflowcheck)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID goto_error)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID exc_checks)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID goto_error)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID error_goto_if)
(PUNCT "(")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID exc_checks)
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID goto_error)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID lhs)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID goto_error)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID has_optional_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID opt_arg_struct)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NumPyMethodCallNode)
(PUNCT "(")
(ID SimpleCallNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID may_return_none)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID mult_factor)
(KEYWORD is)
(KEYWORD None)
(NEWLINE)
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID attribute)
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID a)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID a)
(KEYWORD in)
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyMethodCallNode)
(PUNCT "(")
(ID SimpleCallNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID mult_factor)
(KEYWORD is)
(KEYWORD None)
(NEWLINE)
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_tuple)
(PUNCT ".")
(ID args)
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID reuse_function_temp)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_temp)
(NEWLINE)
(KEYWORD if)
(ID reuse_function_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID function)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self_arg)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self_arg)
(PUNCT ")")
(NEWLINE)
(ID arg_offset_cname)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ">")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_offset_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID arg_offset_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID attribute_is_likely_method)
(PUNCT "(")
(ID attr)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj)
(PUNCT "=")
(ID attr)
(PUNCT ".")
(ID obj)
(NEWLINE)
(KEYWORD if)
(ID obj)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(ID obj)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_pyglobal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID likely_method)
(PUNCT "=")
(LIT "s")
(KEYWORD if)
(ID attribute_is_likely_method)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ")")
(KEYWORD else)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID cf_state)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID assignment)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID cf_state)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID assignment)
(PUNCT ".")
(ID rhs)
(NEWLINE)
(KEYWORD if)
(ID value)
(KEYWORD and)
(ID value)
(PUNCT ".")
(ID is_attribute)
(KEYWORD and)
(ID value)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID attribute_is_likely_method)
(PUNCT "(")
(ID value)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID likely_method)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID likely_method)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID likely_method)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID likely_method)
(PUNCT ",")
(ID function)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self_arg)
(PUNCT ",")
(ID function)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self_arg)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID function)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID self_arg)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_set)
(PUNCT "(")
(ID function)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ">")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID arg_offset_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self_arg)
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID self_arg)
(PUNCT ",")
(ID function)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_xdecref_clear)
(PUNCT "(")
(ID self_arg)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self_arg)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT "=")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self_arg)
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID self_arg)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_xdecref_clear)
(PUNCT "(")
(ID self_arg)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self_arg)
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID test_func)
(PUNCT ",")
(ID call_prefix)
(KEYWORD in)
(PUNCT "[")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID call_prefix)
(PUNCT ".")
(ID upper)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID test_func)
(PUNCT ",")
(ID function)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT "+")
(LIT "1")
(PUNCT ",")
(ID self_arg)
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID call_prefix)
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ",")
(ID arg_offset_cname)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ",")
(ID arg_offset_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_xdecref_clear)
(PUNCT "(")
(ID self_arg)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID args_tuple)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID args_tuple)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ",")
(ID arg_offset_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID args_tuple)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID args_tuple)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ">")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self_arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self_arg)
(PUNCT ",")
(ID args_tuple)
(PUNCT ",")
(ID self_arg)
(PUNCT ",")
(ID self_arg)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self_arg)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ">")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID args_tuple)
(PUNCT ",")
(ID i)
(PUNCT ",")
(ID arg_offset_cname)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ">")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID arg_offset_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID args_tuple)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID args_tuple)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID args_tuple)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID reuse_function_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID function)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID function)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID InlinedDefNodeCallNode)
(PUNCT "(")
(ID CallNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID function)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID function_name)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID can_be_inlined)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID def_node)
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID star_arg)
(KEYWORD or)
(ID func_type)
(PUNCT ".")
(ID starstar_arg)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "!=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID num_kwonly_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID function_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function_name)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID def_node)
(NEWLINE)
(ID actual_nargs)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID some_args_in_temps)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID actual_nargs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID formal_type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT ".")
(ID type)
(NEWLINE)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID formal_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID some_args_in_temps)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID some_args_in_temps)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID some_args_in_temps)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID actual_nargs)
(PUNCT "-")
(LIT "1")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID env)
(PUNCT ".")
(ID nogil)
(KEYWORD and)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID i)
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "0")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT "=")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID function_name)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID func_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID def_node)
(NEWLINE)
(KEYWORD for)
(ID arg)
(PUNCT ",")
(ID proto_arg)
(KEYWORD in)
(ID zip)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID proto_arg)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID arg_code)
(PUNCT "=")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID arg_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID pyfunc_cname)
(PUNCT ",")
(ID arg_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PythonCapiFunctionNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID py_name)
(PUNCT ",")
(ID cname)
(PUNCT ",")
(ID func_type)
(PUNCT ",")
(ID utility_code)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID name)
(PUNCT "=")
(ID py_name)
(PUNCT ",")
(ID cname)
(PUNCT "=")
(ID cname)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID func_type)
(PUNCT ",")
(ID utility_code)
(PUNCT "=")
(ID utility_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID utility_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID utility_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID cname)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PythonCapiCallNode)
(PUNCT "(")
(ID SimpleCallNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID may_return_none)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID function_name)
(PUNCT ",")
(ID func_type)
(PUNCT ",")
(ID utility_code)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID py_name)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT "=")
(ID PythonCapiFunctionNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID py_name)
(PUNCT ",")
(ID function_name)
(PUNCT ",")
(ID func_type)
(PUNCT ",")
(ID utility_code)
(PUNCT "=")
(ID utility_code)
(PUNCT ")")
(NEWLINE)
(ID SimpleCallNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CachedBuiltinMethodCallNode)
(PUNCT "(")
(ID CallNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID call_node)
(PUNCT ",")
(ID obj)
(PUNCT ",")
(ID method_name)
(PUNCT ",")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID CachedBuiltinMethodCallNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID call_node)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID obj)
(PUNCT "=")
(ID obj)
(PUNCT ",")
(ID method_name)
(PUNCT "=")
(ID method_name)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID args)
(PUNCT ",")
(ID may_return_none)
(PUNCT "=")
(ID call_node)
(PUNCT ".")
(ID may_return_none)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID call_node)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID may_return_none)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID may_return_none)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_cname)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cname)
(NEWLINE)
(ID obj_cname)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(ID call_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID cached_unbound_method_call_code)
(PUNCT "(")
(ID obj_cname)
(PUNCT ",")
(ID type_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID method_name)
(PUNCT ",")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID call_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID GeneralCallNode)
(PUNCT "(")
(ID CallNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID nogil_check)
(PUNCT "=")
(ID Node)
(PUNCT ".")
(ID gil_error)
(NEWLINE)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID positional_args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID keyword_args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID function)
(PUNCT "(")
(PUNCT "*")
(ID positional_args)
(PUNCT ",")
(PUNCT "**")
(ID keyword_args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID explicit_args_kwds)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID keyword_args)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ".")
(ID is_dict_literal)
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID CompileError)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID keyword_args)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID analyse_as_type_constructor)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID map_to_simple_call_node)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID node)
(KEYWORD is)
(KEYWORD not)
(ID self)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID node)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_variable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID node)
(KEYWORD is)
(ID self)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID set_py_result_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID map_to_simple_call_node)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ",")
(ID TupleNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ".")
(ID is_dict_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID function)
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID getattr)
(PUNCT "(")
(ID function)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID function_type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID function_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function_type)
(PUNCT "=")
(ID function_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID function_type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID pos_args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ".")
(ID args)
(NEWLINE)
(ID kwargs)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID keyword_args)
(NEWLINE)
(ID declared_args)
(PUNCT "=")
(ID function_type)
(PUNCT ".")
(ID args)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID declared_args)
(PUNCT "=")
(ID declared_args)
(PUNCT "[")
(LIT "1")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID pos_args)
(PUNCT ")")
(PUNCT ">")
(ID len)
(PUNCT "(")
(ID declared_args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID declared_args)
(PUNCT ")")
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID pos_args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID matched_args)
(PUNCT "=")
(ID set)
(PUNCT "(")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID name)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID declared_args)
(PUNCT "[")
(PUNCT ":")
(ID len)
(PUNCT "(")
(ID pos_args)
(PUNCT ")")
(PUNCT "]")
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID unmatched_args)
(PUNCT "=")
(ID declared_args)
(PUNCT "[")
(ID len)
(PUNCT "(")
(ID pos_args)
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID matched_kwargs_count)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(ID args)
(PUNCT "=")
(ID list)
(PUNCT "(")
(ID pos_args)
(PUNCT ")")
(NEWLINE)
(ID seen)
(PUNCT "=")
(ID set)
(PUNCT "(")
(ID matched_args)
(PUNCT ")")
(NEWLINE)
(ID has_errors)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID kwargs)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID value)
(NEWLINE)
(KEYWORD if)
(ID name)
(KEYWORD in)
(ID seen)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID has_errors)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID seen)
(PUNCT ".")
(ID add)
(PUNCT "(")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID decl_arg)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID zip)
(PUNCT "(")
(ID unmatched_args)
(PUNCT ",")
(ID kwargs)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID value)
(NEWLINE)
(KEYWORD if)
(ID decl_arg)
(PUNCT ".")
(ID name)
(PUNCT "==")
(ID name)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID matched_args)
(PUNCT ".")
(ID add)
(PUNCT "(")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID matched_kwargs_count)
(PUNCT "+=")
(LIT "1")
(NEWLINE)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD from)
(PUNCT ".")
(ID UtilNodes)
(KEYWORD import)
(ID EvalWithTempExprNode)
(PUNCT ",")
(ID LetRefNode)
(NEWLINE)
(ID temps)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID kwargs)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ")")
(PUNCT ">")
(ID matched_kwargs_count)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID unmatched_args)
(PUNCT "=")
(ID declared_args)
(PUNCT "[")
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID keywords)
(PUNCT "=")
(ID dict)
(PUNCT "(")
(PUNCT "[")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID value)
(PUNCT ",")
(PUNCT "(")
(ID i)
(PUNCT "+")
(ID len)
(PUNCT "(")
(ID pos_args)
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID kwargs)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID first_missing_keyword)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID decl_arg)
(KEYWORD in)
(ID unmatched_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name)
(PUNCT "=")
(ID decl_arg)
(PUNCT ".")
(ID name)
(NEWLINE)
(KEYWORD if)
(ID name)
(KEYWORD not)
(KEYWORD in)
(ID keywords)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID first_missing_keyword)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID first_missing_keyword)
(PUNCT "=")
(ID name)
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID first_missing_keyword)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID as_variable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT "%")
(ID first_missing_keyword)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT "=")
(ID keywords)
(PUNCT "[")
(ID name)
(PUNCT "]")
(NEWLINE)
(ID matched_args)
(PUNCT ".")
(ID add)
(PUNCT "(")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID matched_kwargs_count)
(PUNCT "+=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID temp)
(PUNCT "=")
(ID LetRefNode)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID temp)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID temp)
(PUNCT ")")
(NEWLINE)
(ID temps)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID temp)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID temps)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID final_args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID new_temps)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID first_temp_arg)
(PUNCT "=")
(ID temps)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "[")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg_value)
(KEYWORD in)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg_value)
(KEYWORD is)
(ID first_temp_arg)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID arg_value)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID final_args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg_value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID temp)
(PUNCT "=")
(ID LetRefNode)
(PUNCT "(")
(ID arg_value)
(PUNCT ")")
(NEWLINE)
(ID new_temps)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID temp)
(PUNCT ")")
(NEWLINE)
(ID final_args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID temp)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID new_temps)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "=")
(ID final_args)
(NEWLINE)
(DEDENT)
(ID temps)
(PUNCT "=")
(ID new_temps)
(PUNCT "+")
(PUNCT "[")
(ID arg)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID sorted)
(PUNCT "(")
(ID temps)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID kwargs)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID value)
(NEWLINE)
(KEYWORD if)
(ID name)
(KEYWORD not)
(KEYWORD in)
(ID matched_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID has_errors)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID error)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID has_errors)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID SimpleCallNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID function)
(PUNCT "=")
(ID function)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID args)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID temp)
(KEYWORD in)
(ID temps)
(PUNCT "[")
(PUNCT ":")
(PUNCT ":")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID EvalWithTempExprNode)
(PUNCT "(")
(ID temp)
(PUNCT ",")
(ID node)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(KEYWORD return)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID kwargs)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID kwargs)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID function)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID positional_args)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID kwargs)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AsTupleNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID tuple)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID tuple)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID tuple_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID nogil_check)
(PUNCT "=")
(ID Node)
(PUNCT ".")
(ID gil_error)
(NEWLINE)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cfunc)
(PUNCT "=")
(LIT "s")
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(KEYWORD else)
(LIT "s")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID cfunc)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MergedDictNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID dict_type)
(NEWLINE)
(ID reject_duplicates)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID reject_duplicates)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID reject_duplicates)
(NEWLINE)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_dict_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(ID key)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID value)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(KEYWORD for)
(ID key)
(PUNCT ",")
(ID value)
(KEYWORD in)
(ID item)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID constant_result)
(PUNCT ".")
(ID iteritems)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID key)
(PUNCT ",")
(ID value)
(KEYWORD in)
(ID items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID reject_duplicates)
(KEYWORD and)
(ID key)
(KEYWORD in)
(ID result)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID ValueError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID key)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID result)
(PUNCT "[")
(ID key)
(PUNCT "]")
(PUNCT "=")
(ID value)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID reject_duplicates)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID reject_duplicates)
(NEWLINE)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_dict_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID key)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(PUNCT ",")
(ID value)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID key)
(PUNCT ",")
(ID value)
(KEYWORD in)
(ID item)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(PUNCT ".")
(ID iteritems)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID key)
(PUNCT ",")
(ID value)
(KEYWORD in)
(ID items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID reject_duplicates)
(KEYWORD and)
(ID key)
(KEYWORD in)
(ID result)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID ValueError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID key)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID result)
(PUNCT "[")
(ID key)
(PUNCT "]")
(PUNCT "=")
(ID value)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID dict_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(KEYWORD and)
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(ID arg)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_arg)
(KEYWORD and)
(ID len)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID cf_assignments)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID allow_null)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID arg)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT "=")
(ID args)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID args)
(PUNCT "=")
(ID iter)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT "=")
(ID next)
(PUNCT "(")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_dict_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID item)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID helpers)
(PUNCT "=")
(ID set)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_dict_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID item)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID reject_duplicates)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID helpers)
(PUNCT ".")
(ID add)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID reject_duplicates)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID helpers)
(PUNCT ".")
(ID add)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID helpers)
(PUNCT ".")
(ID add)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT "%")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID item)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID helper)
(KEYWORD in)
(ID sorted)
(PUNCT "(")
(ID helpers)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(ID helper)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID keyword_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AttributeNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_attribute)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID entry)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_called)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(ID needs_none_check)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_memslice_transpose)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_special_lookup)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_py_attr)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(KEYWORD def)
(ID as_cython_attribute)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ",")
(ID NameNode)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_cython_module)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT "==")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID attribute)
(NEWLINE)
(DEDENT)
(ID cy)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID as_cython_attribute)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID cy)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID cy)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID as_variable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID as_variable)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_as_python_attribute)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID attr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID attribute)
(NEWLINE)
(KEYWORD if)
(ID attr)
(PUNCT ".")
(ID startswith)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID attr)
(PUNCT ".")
(ID endswith)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID getattr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID attr)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID attr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID attribute)
(NEWLINE)
(KEYWORD if)
(ID attr)
(PUNCT ".")
(ID startswith)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID attr)
(PUNCT ".")
(ID endswith)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID attr)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID getattr)
(PUNCT "(")
(ID obj)
(PUNCT ",")
(ID attr)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_as_cimported_attribute_node)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID target)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_as_type_attribute)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(ID obj_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_attribute)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID obj_type)
(PUNCT "=")
(ID obj_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID obj_type)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID target)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_const)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID node)
(PUNCT ".")
(ID is_lvalue)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID target)
(PUNCT "=")
(LIT "0")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID initialized_check)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_as_cimported_attribute_node)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID target)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID target)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_as_type_attribute)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID node)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_as_ordinary_attribute_node)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID target)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID node)
(PUNCT ".")
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID node)
(PUNCT ".")
(ID is_attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID wrap_obj_in_nonecheck)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_cimported_attribute_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID target)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID module_scope)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID analyse_as_module)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID module_scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_cglobal)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_type)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_const)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID as_name_node)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID entry)
(PUNCT ",")
(ID target)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cimported_module_without_shadow)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type_attribute)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_string_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_called)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID ubcm_entry)
(PUNCT "=")
(ID entry)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID func_cname)
(KEYWORD and)
(KEYWORD not)
(ID hasattr)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cname)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID func_cname)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_static_method)
(KEYWORD or)
(PUNCT "(")
(ID env)
(PUNCT ".")
(ID parent_scope)
(KEYWORD and)
(ID env)
(PUNCT ".")
(ID parent_scope)
(PUNCT ".")
(ID is_cpp_class_scope)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ctype)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID ctype)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ctype)
(PUNCT "=")
(ID copy)
(PUNCT ".")
(ID copy)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID ctype)
(PUNCT ".")
(ID args)
(PUNCT "=")
(ID ctype)
(PUNCT ".")
(ID args)
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID ctype)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CFuncTypeArg)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID type)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cname)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID type)
(PUNCT ".")
(ID vtabptr_cname)
(PUNCT ",")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ")")
(NEWLINE)
(ID ctype)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(ID ubcm_entry)
(PUNCT "=")
(ID Symtab)
(PUNCT ".")
(ID Entry)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID cname)
(PUNCT ",")
(ID ctype)
(PUNCT ")")
(NEWLINE)
(ID ubcm_entry)
(PUNCT ".")
(ID is_cfunction)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID ubcm_entry)
(PUNCT ".")
(ID func_cname)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID func_cname)
(NEWLINE)
(ID ubcm_entry)
(PUNCT ".")
(ID is_unbound_cmethod)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID ubcm_entry)
(PUNCT ".")
(ID scope)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID scope)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID as_name_node)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID ubcm_entry)
(PUNCT ",")
(ID target)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID type)
(PUNCT ".")
(ID is_enum)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID attribute)
(KEYWORD in)
(ID type)
(PUNCT ".")
(ID values)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID entry)
(KEYWORD in)
(ID type)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID enum_values)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT "==")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID as_name_node)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID entry)
(PUNCT ",")
(ID target)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID module_scope)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID analyse_as_module)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID module_scope)
(PUNCT ".")
(ID lookup_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_string_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID base_type)
(KEYWORD and)
(ID hasattr)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID base_type)
(PUNCT ".")
(ID scope)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID base_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_extension_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID module_scope)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID analyse_as_module)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID module_scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_module)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID module_scope)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID analyse_as_module)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID module_scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID as_module)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID as_module)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_name_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID entry)
(PUNCT ",")
(ID target)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID NameNode)
(PUNCT ".")
(ID from_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ",")
(ID entry)
(PUNCT "=")
(ID entry)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID target)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID analyse_target_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID analyse_rvalue_entry)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_ordinary_attribute_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID target)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_attribute)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_called)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID target)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID target)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_attribute)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID obj_type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID immutable_obj)
(PUNCT "=")
(ID obj_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID member)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID attribute)
(NEWLINE)
(KEYWORD if)
(ID obj_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID obj_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID obj_type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID obj_type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID obj_type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID obj_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj_type)
(PUNCT "=")
(ID obj_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID op)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID obj_type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID obj_type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID op)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID obj_type)
(PUNCT ".")
(ID is_reference)
(KEYWORD and)
(ID obj_type)
(PUNCT ".")
(ID is_fake_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID op)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID op)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID obj_type)
(PUNCT ".")
(ID has_attributes)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID obj_type)
(PUNCT ".")
(ID attributes_known)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID obj_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID obj_type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD and)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_memslice_transpose)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID transpose)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj_type)
(PUNCT ".")
(ID declare_attribute)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID obj_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID entry)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID is_member)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID obj_type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID entry)
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID obj_type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID is_variable)
(KEYWORD and)
(KEYWORD not)
(ID entry)
(PUNCT ".")
(ID fused_cfunction)
(PUNCT ")")
(KEYWORD or)
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID member)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID cname)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID analyse_as_python_attribute)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID obj_type)
(PUNCT ",")
(ID immutable_obj)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_python_attribute)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID obj_type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID immutable_obj)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID obj_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID mangle_class_private_name)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID member)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID attribute)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID obj_type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID obj_type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID obj_type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID obj_type)
(PUNCT ".")
(ID is_cpp_string)
(KEYWORD or)
(ID obj_type)
(PUNCT ".")
(ID is_buffer)
(KEYWORD or)
(ID obj_type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD or)
(ID obj_type)
(PUNCT ".")
(ID is_numeric)
(KEYWORD or)
(PUNCT "(")
(ID obj_type)
(PUNCT ".")
(ID is_ctuple)
(KEYWORD and)
(ID obj_type)
(PUNCT ".")
(ID can_coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID obj_type)
(PUNCT ".")
(ID is_struct)
(KEYWORD and)
(ID obj_type)
(PUNCT ".")
(ID can_coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID immutable_obj)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID obj_type)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_name)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_attribute)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_variable)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID as_variable)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID immutable_obj)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID obj_type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID wrap_obj_in_nonecheck)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID msg)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID format_args)
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID needs_none_check)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID msg)
(PUNCT "=")
(LIT "s")
(PUNCT ".")
(ID format)
(PUNCT "(")
(LIT "s")
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(PUNCT "<=")
(LIT "30")
(KEYWORD else)
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID format_args)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_memslice_transpose)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID msg)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID msg)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID format_args)
(PUNCT "=")
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID msg)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(ID msg)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID format_args)
(PUNCT "=")
(ID format_args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID is_cimported_module_without_shadow)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_cimported_module_without_shadow)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NameNode)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_lvalue)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NameNode)
(PUNCT ".")
(ID is_lvalue)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NameNode)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID obj)
(NEWLINE)
(ID obj_code)
(PUNCT "=")
(ID obj)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_builtin_cmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID final_func_cname)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID final_func_cname)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID member)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID cname)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID vtabstruct_cname)
(PUNCT ",")
(ID obj_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID op)
(PUNCT ",")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID vtabslot_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID member)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID result_is_used)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID member)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID member)
(PUNCT ".")
(ID upper)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID obj_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_variable)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj_code)
(PUNCT "=")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID obj)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID to_object_struct)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID obj_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID op)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID member)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_special_lookup)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID lookup_func_name)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID lookup_func_name)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID lookup_func_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_memslice_transpose)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID access)
(PUNCT ",")
(ID packing)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID axes)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID access)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_incref_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID have_gil)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID T)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if)
(PUNCT "(")
(ID T)
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID initialized_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_cmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_entry_utility_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID is_memslice_transpose)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xdecref_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID have_gil)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID exception_check)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID exception_value)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID member)
(PUNCT ".")
(ID upper)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID select_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhs)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID select_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref)
(PUNCT "(")
(ID select_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(ID MemoryView)
(PUNCT ".")
(ID put_assign_to_memviewslice)
(PUNCT "(")
(ID select_code)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID select_code)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID rhs)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_deletion_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID ignore_nonexisting)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID is_property_scope)
(KEYWORD and)
(LIT "s")
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID entries)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID obj)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_attr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID style)
(PUNCT ",")
(ID text)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID style)
(PUNCT ",")
(ID text)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID AnnotationItem)
(PUNCT "(")
(ID style)
(PUNCT ",")
(ID text)
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID size)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID attribute)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID StarredUnpackingNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_starred)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID starred_expr_allowed_here)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID target)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID target)
(PUNCT "=")
(ID target)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_declarations)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID starred_expr_allowed_here)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID analyse_declarations)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID starred_expr_allowed_here)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID target)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID analyse_target_declaration)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID target)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID analyse_target_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SequenceNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_sequence_constructor)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID unpacked_items)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID mult_factor)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID slow)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID compile_time_value_list)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID replace_starred_target_node)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID starred_assignment)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_starred)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID starred_assignment)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID starred_assignment)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID target)
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID is_starred)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "=")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_declaration)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID replace_starred_target_node)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID analyse_target_declaration)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID skip_children)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_ctuple)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "==")
(ID dst_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID mult_factor)
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "!=")
(ID dst_type)
(PUNCT ".")
(ID size)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID size)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID coerced_args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(PUNCT ",")
(ID type)
(KEYWORD in)
(ID zip)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID dst_type)
(PUNCT ".")
(ID components)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID TupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID coerced_args)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ",")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID _create_merge_node_if_necessary)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID _flatten_starred_args)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID any)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID is_starred)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID values)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_starred)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID values)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID TupleNode)
(PUNCT "(")
(ID values)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID values)
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID values)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID target)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID values)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID values)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID TupleNode)
(PUNCT "(")
(ID values)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID values)
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID MergedSequenceNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID binop_node)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID node)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ",")
(ID inplace)
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID _flatten_starred_args)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_starred)
(KEYWORD and)
(ID arg)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID is_sequence_constructor)
(KEYWORD and)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT ".")
(ID extend)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT "=")
(ID args)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_target_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID any_coerced_items)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID analyse_target_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_starred)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID list_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID list_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID unpacked_item)
(PUNCT "=")
(ID PyTempNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID coerced_unpacked_item)
(PUNCT "=")
(ID unpacked_item)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID unpacked_item)
(KEYWORD is)
(KEYWORD not)
(ID coerced_unpacked_item)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID any_coerced_items)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID unpacked_item)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID coerced_unpacked_item)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_operation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_sequence_packing_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID target)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID plain)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID target)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID target)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID size_factor)
(PUNCT "=")
(ID c_mult)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID mult_factor)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(KEYWORD and)
(KEYWORD not)
(ID plain)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID mult_factor)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(NEWLINE)
(KEYWORD if)
(ID mult_factor)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID c_mult)
(PUNCT "=")
(ID mult_factor)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID isinstance)
(PUNCT "(")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(KEYWORD and)
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(PUNCT ">")
(LIT "0")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID size_factor)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID mult_factor)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID size_factor)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID c_mult)
(PUNCT ",")
(ID c_mult)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID size_factor)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID c_mult)
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID is_literal)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID slow)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID c_mult)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID target)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID target)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID target)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ctuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID target)
(PUNCT ",")
(ID i)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID create_func)
(PUNCT ",")
(ID set_item_func)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID create_func)
(PUNCT ",")
(ID set_item_func)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID InternalError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID arg_count)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID target)
(PUNCT ",")
(ID create_func)
(PUNCT ",")
(ID arg_count)
(PUNCT ",")
(ID size_factor)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID target)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID target)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID c_mult)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID counter)
(PUNCT "=")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID counter)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg_count)
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID offset)
(PUNCT "=")
(ID counter)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID offset)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID counter)
(PUNCT ",")
(ID arg_count)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID counter)
(PUNCT ",")
(ID counter)
(PUNCT ",")
(ID c_mult)
(PUNCT ",")
(ID counter)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID offset)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID arg_count)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID c_mult)
(KEYWORD or)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID set_item_func)
(PUNCT ",")
(ID target)
(PUNCT ",")
(PUNCT "(")
(ID offset)
(KEYWORD and)
(ID i)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID offset)
(PUNCT ",")
(ID i)
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID offset)
(KEYWORD or)
(ID i)
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID c_mult)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID mult_factor)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID mult_factor)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ",")
(ID target)
(PUNCT ",")
(ID mult_factor)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref)
(PUNCT "(")
(ID target)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID target)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID SequenceNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID is_literal)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID slow)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID SequenceNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID overloaded_assignment)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID exception_check)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID exception_value)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID starred_assignment)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_starred_assignment_code)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_parallel_assignment_code)
(PUNCT "(")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID release)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID rhs)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID _func_iternext_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CPtrType)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID CFuncType)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ",")
(PUNCT "[")
(ID PyrexTypes)
(PUNCT ".")
(ID CFuncTypeArg)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID generate_parallel_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID allocate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID special_unpack)
(PUNCT "=")
(PUNCT "(")
(ID rhs)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID py_object_type)
(KEYWORD or)
(ID rhs)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID tuple_type)
(PUNCT ",")
(ID list_type)
(PUNCT ")")
(KEYWORD or)
(KEYWORD not)
(ID rhs)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ")")
(NEWLINE)
(ID long_enough_for_a_loop)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ">")
(LIT "3")
(NEWLINE)
(KEYWORD if)
(ID special_unpack)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_special_parallel_unpacking_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID use_loop)
(PUNCT "=")
(ID long_enough_for_a_loop)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_generic_parallel_unpacking_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ",")
(ID use_loop)
(PUNCT "=")
(ID long_enough_for_a_loop)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID value_node)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value_node)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT ".")
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_special_parallel_unpacking_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID use_loop)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type_test)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID none_check)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID rhs)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_types)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID rhs)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type_test)
(PUNCT "=")
(ID none_check)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID rhs)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_types)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID rhs)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_type_test)
(PUNCT "=")
(ID none_check)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID sequence_types)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID tuple_check)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID list_check)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID sequence_type_test)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID tuple_check)
(PUNCT ",")
(ID list_check)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID sequence_type_test)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID raise_too_many_values_to_unpack)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID raise_need_more_values_to_unpack)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID sequence_types)
(PUNCT ")")
(PUNCT "==")
(LIT "2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID sequence_types)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID item)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID sequence_types)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ",")
(ID i)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID sequence_types)
(PUNCT ")")
(PUNCT "==")
(LIT "2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID item)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID sequence_types)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT ",")
(ID i)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID use_loop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID item)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID i)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(PUNCT "[")
(LIT "s")
(PUNCT "%")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID sequence_type_test)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID sequence_type_test)
(PUNCT "==")
(ID none_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_generic_parallel_unpacking_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ",")
(ID use_loop)
(PUNCT "=")
(ID use_loop)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_generic_parallel_unpacking_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID unpacked_items)
(PUNCT ",")
(ID use_loop)
(PUNCT ",")
(ID terminate)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID raise_need_more_values_to_unpack)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID use_loop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(PUNCT "[")
(LIT "s")
(PUNCT "%")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID unpacked_items)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID iterator_temp)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID iterator_temp)
(PUNCT ",")
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID iterator_temp)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID iterator_temp)
(PUNCT ")")
(NEWLINE)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID iternext_func)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID _func_iternext_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID iternext_func)
(PUNCT ",")
(ID iterator_temp)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID unpacking_error_label)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_label)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID unpack_code)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID iternext_func)
(PUNCT ",")
(ID iterator_temp)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID use_loop)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID len)
(PUNCT "(")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID unpack_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID unpacking_error_label)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID item)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID i)
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID unpack_code)
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID unpacking_error_label)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID terminate)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID unpack_code)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID unpacked_items)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID iternext_func)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID iterator_temp)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID unpacking_done_label)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_label)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID unpacking_done_label)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_label)
(PUNCT "(")
(ID unpacking_error_label)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID iterator_temp)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID iternext_func)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_label)
(PUNCT "(")
(ID unpacking_done_label)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID iternext_func)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID terminate)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID iterator_temp)
(PUNCT ")")
(NEWLINE)
(ID iterator_temp)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID iterator_temp)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_starred_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_starred)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID starred_target)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(ID unpacked_fixed_items_left)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT "[")
(PUNCT ":")
(ID i)
(PUNCT "]")
(NEWLINE)
(ID unpacked_fixed_items_right)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT "[")
(ID i)
(PUNCT "+")
(LIT "1")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID iterator_temp)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID unpacked_fixed_items_left)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID unpacked_fixed_items_left)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID allocate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID iterator_temp)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID generate_generic_parallel_unpacking_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID rhs)
(PUNCT ",")
(ID unpacked_fixed_items_left)
(PUNCT ",")
(ID use_loop)
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID terminate)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID item)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID unpacked_fixed_items_left)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value_node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(ID value_node)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID starred_target)
(PUNCT ".")
(ID allocate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID target_list)
(PUNCT "=")
(ID starred_target)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID target_list)
(PUNCT ",")
(ID iterator_temp)
(KEYWORD or)
(ID rhs)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID target_list)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID target_list)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID iterator_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID iterator_temp)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID iterator_temp)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID rhs)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID unpacked_fixed_items_right)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID raise_need_more_values_to_unpack)
(PUNCT ")")
(NEWLINE)
(ID length_temp)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID length_temp)
(PUNCT ",")
(ID target_list)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID length_temp)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID unpacked_fixed_items_right)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID unpacked_fixed_items_left)
(PUNCT ")")
(PUNCT ",")
(ID length_temp)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID unpacked_fixed_items_right)
(PUNCT "[")
(PUNCT ":")
(PUNCT ":")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID allocate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(PUNCT "(")
(ID item)
(PUNCT ",")
(ID coerced_arg)
(PUNCT ")")
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID zip)
(PUNCT "(")
(ID unpacked_fixed_items_right)
(PUNCT "[")
(PUNCT ":")
(PUNCT ":")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT "[")
(PUNCT ":")
(PUNCT ":")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID target_list)
(PUNCT ",")
(ID length_temp)
(PUNCT ",")
(ID i)
(PUNCT "+")
(LIT "1")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID target_list)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID target_list)
(PUNCT ",")
(ID length_temp)
(PUNCT ",")
(ID i)
(PUNCT "+")
(LIT "1")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID coerced_arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID sublist_temp)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID sublist_temp)
(PUNCT ",")
(ID target_list)
(PUNCT ",")
(ID length_temp)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID unpacked_fixed_items_right)
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID sublist_temp)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID sublist_temp)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID length_temp)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref)
(PUNCT "(")
(ID target_list)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID target_list)
(PUNCT ",")
(ID sublist_temp)
(PUNCT ",")
(ID sublist_temp)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID sublist_temp)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID sublist_temp)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID unpacked_items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID coerced_unpacked_items)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID TupleNode)
(PUNCT "(")
(ID SequenceNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID tuple_type)
(NEWLINE)
(ID is_partly_literal)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID tuple_type)
(NEWLINE)
(DEDENT)
(ID arg_types)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID any)
(PUNCT "(")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_unspecified)
(KEYWORD or)
(ID type)
(PUNCT ".")
(ID is_fused)
(KEYWORD for)
(ID type)
(KEYWORD in)
(ID arg_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID tuple_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID env)
(PUNCT ".")
(ID declare_tuple_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID arg_types)
(PUNCT ")")
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID skip_children)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_starred)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID starred_expr_allowed_here)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID mult_factor)
(KEYWORD and)
(KEYWORD not)
(ID any)
(PUNCT "(")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID is_starred)
(KEYWORD or)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD or)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_fused)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID declare_tuple_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID SequenceNode)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID _create_merge_node_if_necessary)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID node)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID all)
(PUNCT "(")
(ID child)
(PUNCT ".")
(ID is_literal)
(KEYWORD for)
(ID child)
(KEYWORD in)
(ID node)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID node)
(PUNCT ".")
(ID mult_factor)
(KEYWORD or)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID is_literal)
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID node)
(PUNCT ".")
(ID is_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID node)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID mult_factor)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID node)
(PUNCT ".")
(ID is_partly_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID item_types)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID any)
(PUNCT "(")
(ID t)
(KEYWORD is)
(KEYWORD None)
(KEYWORD for)
(ID t)
(KEYWORD in)
(ID item_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID declare_tuple_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID item_types)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ctuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_ctuple)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID size)
(PUNCT "==")
(ID dst_type)
(PUNCT ".")
(ID size)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to_ctuple)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(KEYWORD is)
(ID tuple_type)
(KEYWORD or)
(ID dst_type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID coerced_args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID TupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID coerced_args)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID tuple_type)
(PUNCT ",")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_ctuple)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to_ctuple)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID SequenceNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID as_list)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID t)
(PUNCT "=")
(ID ListNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID mult_factor)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID tuple)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID t)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID list)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID t)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ">")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID Naming)
(PUNCT ".")
(ID empty_tuple)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID tuple)
(PUNCT "(")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID constant_result)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID values)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID compile_time_value_list)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID tuple)
(PUNCT "(")
(ID values)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_operation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_literal)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID is_partly_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID tuple_target)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_const)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID cleanup_level)
(PUNCT "=")
(LIT "2")
(PUNCT ")")
(NEWLINE)
(ID const_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_cached_constants_writer)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID const_code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_sequence_packing_code)
(PUNCT "(")
(ID const_code)
(PUNCT ",")
(ID tuple_target)
(PUNCT ",")
(ID plain)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT ")")
(NEWLINE)
(ID const_code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID tuple_target)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID tuple_target)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID tuple_target)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_sequence_packing_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ListNode)
(PUNCT "(")
(ID SequenceNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID obj_conversion_errors)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID list_type)
(NEWLINE)
(ID in_module_scope)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID list_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID is_starred)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID starred_expr_allowed_here)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID node)
(PUNCT "=")
(ID SequenceNode)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID node)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID local_errors)
(PUNCT "(")
(ID ignore)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(KEYWORD as)
(ID errors)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID original_args)
(PUNCT "=")
(ID list)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT "=")
(ID SequenceNode)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT ".")
(ID obj_conversion_errors)
(PUNCT "=")
(ID errors)
(NEWLINE)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID in_module_scope)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID node)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID _create_merge_node_if_necessary)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID err)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID obj_conversion_errors)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID report_error)
(PUNCT "(")
(ID err)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID obj_conversion_errors)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID is_array)
(KEYWORD or)
(ID dst_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ")")
(KEYWORD and)
(ID dst_type)
(PUNCT ".")
(ID base_type)
(KEYWORD is)
(KEYWORD not)
(ID PyrexTypes)
(PUNCT ".")
(ID c_void_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID array_length)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(PUNCT "<=")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID array_length)
(PUNCT "*=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID base_type)
(PUNCT "=")
(ID dst_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CArrayType)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(ID array_length)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID original_args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID CoerceToPyTypeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID TypecastNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_struct)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ">")
(ID len)
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID var_entries)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "<")
(ID len)
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID var_entries)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ",")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID member)
(PUNCT ")")
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID zip)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID original_args)
(PUNCT ",")
(ID dst_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID var_entries)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID CoerceToPyTypeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID member)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_ctuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to_ctuple)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_list)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID as_tuple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID t)
(PUNCT "=")
(ID TupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID mult_factor)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID list)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID t)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID tuple)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID t)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID allocate_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID in_module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID static)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID SequenceNode)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID release_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID SequenceNode)
(PUNCT ".")
(ID release_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID ValueError)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID constant_result)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID l)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID compile_time_value_list)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID l)
(PUNCT "*=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID l)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_operation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID err)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID obj_conversion_errors)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID report_error)
(PUNCT "(")
(ID err)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID generate_sequence_packing_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ".")
(ID format)
(PUNCT "(")
(ID i)
(PUNCT "=")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ",")
(ID count)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID offset)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID offset)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID i)
(PUNCT ",")
(ID arg)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID i)
(PUNCT ",")
(ID offset)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID i)
(PUNCT ",")
(ID offset)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_struct)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(PUNCT ",")
(ID member)
(KEYWORD in)
(ID zip)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID var_entries)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID member)
(PUNCT ".")
(ID cname)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID InternalError)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ScopedExprNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID expr_scope)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID has_local_scope)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID init_scope)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID outer_scope)
(PUNCT ",")
(ID expr_scope)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID expr_scope)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID expr_scope)
(PUNCT "=")
(ID expr_scope)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID has_local_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID expr_scope)
(PUNCT "=")
(ID Symtab)
(PUNCT ".")
(ID GeneratorExpressionScope)
(PUNCT "(")
(ID outer_scope)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID expr_scope)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_declarations)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID init_scope)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_scoped_declarations)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_scoped_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID generate_inner_evaluation_code)
(PUNCT "=")
(ID super)
(PUNCT "(")
(ID ScopedExprNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID generate_evaluation_code)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID has_local_scope)
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID expr_scope)
(PUNCT ".")
(ID var_entries)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID generate_inner_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID py_entries)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID _)
(PUNCT ",")
(ID entry)
(KEYWORD in)
(ID sorted)
(PUNCT "(")
(ID item)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID expr_scope)
(PUNCT ".")
(ID entries)
(PUNCT ".")
(ID items)
(PUNCT "(")
(PUNCT ")")
(KEYWORD if)
(ID item)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ".")
(ID in_closure)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID entry)
(PUNCT ".")
(ID used)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID py_entries)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID py_entries)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID generate_inner_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID old_loop_labels)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_loop_labels)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID old_error_label)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_error_label)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID generate_inner_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID _generate_vars_cleanup)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID py_entries)
(PUNCT ")")
(NEWLINE)
(ID exit_scope)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_label)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID exit_scope)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID label)
(PUNCT ",")
(ID old_label)
(KEYWORD in)
(PUNCT "(")
(PUNCT "[")
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_label)
(PUNCT ",")
(ID old_error_label)
(PUNCT ")")
(PUNCT "]")
(PUNCT "+")
(ID list)
(PUNCT "(")
(ID zip)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID get_loop_labels)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID old_loop_labels)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID code)
(PUNCT ".")
(ID label_used)
(PUNCT "(")
(ID label)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_label)
(PUNCT "(")
(ID label)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID _generate_vars_cleanup)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID py_entries)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID old_label)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_label)
(PUNCT "(")
(ID exit_scope)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID set_loop_labels)
(PUNCT "(")
(ID old_loop_labels)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID error_label)
(PUNCT "=")
(ID old_error_label)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID _generate_vars_cleanup)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID py_entries)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID entry)
(KEYWORD in)
(ID py_entries)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID is_cglobal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_var_gotref)
(PUNCT "(")
(ID entry)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_set)
(PUNCT "(")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_var_xdecref_clear)
(PUNCT "(")
(ID entry)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ComprehensionNode)
(PUNCT "(")
(ID ScopedExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID child_attrs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID constant_result)
(PUNCT "=")
(ID not_a_constant)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_declarations)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID append)
(PUNCT ".")
(ID target)
(PUNCT "=")
(ID self)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID init_scope)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_scoped_declarations)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID loop)
(PUNCT ".")
(ID analyse_declarations)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID has_local_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID loop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID loop)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_scoped_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID has_local_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID loop)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID loop)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_operation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_operation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID create_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID set_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID create_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID create_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID InternalError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID create_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID loop)
(PUNCT ".")
(ID generate_execution_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID loop)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ComprehensionAppendNode)
(PUNCT "(")
(ID Node)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID child_attrs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID target)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(NEWLINE)
(KEYWORD def)
(ID analyse_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_execution_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID set_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID InternalError)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID function)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_function_definitions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID generate_function_definitions)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID expr)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DictComprehensionAppendNode)
(PUNCT "(")
(ID ComprehensionAppendNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID child_attrs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_execution_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID target)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_function_definitions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID generate_function_definitions)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID generate_function_definitions)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key_expr)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value_expr)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID InlinedGeneratorExpressionNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID orig_func)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID target)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID gen)
(PUNCT ",")
(ID comprehension_type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID gbody)
(PUNCT "=")
(ID gen)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID gbody)
(NEWLINE)
(ID gbody)
(PUNCT ".")
(ID is_inlined)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID comprehension_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID comprehension_type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID set_type)
(PUNCT ",")
(ID dict_type)
(PUNCT ")")
(PUNCT ",")
(ID comprehension_type)
(NEWLINE)
(ID gbody)
(PUNCT ".")
(ID inlined_comprehension_type)
(PUNCT "=")
(ID comprehension_type)
(NEWLINE)
(ID kwargs)
(PUNCT ".")
(ID update)
(PUNCT "(")
(ID target)
(PUNCT "=")
(ID RawCNameExprNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID comprehension_type)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ")")
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID comprehension_type)
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID super)
(PUNCT "(")
(ID InlinedGeneratorExpressionNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID gen)
(PUNCT "=")
(ID gen)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID orig_func)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gen)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID gen)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID gen)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MergedSequenceNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(KEYWORD and)
(ID args)
(KEYWORD and)
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(ID list_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "=")
(ID ListNode)
(PUNCT "(")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID args)
(PUNCT ",")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID args)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_sequence_constructor)
(KEYWORD and)
(ID item)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID constant_result)
(PUNCT "<=")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_set_literal)
(KEYWORD or)
(ID item)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID constant_result)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID item)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(ID result)
(PUNCT ".")
(ID extend)
(PUNCT "(")
(ID items)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID set_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID set)
(PUNCT "(")
(ID result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID tuple)
(PUNCT "(")
(ID result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_sequence_constructor)
(KEYWORD and)
(ID item)
(PUNCT ".")
(ID mult_factor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID mult_factor)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(PUNCT "<=")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID item)
(PUNCT ".")
(ID is_set_literal)
(KEYWORD or)
(ID item)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID item)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID result)
(PUNCT ".")
(ID extend)
(PUNCT "(")
(ID items)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID set_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID set)
(PUNCT "(")
(ID result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID tuple)
(PUNCT "(")
(ID result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(KEYWORD and)
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD in)
(PUNCT "(")
(ID set_type)
(PUNCT ",")
(ID list_type)
(PUNCT ",")
(ID tuple_type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "=")
(ID args)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID is_set)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID set_type)
(NEWLINE)
(ID args)
(PUNCT "=")
(ID iter)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT "=")
(ID next)
(PUNCT "(")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID is_set)
(KEYWORD and)
(ID item)
(PUNCT ".")
(ID is_set_literal)
(KEYWORD or)
(KEYWORD not)
(ID is_set)
(KEYWORD and)
(ID item)
(PUNCT ".")
(ID is_sequence_constructor)
(KEYWORD and)
(ID item)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID list_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(KEYWORD if)
(ID is_set)
(KEYWORD else)
(LIT "s")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID item)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID helpers)
(PUNCT "=")
(ID set)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID is_set)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID add_func)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID extend_func)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID add_func)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID extend_func)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID is_set)
(KEYWORD and)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID is_set_literal)
(KEYWORD or)
(ID item)
(PUNCT ".")
(ID is_sequence_constructor)
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID is_sequence_constructor)
(KEYWORD and)
(KEYWORD not)
(ID item)
(PUNCT ".")
(ID mult_factor)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID is_set)
(KEYWORD and)
(ID item)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID helpers)
(PUNCT ".")
(ID add)
(PUNCT "(")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID item)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID add_func)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID is_set)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID helpers)
(PUNCT ".")
(ID add)
(PUNCT "(")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID helpers)
(PUNCT ".")
(ID add)
(PUNCT "(")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID item)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID extend_func)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID tuple_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID quick_temp_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID helper)
(KEYWORD in)
(ID sorted)
(PUNCT "(")
(ID helpers)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(PUNCT "*")
(ID helper)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SetNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID set_type)
(NEWLINE)
(ID is_set_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID range)
(PUNCT "(")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(NEWLINE)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "[")
(ID i)
(PUNCT "]")
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID set_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID set)
(PUNCT "(")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID constant_result)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID values)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID set)
(PUNCT "(")
(ID values)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DictNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID exclude_null_values)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID dict_type)
(NEWLINE)
(ID is_dict_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID reject_duplicates)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID obj_conversion_errors)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(PUNCT "@")
(ID classmethod)
(NEWLINE)
(KEYWORD def)
(ID from_pairs)
(PUNCT "(")
(ID cls)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID pairs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID cls)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID key_value_pairs)
(PUNCT "=")
(PUNCT "[")
(ID DictItemNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID key)
(PUNCT "=")
(ID k)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID v)
(PUNCT ")")
(KEYWORD for)
(ID k)
(PUNCT ",")
(ID v)
(KEYWORD in)
(ID pairs)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID dict)
(PUNCT "(")
(PUNCT "[")
(ID item)
(PUNCT ".")
(ID constant_result)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID pairs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID dict)
(PUNCT "(")
(ID pairs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID dict_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID local_errors)
(PUNCT "(")
(ID ignore)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(KEYWORD as)
(ID errors)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "=")
(PUNCT "[")
(ID item)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID obj_conversion_errors)
(PUNCT "=")
(ID errors)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID release_errors)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_struct_or_union)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID dict_type)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID DictNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID key_value_pairs)
(PUNCT "=")
(PUNCT "[")
(ID DictItemNode)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID key)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_struct_or_union)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID dst_type)
(PUNCT ".")
(ID is_struct)
(KEYWORD and)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ")")
(PUNCT "!=")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID dst_type)
(PUNCT ".")
(ID is_struct)
(KEYWORD and)
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ")")
(PUNCT "<")
(ID len)
(PUNCT "(")
(ID dst_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID var_entries)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ",")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ",")
(ID CoerceToPyTypeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID key)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID is_string_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID key)
(PUNCT "=")
(ID StringNode)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID key)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(ID member)
(PUNCT "=")
(ID dst_type)
(PUNCT ".")
(ID scope)
(PUNCT ".")
(ID lookup_here)
(PUNCT "(")
(ID key)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID member)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID key)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID value)
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID value)
(PUNCT ",")
(ID CoerceToPyTypeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(ID item)
(PUNCT ".")
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID member)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID dst_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID release_errors)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID err)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID obj_conversion_errors)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID report_error)
(PUNCT "(")
(ID err)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID obj_conversion_errors)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID is_dict)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(KEYWORD if)
(ID is_dict)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID release_errors)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID keys_seen)
(PUNCT "=")
(ID set)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID key_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID needs_error_helper)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID is_dict)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exclude_null_values)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID item)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID key)
(PUNCT "=")
(ID item)
(PUNCT ".")
(ID key)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID reject_duplicates)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID keys_seen)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID key)
(PUNCT ".")
(ID is_string_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID keys_seen)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID key)
(PUNCT ".")
(ID value)
(KEYWORD in)
(ID keys_seen)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID keys_seen)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID key_type)
(KEYWORD is)
(KEYWORD not)
(ID type)
(PUNCT "(")
(ID key)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID key_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID key_type)
(PUNCT "=")
(ID type)
(PUNCT "(")
(ID key)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(ID keys_seen)
(PUNCT ".")
(ID add)
(PUNCT "(")
(ID key)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID keys_seen)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID keys_seen)
(PUNCT ".")
(ID add)
(PUNCT "(")
(ID key)
(PUNCT ".")
(ID value)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID keys_seen)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID key)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID needs_error_helper)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID key)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID item)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID reject_duplicates)
(KEYWORD and)
(ID keys_seen)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exclude_null_values)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID value)
(PUNCT ",")
(ID item)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID item)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID item)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID needs_error_helper)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID item)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID item)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DictItemNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID nogil_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID key)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID __iter__)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID iter)
(PUNCT "(")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SortedDictKeysNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID list_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID arg)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID dict_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID dict_result)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID keys_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID dict_result)
(PUNCT ",")
(ID keys_cname)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref_set)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ModuleNameMixin)
(PUNCT "(")
(ID object)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID get_py_mod_name)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID code)
(PUNCT ".")
(ID get_py_string_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID module_name)
(PUNCT ",")
(ID identifier)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_py_qualified_name)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID code)
(PUNCT ".")
(ID get_py_string_const)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID qualname)
(PUNCT ",")
(ID identifier)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ClassNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ",")
(ID ModuleNameMixin)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID bases)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID bases)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID dict)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID py_mod_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_py_mod_name)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID qualname)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_py_qualified_name)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID bases)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID dict)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID cname)
(PUNCT ",")
(ID qualname)
(PUNCT ",")
(ID py_mod_name)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID Py3ClassNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mkw)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID mkw)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mkw)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID mkw)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID metaclass)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID metaclass)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID metaclass)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID metaclass)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID metaclass)
(PUNCT ",")
(ID cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID bases)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID dict)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID mkw)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID calculate_metaclass)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID allow_py2_metaclass)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyClassMetaclassNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mkw)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID call)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID bases)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID mkw)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID call)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID bases)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID call)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyClassNamespaceNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ",")
(ID ModuleNameMixin)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID py_mod_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_py_mod_name)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID qualname)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_py_qualified_name)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID doc_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID doc)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID doc_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mkw)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID mkw)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID mkw)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID mkw)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID metaclass)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID metaclass)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID metaclass)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID metaclass)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID metaclass)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID bases)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID cname)
(PUNCT ",")
(ID qualname)
(PUNCT ",")
(ID mkw)
(PUNCT ",")
(ID py_mod_name)
(PUNCT ",")
(ID doc_code)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ClassCellInjectorNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID is_active)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID analyse_expressions)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_active)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_injection_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID classobj_cname)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_active)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID classobj_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ClassCellNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_generator)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_generator)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID self_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID generator_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyCFunctionNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ",")
(ID ModuleNameMixin)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID self_object)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID code_object)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID binding)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID def_node)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID defaults)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID defaults_struct)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID defaults_pyobjects)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(ID defaults_tuple)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID defaults_kwdict)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID annotations_dict)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID specialized_cpdefs)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_specialization)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(PUNCT "@")
(ID classmethod)
(NEWLINE)
(KEYWORD def)
(ID from_defnode)
(PUNCT "(")
(ID cls)
(PUNCT ",")
(ID node)
(PUNCT ",")
(ID binding)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID cls)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID def_node)
(PUNCT "=")
(ID node)
(PUNCT ",")
(ID pymethdef_cname)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID pymethdef_cname)
(PUNCT ",")
(ID binding)
(PUNCT "=")
(ID binding)
(KEYWORD or)
(ID node)
(PUNCT ".")
(ID specialized_cpdefs)
(PUNCT ",")
(ID specialized_cpdefs)
(PUNCT "=")
(ID node)
(PUNCT ".")
(ID specialized_cpdefs)
(PUNCT ",")
(ID code_object)
(PUNCT "=")
(ID CodeObjectNode)
(PUNCT "(")
(ID node)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID binding)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_default_args)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_default_args)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID nonliteral_objects)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID nonliteral_other)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID default_args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID default_kwargs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID annotations)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID must_use_constants)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID is_c_class_scope)
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID is_wrapper)
(KEYWORD and)
(ID env)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID default)
(KEYWORD and)
(KEYWORD not)
(ID must_use_constants)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID default)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID is_dynamic)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID nonliteral_objects)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID nonliteral_other)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID default)
(PUNCT "=")
(ID DefaultLiteralArgNode)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID default)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID kw_only)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID default_kwargs)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID default_args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_annotation)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT ")")
(NEWLINE)
(ID annotations)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID star_arg)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID starstar_arg)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(KEYWORD and)
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_annotation)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT ")")
(NEWLINE)
(ID annotations)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID annotation)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID annotation)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID return_type_annotation)
(NEWLINE)
(KEYWORD if)
(ID annotation)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID annotation)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID analyse_annotation)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID annotation)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID return_type_annotation)
(PUNCT "=")
(ID annotation)
(NEWLINE)
(ID annotations)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID annotation)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID annotation)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID nonliteral_objects)
(KEYWORD or)
(ID nonliteral_other)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID module_scope)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID global_scope)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID cname)
(PUNCT "=")
(ID module_scope)
(PUNCT ".")
(ID next_id)
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID defaults_struct_prefix)
(PUNCT ")")
(NEWLINE)
(ID scope)
(PUNCT "=")
(ID Symtab)
(PUNCT ".")
(ID StructOrUnionScope)
(PUNCT "(")
(ID cname)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID nonliteral_objects)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID scope)
(PUNCT ".")
(ID declare_var)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID arg_prefix)
(PUNCT "+")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID allow_pyobject)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID entry)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID nonliteral_other)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID scope)
(PUNCT ".")
(ID declare_var)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID arg_prefix)
(PUNCT "+")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID allow_pyobject)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID allow_memoryview)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID entry)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID entry)
(PUNCT "=")
(ID module_scope)
(PUNCT ".")
(ID declare_struct_or_union)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID scope)
(PUNCT ",")
(LIT "1")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID cname)
(PUNCT "=")
(ID cname)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT "=")
(ID scope)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults_pyobjects)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID nonliteral_objects)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID arg)
(PUNCT ",")
(ID entry)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID defaults)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID default_value)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID dynamic_args_cname)
(PUNCT ",")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID defaults_struct)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT ".")
(ID name)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID default_args)
(KEYWORD or)
(ID default_kwargs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID defaults_struct)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID default_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID defaults_tuple)
(PUNCT "=")
(ID TupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(PUNCT ".")
(ID default)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID default_args)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults_tuple)
(PUNCT "=")
(ID defaults_tuple)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID default_kwargs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID defaults_kwdict)
(PUNCT "=")
(ID DictNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID key_value_pairs)
(PUNCT "=")
(PUNCT "[")
(ID DictItemNode)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID key)
(PUNCT "=")
(ID IdentifierStringNode)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ")")
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID default)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID default_kwargs)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults_kwdict)
(PUNCT "=")
(ID defaults_kwdict)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID default_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID defaults_tuple)
(PUNCT "=")
(ID DefaultsTupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID default_args)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID defaults_tuple)
(PUNCT "=")
(ID NoneNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID default_kwargs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID defaults_kwdict)
(PUNCT "=")
(ID DefaultsKwDictNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID default_kwargs)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID defaults_kwdict)
(PUNCT "=")
(ID NoneNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID defaults_getter)
(PUNCT "=")
(ID Nodes)
(PUNCT ".")
(ID DefNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID star_arg)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID starstar_arg)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID body)
(PUNCT "=")
(ID Nodes)
(PUNCT ".")
(ID ReturnStatNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID return_type)
(PUNCT "=")
(ID py_object_type)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID TupleNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID defaults_tuple)
(PUNCT ",")
(ID defaults_kwdict)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID decorators)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID name)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID module_scope)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID global_scope)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID defaults_getter)
(PUNCT ".")
(ID analyse_declarations)
(PUNCT "(")
(ID module_scope)
(PUNCT ")")
(NEWLINE)
(ID defaults_getter)
(PUNCT "=")
(ID defaults_getter)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID module_scope)
(PUNCT ")")
(NEWLINE)
(ID defaults_getter)
(PUNCT ".")
(ID body)
(PUNCT "=")
(ID defaults_getter)
(PUNCT ".")
(ID body)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID defaults_getter)
(PUNCT ".")
(ID local_scope)
(PUNCT ")")
(NEWLINE)
(ID defaults_getter)
(PUNCT ".")
(ID py_wrapper_required)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID defaults_getter)
(PUNCT ".")
(ID pymethdef_required)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID defaults_getter)
(PUNCT "=")
(ID defaults_getter)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID annotations)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID annotations_dict)
(PUNCT "=")
(ID DictNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID key_value_pairs)
(PUNCT "=")
(PUNCT "[")
(ID DictItemNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID key)
(PUNCT "=")
(ID IdentifierStringNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID name)
(PUNCT ")")
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ")")
(KEYWORD for)
(ID pos)
(PUNCT ",")
(ID name)
(PUNCT ",")
(ID value)
(KEYWORD in)
(ID annotations)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID annotations_dict)
(PUNCT "=")
(ID annotations_dict)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_annotation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID annotation)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID annotation)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID atype)
(PUNCT "=")
(ID annotation)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID atype)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID annotation)
(PUNCT "=")
(ID UnicodeNode)
(PUNCT "(")
(ID annotation)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(ID atype)
(PUNCT ".")
(ID declaration_code)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID for_display)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID annotation)
(PUNCT "=")
(ID annotation)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID annotation)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID annotation)
(PUNCT "=")
(ID annotation)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID annotation)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID self_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID self_object)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self_result)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID self_object)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self_result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID binding)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_cyfunction_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_pycfunction_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_pycfunction_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID py_mod_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_py_mod_name)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pymethdef_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID self_result_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID py_mod_name)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_cyfunction_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID specialized_cpdefs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID def_node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID specialized_cpdefs)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID def_node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID def_node)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID specialized_cpdefs)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID is_specialization)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID constructor)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID constructor)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID code_object)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code_object_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID code_object)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code_object_result)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID flags)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID def_node)
(PUNCT ".")
(ID is_staticmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID flags)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID def_node)
(PUNCT ".")
(ID is_classmethod)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID flags)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID def_node)
(PUNCT ".")
(ID local_scope)
(PUNCT ".")
(ID parent_scope)
(PUNCT ".")
(ID is_c_class_scope)
(KEYWORD and)
(KEYWORD not)
(ID def_node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_anonymous)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID flags)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID flags)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID flags)
(PUNCT "=")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID flags)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID flags)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID constructor)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pymethdef_cname)
(PUNCT ",")
(ID flags)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID get_py_qualified_name)
(PUNCT "(")
(ID code)
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID self_result_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID get_py_mod_name)
(PUNCT "(")
(ID code)
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID moddict_cname)
(PUNCT ",")
(ID code_object_result)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID def_node)
(PUNCT ".")
(ID requires_classobj)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID code)
(PUNCT ".")
(ID pyclass_stack)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID class_node)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID pyclass_stack)
(PUNCT "[")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID class_node)
(PUNCT ".")
(ID class_cell)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_giveref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID defaults)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID defaults_pyobjects)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID defaults)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID arg)
(PUNCT ",")
(ID entry)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID defaults)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT ".")
(ID generate_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID target)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID defaults)
(PUNCT ",")
(ID entry)
(PUNCT ".")
(ID cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID defaults_tuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID defaults_tuple)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID defaults_kwdict)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID defaults_kwdict)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID def_node)
(PUNCT ".")
(ID defaults_getter)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID def_node)
(PUNCT ".")
(ID defaults_getter)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID pyfunc_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID annotations_dict)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID annotations_dict)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID InnerFunctionNode)
(PUNCT "(")
(ID PyCFunctionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID binding)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID needs_self_code)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID self_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID needs_self_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID Naming)
(PUNCT ".")
(ID cur_scope_cname)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CodeObjectNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID result_code)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID def_node)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID def_node)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID def_node)
(PUNCT "=")
(ID def_node)
(PUNCT ")")
(NEWLINE)
(ID args)
(PUNCT "=")
(ID list)
(PUNCT "(")
(ID def_node)
(PUNCT ".")
(ID args)
(PUNCT ")")
(NEWLINE)
(ID local_vars)
(PUNCT "=")
(PUNCT "[")
(ID arg)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID def_node)
(PUNCT ".")
(ID local_scope)
(PUNCT ".")
(ID var_entries)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID varnames)
(PUNCT "=")
(ID TupleNode)
(PUNCT "(")
(ID def_node)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(PUNCT "[")
(ID IdentifierStringNode)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID args)
(PUNCT "+")
(ID local_vars)
(PUNCT "]")
(PUNCT ",")
(ID is_temp)
(PUNCT "=")
(LIT "0")
(PUNCT ",")
(ID is_literal)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result_code)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_const)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID cleanup_level)
(PUNCT "=")
(LIT "2")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result_code)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_const)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(ID cleanup_level)
(PUNCT "=")
(LIT "2")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_cached_constants_writer)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID func)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID def_node)
(NEWLINE)
(ID func_name)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_string_const)
(PUNCT "(")
(ID func)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID identifier)
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID is_str)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID unicode_value)
(PUNCT "=")
(ID func)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID file_path)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID bytes_literal)
(PUNCT "(")
(ID func)
(PUNCT ".")
(ID pos)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID get_filenametable_entry)
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID encode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID file_path_const)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID get_py_string_const)
(PUNCT "(")
(ID file_path)
(PUNCT ",")
(ID identifier)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID is_str)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID flags)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID star_arg)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID flags)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID starstar_arg)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID flags)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID func)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "-")
(ID func)
(PUNCT ".")
(ID num_kwonly_args)
(PUNCT ",")
(ID func)
(PUNCT ".")
(ID num_kwonly_args)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID varnames)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID flags)
(PUNCT ")")
(KEYWORD or)
(LIT "s")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID empty_bytes)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID empty_tuple)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID empty_tuple)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID varnames)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID empty_tuple)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID empty_tuple)
(PUNCT ",")
(ID file_path_const)
(PUNCT ",")
(ID func_name)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID empty_bytes)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DefaultLiteralArgNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID is_literal)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID DefaultLiteralArgNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID arg)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID evaluated)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID evaluated)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID evaluated)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DefaultNonLiteralArgNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID defaults_struct)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID DefaultNonLiteralArgNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID arg)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT "=")
(ID defaults_struct)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT ".")
(ID name)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID self_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID defaults_struct)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ")")
(PUNCT ".")
(ID cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DefaultsTupleNode)
(PUNCT "(")
(ID TupleNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID defaults)
(PUNCT ",")
(ID defaults_struct)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID args)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID defaults)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID default)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID DefaultNonLiteralArgNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID defaults_struct)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID default)
(NEWLINE)
(DEDENT)
(ID args)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID super)
(PUNCT "(")
(ID DefaultsTupleNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID args)
(PUNCT "=")
(ID args)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID DefaultsTupleNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID skip_children)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DefaultsKwDictNode)
(PUNCT "(")
(ID DictNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID defaults)
(PUNCT ",")
(ID defaults_struct)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID items)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID defaults)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name)
(PUNCT "=")
(ID IdentifierStringNode)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID default)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID DefaultNonLiteralArgNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID defaults_struct)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID default)
(NEWLINE)
(DEDENT)
(ID items)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID DictItemNode)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID key)
(PUNCT "=")
(ID name)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID arg)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID super)
(PUNCT "(")
(ID DefaultsKwDictNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID key_value_pairs)
(PUNCT "=")
(ID items)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID LambdaNode)
(PUNCT "(")
(ID InnerFunctionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID child_attrs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID name)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID analyse_declarations)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID lambda_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID lambda_name)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID next_id)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID no_assignment_synthesis)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID pymethdef_required)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID analyse_declarations)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID is_cyfunction)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID pymethdef_cname)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID pymethdef_cname)
(NEWLINE)
(ID env)
(PUNCT ".")
(ID add_lambda_def)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID LambdaNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID generate_execution_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID super)
(PUNCT "(")
(ID LambdaNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID generate_result_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID GeneratorExpressionNode)
(PUNCT "(")
(ID LambdaNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID name)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID binding)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID analyse_declarations)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID genexpr_name)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID next_id)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID super)
(PUNCT "(")
(ID GeneratorExpressionNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID analyse_declarations)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID pymethdef_required)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID py_wrapper_required)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID is_cyfunction)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID signature)
(PUNCT "=")
(ID TypeSlots)
(PUNCT ".")
(ID pyfunction_noargs)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID def_node)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID pyfunc_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID self_result_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID YieldExprNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID label_num)
(PUNCT "=")
(LIT "0")
(NEWLINE)
(ID is_yield_from)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID is_await)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID in_async_gen)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID expr_keyword)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID label_num)
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID is_yield_from)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID in_async_gen)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID expr_keyword)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID coerce_yield_argument)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_yield_argument)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID py_object_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_init_to_py_none)
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID generate_yield_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_yield_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID label_num)
(PUNCT ",")
(ID label_name)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_yield_label)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID expr_keyword)
(PUNCT ".")
(ID replace)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID use_label)
(PUNCT "(")
(ID label_name)
(PUNCT ")")
(NEWLINE)
(ID saved)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID closure_temps)
(PUNCT ".")
(ID reset)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID cname)
(PUNCT ",")
(ID type)
(PUNCT ",")
(ID manage_ref)
(KEYWORD in)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID temps_in_use)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID save_cname)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID closure_temps)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID saved)
(PUNCT ".")
(ID append)
(PUNCT "(")
(PUNCT "(")
(ID cname)
(PUNCT ",")
(ID save_cname)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_xgiveref)
(PUNCT "(")
(ID cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID cur_scope_cname)
(PUNCT ",")
(ID save_cname)
(PUNCT ",")
(ID cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_xgiveref)
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ")")
(NEWLINE)
(ID profile)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID linetrace)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID profile)
(KEYWORD or)
(ID linetrace)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_trace_return)
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ",")
(ID nogil)
(PUNCT "=")
(KEYWORD not)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID gil_owned)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_finish_refcount_context)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID current_except)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID Naming)
(PUNCT ".")
(ID generator_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID Naming)
(PUNCT ".")
(ID generator_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(LIT "s")
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID in_async_gen)
(KEYWORD else)
(LIT "s")
(PUNCT ",")
(LIT "s")
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_await)
(KEYWORD else)
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID generator_cname)
(PUNCT ",")
(ID label_num)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID in_async_gen)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_await)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_label)
(PUNCT "(")
(ID label_name)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID cname)
(PUNCT ",")
(ID save_cname)
(PUNCT ",")
(ID type)
(KEYWORD in)
(ID saved)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID cname)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID cur_scope_cname)
(PUNCT ",")
(ID save_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID cur_scope_cname)
(PUNCT ",")
(ID save_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_xgotref)
(PUNCT "(")
(ID cname)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID generate_sent_value_handling_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID sent_value_cname)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result_is_used)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID sent_value_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_sent_value_handling_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID value_cname)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID value_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID _YieldDelegationExprNode)
(PUNCT "(")
(ID YieldExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID yield_from_func)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID NotImplementedError)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID source_cname)
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID decref_source)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID source_cname)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID yield_from_func)
(PUNCT "(")
(ID code)
(PUNCT ")")
(PUNCT ",")
(ID Naming)
(PUNCT ".")
(ID generator_cname)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD if)
(ID source_cname)
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID source_cname)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID source_cname)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID decref_source)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID source_cname)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_xgotref)
(PUNCT "(")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID Naming)
(PUNCT ".")
(ID retval_cname)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_yield_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID result_is_used)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID fetch_iteration_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID handle_iteration_exception)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID fetch_iteration_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_error_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID handle_iteration_exception)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID YieldFromExprNode)
(PUNCT "(")
(ID _YieldDelegationExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_yield_from)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID expr_keyword)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID coerce_yield_argument)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID yield_from_func)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AwaitExprNode)
(PUNCT "(")
(ID _YieldDelegationExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_await)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID expr_keyword)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID coerce_yield_argument)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID yield_from_func)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AwaitIterNextExprNode)
(PUNCT "(")
(ID AwaitExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID _generate_break)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID fetch_iteration_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID code)
(PUNCT ".")
(ID break_label)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID _generate_break)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID super)
(PUNCT "(")
(ID AwaitIterNextExprNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID fetch_iteration_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_sent_value_handling_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID value_cname)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID code)
(PUNCT ".")
(ID break_label)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID value_cname)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID _generate_break)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID GlobalsExprNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID dict_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID Builtin)
(PUNCT ".")
(ID globals_utility_code)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID LocalsDictItemNode)
(PUNCT "(")
(ID DictItemNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID key)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID key)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID key)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID can_coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID FuncLocalsExprNode)
(PUNCT "(")
(ID DictNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID local_vars)
(PUNCT "=")
(ID sorted)
(PUNCT "(")
(PUNCT "[")
(ID entry)
(PUNCT ".")
(ID name)
(KEYWORD for)
(ID entry)
(KEYWORD in)
(ID env)
(PUNCT ".")
(ID entries)
(PUNCT ".")
(ID values)
(PUNCT "(")
(PUNCT ")")
(KEYWORD if)
(ID entry)
(PUNCT ".")
(ID name)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID items)
(PUNCT "=")
(PUNCT "[")
(ID LocalsDictItemNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID key)
(PUNCT "=")
(ID IdentifierStringNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID var)
(PUNCT ")")
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID NameNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID name)
(PUNCT "=")
(ID var)
(PUNCT ",")
(ID allow_null)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID var)
(KEYWORD in)
(ID local_vars)
(PUNCT "]")
(NEWLINE)
(ID DictNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID key_value_pairs)
(PUNCT "=")
(ID items)
(PUNCT ",")
(ID exclude_null_values)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID super)
(PUNCT "(")
(ID FuncLocalsExprNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT "=")
(PUNCT "[")
(ID i)
(KEYWORD for)
(ID i)
(KEYWORD in)
(ID node)
(PUNCT ".")
(ID key_value_pairs)
(KEYWORD if)
(ID i)
(PUNCT ".")
(ID value)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyClassLocalsExprNode)
(PUNCT "(")
(ID AtomicExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID pyclass_dict)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID AtomicExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID pyclass_dict)
(PUNCT "=")
(ID pyclass_dict)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pyclass_dict)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID pyclass_dict)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID LocalsExprNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID scope_node)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID GlobalsExprNode)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID env)
(PUNCT ".")
(ID is_py_class_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyClassLocalsExprNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID scope_node)
(PUNCT ".")
(ID dict)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID FuncLocalsExprNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID compile_time_unary_operators)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID not_)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID inv)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID neg)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD class)
(ID UnopNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID infix)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID compile_time_unary_operators)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID func)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID compile_time_unary_operators)
(PUNCT ".")
(ID get)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID func)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID func)
(PUNCT "(")
(ID operand)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID operand_type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(ID operand_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cpp_type)
(PUNCT "=")
(ID operand_type)
(PUNCT ".")
(ID find_cpp_operation_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID cpp_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID cpp_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID infer_unop_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID operand_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_unop_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID operand_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID operand_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(ID type_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_pythran_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PythranExpr)
(PUNCT "(")
(ID pythran_unaryop_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_py_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID coerce_operand_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_cpp_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_cpp_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_c_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_py_operation)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ctuple)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_pythran_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID np_pythran)
(PUNCT "=")
(ID has_np_pythran)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID op_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD return)
(ID np_pythran)
(KEYWORD and)
(PUNCT "(")
(ID op_type)
(PUNCT ".")
(ID is_buffer)
(KEYWORD or)
(ID op_type)
(PUNCT ".")
(ID is_pythran_expr)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_cpp_operation)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD return)
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_operand_to_pyobject)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pythran_expr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID generate_py_operation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cpp_operation)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_py_operation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID py_operation_function)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_error)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_cpp_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID overload_check)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup_operator)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID overload_check)
(KEYWORD and)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID exception_check)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID exception_value)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_value)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID cpp_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID find_cpp_operation_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID overload_check)
(KEYWORD and)
(ID cpp_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID cpp_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NotNode)
(PUNCT "(")
(ID UnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operator)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD not)
(ID operand)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_unop_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID operand_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID operand_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID operand_type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_cpp_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID UnaryPlusNode)
(PUNCT "(")
(ID UnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operator)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cpp_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID UnaryMinusNode)
(PUNCT "(")
(ID UnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operator)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_numeric)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_enum)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID infix)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID infix)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID unary_op)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID get_constant_c_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID value)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID value)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID TildeNode)
(PUNCT "(")
(ID UnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_enum)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CUnopNode)
(PUNCT "(")
(ID UnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID is_py_operation)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DereferenceNode)
(PUNCT "(")
(ID CUnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operator)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID infer_unop_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID operand_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID operand_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DecrementIncrementNode)
(PUNCT "(")
(ID CUnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_numeric)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_prefix)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID inc_dec_constructor)
(PUNCT "(")
(ID is_prefix)
(PUNCT ",")
(ID operator)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD lambda)
(ID pos)
(PUNCT ",")
(PUNCT "**")
(ID kwds)
(PUNCT ":")
(ID DecrementIncrementNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID is_prefix)
(PUNCT "=")
(ID is_prefix)
(PUNCT ",")
(ID operator)
(PUNCT "=")
(ID operator)
(PUNCT ",")
(PUNCT "**")
(ID kwds)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID AmpersandNode)
(PUNCT "(")
(ID CUnopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operator)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID infer_unop_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID operand_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_ptr_type)
(PUNCT "(")
(ID operand_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID argtype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID argtype)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_cpp_operation)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID overload_check)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID argtype)
(PUNCT ".")
(ID is_cfunction)
(KEYWORD or)
(ID argtype)
(PUNCT ".")
(ID is_reference)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID is_addressable)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID argtype)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID error)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID error)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID argtype)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID argtype)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID error)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID name)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID is_name)
(KEYWORD else)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID attribute)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID is_attribute)
(KEYWORD else)
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID argtype)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_ptr_type)
(PUNCT "(")
(ID argtype)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID check_const_addr)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID mess)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID mess)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID unop_node_classes)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(ID UnaryPlusNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID UnaryMinusNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID TildeNode)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID unop_node)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID operator)
(PUNCT ",")
(ID operand)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID operand)
(PUNCT ",")
(ID IntNode)
(PUNCT ")")
(KEYWORD and)
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID IntNode)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID operand)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID str)
(PUNCT "(")
(PUNCT "-")
(ID Utils)
(PUNCT ".")
(ID str_to_number)
(PUNCT "(")
(ID operand)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID longness)
(PUNCT "=")
(ID operand)
(PUNCT ".")
(ID longness)
(PUNCT ",")
(ID unsigned)
(PUNCT "=")
(ID operand)
(PUNCT ".")
(ID unsigned)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID operand)
(PUNCT ",")
(ID UnopNode)
(PUNCT ")")
(KEYWORD and)
(ID operand)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(ID operator)
(KEYWORD in)
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(PUNCT "(")
(ID operator)
(PUNCT ",")
(PUNCT ")")
(PUNCT "*")
(LIT "4")
(PUNCT ")")
(PUNCT ",")
(LIT "5")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID unop_node_classes)
(PUNCT "[")
(ID operator)
(PUNCT "]")
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID operator)
(PUNCT "=")
(ID operator)
(PUNCT ",")
(ID operand)
(PUNCT "=")
(ID operand)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID TypecastNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID declarator)
(PUNCT "=")
(ID type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID _)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID declarator)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID _)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID declarator)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID calculate_constant_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cfunction)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID to_py)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(ID from_py)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(KEYWORD if)
(ID from_py)
(KEYWORD and)
(KEYWORD not)
(ID to_py)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_numeric)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID to_py)
(KEYWORD and)
(KEYWORD not)
(ID from_py)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytes_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID CoerceIntToBytesNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID can_coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID is_void)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID is_struct)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID from_py)
(KEYWORD and)
(KEYWORD not)
(ID to_py)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID create_from_py_utility_code)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID is_void)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID is_struct)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID from_py)
(KEYWORD and)
(ID to_py)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID typecheck)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID PyTypeTestNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID notnone)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ",")
(ID SliceIndexNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID is_temp)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID operand_result)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand_result)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID real_part)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID real_type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID operand_result)
(PUNCT ")")
(NEWLINE)
(ID imag_part)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID real_type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID operand_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID real_part)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID real_type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID operand_result)
(PUNCT ")")
(NEWLINE)
(ID imag_part)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_parts)
(PUNCT ",")
(ID real_part)
(PUNCT ",")
(ID imag_part)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID operand_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID get_constant_c_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID operand_result)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID operand_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID ERR_START)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID ERR_NOT_STOP)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID ERR_STEPS)
(PUNCT "=")
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID ERR_NOT_POINTER)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID ERR_BASE_TYPE)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD class)
(ID CythonArrayNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID shapes)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID mode)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID array_dtype)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID shape_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ssize_t_type)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID MemoryView)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID array_dtype)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID array_dtype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID array_dtype)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID array_dtype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base_type_node)
(PUNCT ".")
(ID base_type_node)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID axes)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base_type_node)
(PUNCT ".")
(ID axes)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID shapes)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID ndim)
(PUNCT "=")
(ID len)
(PUNCT "(")
(ID axes)
(PUNCT ")")
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID ERR_NOT_POINTER)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID array_dimension_sizes)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID array_dimension_sizes)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID size)
(PUNCT ")")
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID base_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID base_type)
(PUNCT ".")
(ID same_as)
(PUNCT "(")
(ID array_dtype)
(PUNCT ")")
(KEYWORD or)
(ID base_type)
(PUNCT ".")
(ID is_void)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID ERR_BASE_TYPE)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(KEYWORD and)
(ID len)
(PUNCT "(")
(ID array_dimension_sizes)
(PUNCT ")")
(PUNCT "!=")
(ID ndim)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID ndim)
(PUNCT ",")
(ID len)
(PUNCT "(")
(ID array_dimension_sizes)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID axis_no)
(PUNCT ",")
(ID axis)
(KEYWORD in)
(ID enumerate)
(PUNCT "(")
(ID axes)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID axis)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID axis)
(PUNCT ".")
(ID start)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID ERR_START)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID axis)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID is_none)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID array_dimension_sizes)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID dimsize)
(PUNCT "=")
(ID array_dimension_sizes)
(PUNCT "[")
(ID axis_no)
(PUNCT "]")
(NEWLINE)
(ID axis)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID IntNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID str)
(PUNCT "(")
(ID dimsize)
(PUNCT ")")
(PUNCT ",")
(ID constant_result)
(PUNCT "=")
(ID dimsize)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID axis)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID ERR_NOT_STOP)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID axis)
(PUNCT ".")
(ID stop)
(PUNCT "=")
(ID axis)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID shape)
(PUNCT "=")
(ID axis)
(PUNCT ".")
(ID stop)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID shape_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID shape)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID shape)
(PUNCT ".")
(ID coerce_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID shapes)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID shape)
(PUNCT ")")
(NEWLINE)
(ID first_or_last)
(PUNCT "=")
(ID axis_no)
(KEYWORD in)
(PUNCT "(")
(LIT "0")
(PUNCT ",")
(ID ndim)
(PUNCT "-")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_none)
(KEYWORD and)
(ID first_or_last)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT "=")
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_literal)
(KEYWORD and)
(KEYWORD not)
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT "!=")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID ERR_STEPS)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID axis_no)
(PUNCT "==")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID mode)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID is_none)
(KEYWORD and)
(KEYWORD not)
(ID first_or_last)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID axis)
(PUNCT ".")
(ID step)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID ERR_STEPS)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID is_name)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID coerce_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID axes)
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT "]")
(PUNCT "*")
(ID len)
(PUNCT "(")
(ID axes)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID mode)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID axes)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID axes)
(PUNCT "[")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID coercion_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID MemoryViewSliceType)
(PUNCT "(")
(ID array_dtype)
(PUNCT ",")
(ID axes)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID coercion_type)
(PUNCT ".")
(ID validate_memslice_dtype)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_cython_array_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID MemoryView)
(PUNCT ".")
(ID use_cython_array_utility_code)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID MemoryView)
(PUNCT ".")
(ID typeinfo_to_format_code)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID allocate_temp_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID RuntimeError)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID get_cython_array_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_cython_array_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cython_scope)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID global_scope)
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID context)
(PUNCT ".")
(ID cython_scope)
(NEWLINE)
(ID cython_scope)
(PUNCT ".")
(ID load_cythonscope)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID cython_scope)
(PUNCT ".")
(ID viewscope)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID Buffer)
(NEWLINE)
(ID shapes)
(PUNCT "=")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID shape_type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID shape)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID shape)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID shapes)
(PUNCT "]")
(NEWLINE)
(ID dtype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID coercion_type)
(PUNCT ".")
(ID dtype)
(NEWLINE)
(ID shapes_temp)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID format_temp)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID py_object_type)
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID itemsize)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID dtype)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID type_info)
(PUNCT "=")
(ID Buffer)
(PUNCT ".")
(ID get_type_information_cname)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID dtype)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID format_temp)
(PUNCT ",")
(ID type_info)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID buildvalue_fmt)
(PUNCT "=")
(LIT "s")
(PUNCT "*")
(ID len)
(PUNCT "(")
(ID shapes)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID shapes_temp)
(PUNCT ",")
(ID buildvalue_fmt)
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID shapes)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID err)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID format_temp)
(PUNCT ",")
(ID shapes_temp)
(PUNCT ",")
(ID format_temp)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if)
(PUNCT "(")
(ID err)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID format_temp)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID shapes_temp)
(PUNCT ")")
(NEWLINE)
(ID tup)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID shapes_temp)
(PUNCT ",")
(ID itemsize)
(PUNCT ",")
(ID format_temp)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID mode)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT "%")
(ID tup)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID dispose)
(PUNCT "(")
(ID temp)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_decref_clear)
(PUNCT "(")
(ID temp)
(PUNCT ",")
(ID py_object_type)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID temp)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID dispose)
(PUNCT "(")
(ID shapes_temp)
(PUNCT ")")
(NEWLINE)
(ID dispose)
(PUNCT "(")
(ID format_temp)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID classmethod)
(NEWLINE)
(KEYWORD def)
(ID from_carray)
(PUNCT "(")
(ID cls)
(PUNCT ",")
(ID src_node)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID pos)
(PUNCT "=")
(ID src_node)
(PUNCT ".")
(ID pos)
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID src_node)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID none_node)
(PUNCT "=")
(ID NoneNode)
(PUNCT "(")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID axes)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID base_type)
(PUNCT ".")
(ID is_array)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID axes)
(PUNCT ".")
(ID append)
(PUNCT "(")
(ID SliceNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID start)
(PUNCT "=")
(ID none_node)
(PUNCT ",")
(ID stop)
(PUNCT "=")
(ID none_node)
(PUNCT ",")
(ID step)
(PUNCT "=")
(ID none_node)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID base_type)
(PUNCT "=")
(ID base_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(ID axes)
(PUNCT "[")
(PUNCT "-")
(LIT "1")
(PUNCT "]")
(PUNCT ".")
(ID step)
(PUNCT "=")
(ID IntNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID is_c_literal)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID memslicenode)
(PUNCT "=")
(ID Nodes)
(PUNCT ".")
(ID MemoryViewSliceTypeNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID axes)
(PUNCT "=")
(ID axes)
(PUNCT ",")
(ID base_type_node)
(PUNCT "=")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(ID result)
(PUNCT "=")
(ID CythonArrayNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID base_type_node)
(PUNCT "=")
(ID memslicenode)
(PUNCT ",")
(ID operand)
(PUNCT "=")
(ID src_node)
(PUNCT ",")
(ID array_dtype)
(PUNCT "=")
(ID base_type)
(PUNCT ")")
(NEWLINE)
(ID result)
(PUNCT "=")
(ID result)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID result)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SizeofNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_size_t_type)
(NEWLINE)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SizeofTypeNode)
(PUNCT "(")
(ID SizeofNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID arg_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "0")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID module_path)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID path)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID module_path)
(NEWLINE)
(ID obj)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(ID path)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID obj)
(PUNCT ".")
(ID as_module)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand)
(PUNCT "=")
(ID NameNode)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID name)
(PUNCT "=")
(ID path)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID attr)
(KEYWORD in)
(ID path)
(PUNCT "[")
(LIT "1")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand)
(PUNCT "=")
(ID AttributeNode)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID obj)
(PUNCT "=")
(ID operand)
(PUNCT ",")
(ID attribute)
(PUNCT "=")
(ID attr)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID operand)
(PUNCT "=")
(ID AttributeNode)
(PUNCT "(")
(ID pos)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID obj)
(PUNCT "=")
(ID operand)
(PUNCT ",")
(ID attribute)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT "=")
(ID SizeofVarNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID operand)
(PUNCT "=")
(ID operand)
(PUNCT ")")
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID base_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID base_type)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID _)
(PUNCT ",")
(ID arg_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID declarator)
(PUNCT ".")
(ID analyse)
(PUNCT "(")
(ID base_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT "=")
(ID arg_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID check_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_type)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_type)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID arg_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID arg_type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID arg_type)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg_type)
(PUNCT ".")
(ID is_void)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID arg_type)
(PUNCT ".")
(ID is_complete)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID arg_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID declaration_code)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID deref)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID arg_code)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SizeofVarNode)
(PUNCT "(")
(ID SizeofNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand_as_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID operand_as_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT "=")
(ID operand_as_type)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID is_fused)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID specialize)
(PUNCT "(")
(ID env)
(PUNCT ".")
(ID fused_to_specific)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID __class__)
(PUNCT "=")
(ID SizeofTypeNode)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID check_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID TypeidNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID arg_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_variable)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID get_type_info_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env_module)
(PUNCT "=")
(ID env)
(NEWLINE)
(KEYWORD while)
(KEYWORD not)
(ID env_module)
(PUNCT ".")
(ID is_module_scope)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env_module)
(PUNCT "=")
(ID env_module)
(PUNCT ".")
(ID outer_scope)
(NEWLINE)
(DEDENT)
(ID typeinfo_module)
(PUNCT "=")
(ID env_module)
(PUNCT ".")
(ID find_module)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID typeinfo_entry)
(PUNCT "=")
(ID typeinfo_module)
(PUNCT ".")
(ID lookup)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID CFakeReferenceType)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_const_type)
(PUNCT "(")
(ID typeinfo_entry)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_info)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID get_type_info_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID type_info)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID error)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID type_info)
(NEWLINE)
(ID as_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_as_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID as_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT "=")
(ID as_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_type)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_type)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID error)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_void)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID error)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complete)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID error)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID mess)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID mess)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID temp_code)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_code)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg_type)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID temp_code)
(PUNCT ",")
(ID arg_code)
(PUNCT ")")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID TypeofNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID literal)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID value)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(ID str)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID literal)
(PUNCT "=")
(ID StringNode)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID value)
(PUNCT ")")
(NEWLINE)
(ID literal)
(PUNCT "=")
(ID literal)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID literal)
(PUNCT "=")
(ID literal)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_as_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID literal)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID literal)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID matmul_operator)
(PUNCT "=")
(ID operator)
(PUNCT ".")
(ID matmul)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID AttributeError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID matmul_operator)
(PUNCT "(")
(ID a)
(PUNCT ",")
(ID b)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID a)
(PUNCT ".")
(ID __matmul__)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID AttributeError)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID b)
(PUNCT ".")
(ID __rmatmul__)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID func)
(PUNCT "(")
(ID a)
(PUNCT ",")
(ID b)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID compile_time_binary_operators)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID lt)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID le)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID eq)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID ne)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID ge)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID gt)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID is_)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID is_not)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID add)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID and_)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID truediv)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID floordiv)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID lshift)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID mod)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID mul)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID or_)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID pow)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID rshift)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID sub)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID operator)
(PUNCT ".")
(ID xor)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID matmul_operator)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(KEYWORD lambda)
(ID x)
(PUNCT ",")
(ID seq)
(PUNCT ":")
(ID x)
(KEYWORD in)
(ID seq)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(KEYWORD lambda)
(ID x)
(PUNCT ",")
(ID seq)
(PUNCT ":")
(ID x)
(KEYWORD not)
(KEYWORD in)
(ID seq)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID get_compile_time_binop)
(PUNCT "(")
(ID node)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID compile_time_binary_operators)
(PUNCT ".")
(ID get)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID func)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID node)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID node)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID func)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID BinopNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID inplace)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID compile_time_binary_operators)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID func)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID get_compile_time_binop)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID func)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID analyse_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_pythran_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID result_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pythran_expr)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_py_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID coerce_operands_to_pyobjects)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID result_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_cpp_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_cpp_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_c_operation)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_py_operation)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_ctuple)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_ctuple)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_pythran_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID is_pythran_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_pythran_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID has_np_pythran)
(PUNCT "(")
(ID env)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID is_pythran_supported_operation_type)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(KEYWORD and)
(ID is_pythran_supported_operation_type)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID is_pythran_expr)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(KEYWORD or)
(ID is_pythran_expr)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_cpp_operation)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_cpp_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup_operator)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID entry)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID func_type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_check)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_value)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_value)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_pythran_operation_types)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PythranExpr)
(PUNCT "(")
(ID pythran_binop_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_operation_types)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type2)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type2)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type2)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type2)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID unicode_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID unicode_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type1)
(KEYWORD is)
(ID type2)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(ID result_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID infer_builtin_types_operation)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID result_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID result_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_error)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID compute_c_result_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_builtin_types_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_py_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_operands_to_pyobjects)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID super)
(PUNCT "(")
(ID BinopNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pythran_expr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID py_operation_function)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID extra_args)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID extra_args)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID function)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID extra_args)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cpp_operation)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID type_error)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CBinopNode)
(PUNCT "(")
(ID BinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID BinopNode)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID node)
(PUNCT ".")
(ID is_py_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID node)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cpp_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cpp_type)
(PUNCT "=")
(ID type1)
(PUNCT ".")
(ID find_cpp_operation_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID cpp_type)
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_ptr)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cpp_type)
(PUNCT "=")
(ID type2)
(PUNCT ".")
(ID find_cpp_operation_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID type1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID cpp_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID c_binop_constructor)
(PUNCT "(")
(ID operator)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID make_binop_node)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(PUNCT "**")
(ID operands)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID CBinopNode)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID operator)
(PUNCT "=")
(ID operator)
(PUNCT ",")
(PUNCT "**")
(ID operands)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID make_binop_node)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID NumBinopNode)
(PUNCT "(")
(ID BinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID infix)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID overflow_check)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID overflow_bit_node)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID compute_c_result_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID infix)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID overflow_op_names)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID overflow_check)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID overflow_fold)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID func)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID overflow_check_binop)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID overflow_op_names)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "]")
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID const_rhs)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID infix)
(KEYWORD or)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_numeric)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_numeric)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID c_types_okay)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID widest_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID widest_type)
(KEYWORD is)
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD not)
(KEYWORD in)
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID widest_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID widest_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID widest_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID widest_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID type1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID type1)
(KEYWORD and)
(ID type1)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID type2)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID get_constant_c_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID value1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID get_constant_c_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID value2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID get_constant_c_result_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID value1)
(KEYWORD and)
(ID value2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID value1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID value2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID c_types_okay)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_numeric)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_enum)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_numeric)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_enum)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID overflow_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID overflow_bit_node)
(PUNCT "=")
(ID self)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID overflow_bit)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_int_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID overflow_bit)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID super)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID overflow_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID overflow_bit)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID overflow_bit)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID overflow_bit_node)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID func)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID overflow_bit_node)
(PUNCT ".")
(ID overflow_bit)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID infix)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result1)
(PUNCT ",")
(ID result2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result1)
(PUNCT ",")
(ID result2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID result2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID binary_op)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID func)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID func)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_unicode_char)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_unicode_char)
(KEYWORD or)
(ID BinopNode)
(PUNCT ".")
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID py_functions)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID inplace)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID function_name)
(PUNCT "=")
(ID function_name)
(PUNCT ".")
(ID replace)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID function_name)
(NEWLINE)
(DEDENT)
(ID py_functions)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID overflow_op_names)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID IntBinopNode)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID c_types_okay)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_enum)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_enum)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID AddNode)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID is_string)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_pyunicode_ptr)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NumBinopNode)
(PUNCT ".")
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_builtin_types_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID string_types)
(PUNCT "=")
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type1)
(KEYWORD in)
(ID string_types)
(KEYWORD and)
(ID type2)
(KEYWORD in)
(ID string_types)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID string_types)
(PUNCT "[")
(ID max)
(PUNCT "(")
(ID string_types)
(PUNCT ".")
(ID index)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(PUNCT ",")
(ID string_types)
(PUNCT ".")
(ID index)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_enum)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_enum)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type2)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NumBinopNode)
(PUNCT ".")
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_unicode_concat)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID FormattedValueNode)
(PUNCT ")")
(KEYWORD or)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID FormattedValueNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_unicode_concat)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID type1)
(KEYWORD is)
(ID unicode_type)
(KEYWORD or)
(ID type2)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_unicode_concat)
(PUNCT "=")
(ID type1)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_builtin_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID is_unicode_concat)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID AddNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID py_operation_function)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID SubNode)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_int)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_enum)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_ptrdiff_t_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NumBinopNode)
(PUNCT ".")
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MulNode)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_string)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_int)
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_string)
(KEYWORD and)
(ID type1)
(PUNCT ".")
(ID is_int)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NumBinopNode)
(PUNCT ".")
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_builtin_types_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID string_types)
(PUNCT "=")
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type1)
(KEYWORD in)
(ID string_types)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID type2)
(KEYWORD in)
(ID string_types)
(KEYWORD and)
(ID type1)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type2)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type2)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID type2)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID MatMultNode)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID super)
(PUNCT "(")
(ID MatMultNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DivNode)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cdivision)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID truedivision)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID ctruedivision)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID cdivision_warnings)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID zerodivision_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID find_compile_time_binary_operator)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID op1)
(PUNCT ",")
(ID op2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID compile_time_binary_operators)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID truedivision)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID op1)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID op2)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID compile_time_binary_operators)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID func)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID op1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(ID op2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(ID func)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID find_compile_time_binary_operator)
(PUNCT "(")
(ID op1)
(PUNCT ",")
(ID op2)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID func)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID find_compile_time_binary_operator)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID func)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID _check_truedivision)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cdivision)
(KEYWORD or)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID ctruedivision)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID ctruedivision)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID truedivision)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID _check_truedivision)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID result_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID _check_truedivision)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID NumBinopNode)
(PUNCT ".")
(ID analyse_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cpp_operation)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cdivision)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID zerodivision_check)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID cdivision)
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD and)
(PUNCT "(")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID has_constant_result)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID constant_result)
(PUNCT "==")
(LIT "0")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID zerodivision_check)
(KEYWORD or)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID ctruedivision)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID type1)
(PUNCT ".")
(ID is_float)
(KEYWORD and)
(KEYWORD not)
(ID type2)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID widest_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_double_type)
(PUNCT ")")
(NEWLINE)
(ID widest_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID type2)
(PUNCT ",")
(ID widest_type)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID widest_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID NumBinopNode)
(PUNCT ".")
(ID compute_c_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID zero_division_message)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cdivision)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cdivision)
(PUNCT "=")
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_float)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cdivision)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ".")
(ID specialize)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID NumBinopNode)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_div_warning_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_div_warning_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID in_nogil)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID zerodivision_check)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID infix)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID zero_test)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID unary_op)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID zero_test)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID zero_test)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID in_nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_ensure_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID zero_division_message)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID in_nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_release_ensured_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "!=")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(PUNCT "==")
(LIT "2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID minus1_check)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_of_op2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID minus1_check)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID type_of_op2)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID type_of_op2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID minus1_check)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID in_nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_ensure_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID in_nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_release_ensured_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "!=")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID warning_code)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(ID Naming)
(PUNCT ".")
(ID filename_cname)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID Naming)
(PUNCT ".")
(ID lineno_cname)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID in_nogil)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID result_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_ensure_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID set_error_info)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID used)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_code)
(PUNCT ",")
(ID warning_code)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_release_ensured_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result_code)
(PUNCT "=")
(ID warning_code)
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID set_error_info)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID used)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID result_code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_label)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID NumBinopNode)
(PUNCT ".")
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_float)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID truedivision)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID cdivision)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID op1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID op2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID truedivision)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID op1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID op1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID op2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID op2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID op1)
(PUNCT ",")
(ID op2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID specialization_name)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID _find_formatting_types)
(PUNCT "=")
(ID re)
(PUNCT ".")
(ID compile)
(PUNCT "(")
(LIT "s")
(LIT "s")
(LIT "s")
(LIT "s")
(LIT "s")
(PUNCT ")")
(PUNCT ".")
(ID findall)
(NEWLINE)
(ID _safe_bytes_formats)
(PUNCT "=")
(ID set)
(PUNCT "(")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID ModNode)
(PUNCT "(")
(ID DivNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID NumBinopNode)
(PUNCT ".")
(ID is_py_operation_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_builtin_types_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type1)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type2)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID type1)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID str_type)
(PUNCT ",")
(ID basestring_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type2)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type2)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type2)
(PUNCT ".")
(ID is_numeric)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID is_string_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type1)
(KEYWORD is)
(ID str_type)
(KEYWORD or)
(ID type1)
(KEYWORD is)
(ID bytes_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID set)
(PUNCT "(")
(ID _find_formatting_types)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID value)
(PUNCT ")")
(PUNCT ")")
(PUNCT "<=")
(ID _safe_bytes_formats)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID basestring_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(KEYWORD is)
(ID bytes_type)
(KEYWORD and)
(KEYWORD not)
(ID type2)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID basestring_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID zero_division_message)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID DivNode)
(PUNCT ".")
(ID analyse_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cdivision)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cdivision)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cdivision)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cdivision)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ".")
(ID specialize)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ".")
(ID specialize)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID math_h_modifier)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID math_h_modifier)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID NumBinopNode)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_div_warning_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cdivision)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID math_h_modifier)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID specialization_name)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID str_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID ModNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID py_operation_function)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PowNode)
(PUNCT "(")
(ID NumBinopNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID NumBinopNode)
(PUNCT ".")
(ID analyse_c_operation)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID real_type)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID pow_func)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID binary_op)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID pow_func)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_float)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID pow_func)
(PUNCT "=")
(LIT "s")
(PUNCT "+")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID math_h_modifier)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID pow_func)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID replace)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ".")
(ID specialize)
(PUNCT "(")
(ID func_name)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pow_func)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID empty_declaration_code)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID signed)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(KEYWORD and)
(LIT "1")
(KEYWORD or)
(LIT "0")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID typecast)
(PUNCT "(")
(ID operand)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "==")
(ID operand)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID cast_code)
(PUNCT "(")
(ID operand)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pow_func)
(PUNCT ",")
(ID typecast)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ")")
(PUNCT ",")
(ID typecast)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID py_operation_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID constant_result)
(PUNCT "==")
(LIT "2")
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID constant_result)
(PUNCT ",")
(ID _py_int_types)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID inplace)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID PowNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID py_operation_function)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID BoolBinopNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID operator)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID operand1)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID operand2)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID independent_spanning_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID operand1)
(KEYWORD and)
(ID operand2)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID operand1)
(KEYWORD or)
(ID operand2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID operand1)
(KEYWORD and)
(ID operand2)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID operand1)
(KEYWORD or)
(ID operand2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID independent_spanning_type)
(PUNCT "(")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID _wrap_operand)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID _wrap_operand)
(PUNCT "(")
(ID operand2)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID _wrap_operand)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID operand)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID isinstance)
(PUNCT "(")
(ID operand)
(PUNCT ",")
(PUNCT "(")
(ID BoolBinopNode)
(PUNCT ",")
(ID BoolBinopResultNode)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand)
(PUNCT "=")
(ID BoolBinopResultNode)
(PUNCT "(")
(ID operand)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID operand)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID wrap_operands)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID _wrap_operand)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID _wrap_operand)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID BoolBinopNode)
(PUNCT ".")
(ID from_node)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID dst_type)
(PUNCT ",")
(ID operator)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID operand1)
(PUNCT "=")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT "=")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_bool_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID final_result_temp)
(PUNCT ",")
(ID final_result_type)
(PUNCT ",")
(ID and_label)
(PUNCT ",")
(ID or_label)
(PUNCT ",")
(ID end_label)
(PUNCT ",")
(ID fall_through)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID outer_labels)
(PUNCT "=")
(PUNCT "(")
(ID and_label)
(PUNCT ",")
(ID or_label)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID my_label)
(PUNCT "=")
(ID and_label)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_label)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID my_label)
(PUNCT "=")
(ID or_label)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_label)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID generate_bool_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID final_result_temp)
(PUNCT ",")
(ID final_result_type)
(PUNCT ",")
(ID and_label)
(PUNCT ",")
(ID or_label)
(PUNCT ",")
(ID end_label)
(PUNCT ",")
(ID my_label)
(PUNCT ")")
(NEWLINE)
(ID and_label)
(PUNCT ",")
(ID or_label)
(PUNCT "=")
(ID outer_labels)
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_label)
(PUNCT "(")
(ID my_label)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID generate_bool_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID final_result_temp)
(PUNCT ",")
(ID final_result_type)
(PUNCT ",")
(ID and_label)
(PUNCT ",")
(ID or_label)
(PUNCT ",")
(ID end_label)
(PUNCT ",")
(ID fall_through)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID result_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD else)
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID or_label)
(PUNCT "=")
(ID and_label)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID end_label)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID new_label)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_bool_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID result_type)
(PUNCT ",")
(ID and_label)
(PUNCT ",")
(ID or_label)
(PUNCT ",")
(ID end_label)
(PUNCT ",")
(ID end_label)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_label)
(PUNCT "(")
(ID end_label)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_subexpr_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_operand1_test)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID test_result)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID test_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(PUNCT "(")
(ID test_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID test_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(ID test_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID BoolBinopResultNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID arg)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID value)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID result_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID arg)
(PUNCT "=")
(ID ProxyNode)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID super)
(PUNCT "(")
(ID BoolBinopResultNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID result_type)
(PUNCT ",")
(ID value)
(PUNCT "=")
(ID CloneNode)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID result_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID arg)
(NEWLINE)
(KEYWORD if)
(ID dst_type)
(KEYWORD is)
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID BoolBinopResultNode)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_operand_test)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID test_result)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID test_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(PUNCT "(")
(ID test_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID test_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(ID test_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_bool_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID final_result_temp)
(PUNCT ",")
(ID final_result_type)
(PUNCT ",")
(ID and_label)
(PUNCT ",")
(ID or_label)
(PUNCT ",")
(ID end_label)
(PUNCT ",")
(ID fall_through)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID and_label)
(KEYWORD or)
(ID or_label)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID test_result)
(PUNCT ",")
(ID uses_temp)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID generate_operand_test)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID uses_temp)
(KEYWORD and)
(PUNCT "(")
(ID and_label)
(KEYWORD and)
(ID or_label)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID sense)
(PUNCT "=")
(LIT "s")
(KEYWORD if)
(ID or_label)
(KEYWORD else)
(LIT "s")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID sense)
(PUNCT ",")
(ID test_result)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID uses_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID test_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID uses_temp)
(KEYWORD or)
(KEYWORD not)
(PUNCT "(")
(ID and_label)
(KEYWORD and)
(ID or_label)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID or_label)
(KEYWORD and)
(ID or_label)
(PUNCT "!=")
(ID fall_through)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID or_label)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID and_label)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID or_label)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID uses_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID and_label)
(PUNCT "!=")
(ID fall_through)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID and_label)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID and_label)
(KEYWORD or)
(KEYWORD not)
(ID or_label)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID and_label)
(KEYWORD or)
(ID or_label)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID final_result_temp)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID final_result_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID value)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID end_label)
(PUNCT "!=")
(ID fall_through)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_goto)
(PUNCT "(")
(ID end_label)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID and_label)
(KEYWORD or)
(ID or_label)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CondExprNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID true_val)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID false_val)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT "+")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID independent_spanning_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID test)
(PUNCT ".")
(ID constant_result)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID test)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID test)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_result_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_result_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID independent_spanning_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_reference)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID CFakeReferenceType)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID ref_base_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_integer)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID coerce_to_integer)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID coerce_to_integer)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_result_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID analyse_result_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_error)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_error)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID test)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID mark_pos)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID test)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID test)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID eval_and_get)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID true_val)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID eval_and_get)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID false_val)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID test)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID test)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID eval_and_get)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID expr)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID expr)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID expr)
(PUNCT ".")
(ID make_owned_memoryviewslice)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID expr)
(PUNCT ".")
(ID make_owned_reference)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID expr)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID expr)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID expr)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_subexpr_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID richcmp_constants)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD class)
(ID CmpNode)
(PUNCT "(")
(ID object)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID special_bool_cmp_function)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_cascaded_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID operand1_result)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID compile_time_binary_operators)
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "]")
(NEWLINE)
(ID operand2_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID isinstance)
(PUNCT "(")
(ID operand1_result)
(PUNCT ",")
(ID any_string_type)
(PUNCT ")")
(KEYWORD and)
(ID isinstance)
(PUNCT "(")
(ID operand2_result)
(PUNCT ",")
(ID any_string_type)
(PUNCT ")")
(KEYWORD and)
(ID type)
(PUNCT "(")
(ID operand1_result)
(PUNCT ")")
(PUNCT "!=")
(ID type)
(PUNCT "(")
(ID operand2_result)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(PUNCT "(")
(ID ListNode)
(PUNCT ",")
(ID TupleNode)
(PUNCT ",")
(ID SetNode)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID ListNode)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID as_tuple)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID isinstance)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID DictNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID key_value_pairs)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID func)
(PUNCT "(")
(ID operand1_result)
(PUNCT ",")
(ID operand2_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID cascaded_compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func)
(PUNCT "=")
(ID get_compile_time_binop)
(PUNCT "(")
(ID self)
(PUNCT ")")
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID func)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID Exception)
(KEYWORD as)
(ID e)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID compile_time_value_error)
(PUNCT "(")
(ID e)
(PUNCT ")")
(NEWLINE)
(ID result)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID result)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cascade)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(NEWLINE)
(KEYWORD if)
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result)
(PUNCT "=")
(ID result)
(KEYWORD and)
(ID cascade)
(PUNCT ".")
(ID cascaded_compile_time_value)
(PUNCT "(")
(ID operand2)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID result)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_cpp_comparison)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_class)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID find_common_int_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type1_can_be_int)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID type2_can_be_int)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID operand1)
(PUNCT ".")
(ID is_string_literal)
(KEYWORD and)
(ID operand1)
(PUNCT ".")
(ID can_coerce_to_char_literal)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1_can_be_int)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID operand2)
(PUNCT ".")
(ID is_string_literal)
(KEYWORD and)
(ID operand2)
(PUNCT ".")
(ID can_coerce_to_char_literal)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type2_can_be_int)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type2_can_be_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID type2)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type1_can_be_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID type2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID type1_can_be_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type2_can_be_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID Builtin)
(PUNCT ".")
(ID unicode_type)
(KEYWORD in)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_py_ucs4_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID find_common_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID common_type)
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(NEWLINE)
(ID type1)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID new_common_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID type1)
(PUNCT "==")
(ID str_type)
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID type2)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(ID type2)
(PUNCT "==")
(ID str_type)
(KEYWORD and)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID type1)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID unicode_type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID new_common_type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_complex)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID op)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_complex)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_numeric)
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID type2)
(PUNCT ".")
(ID is_complex)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_numeric)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID new_common_type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID complex_type)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID Builtin)
(PUNCT ".")
(ID complex_type)
(PUNCT ")")
(KEYWORD else)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type2)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID complex_type)
(KEYWORD if)
(ID type2)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID Builtin)
(PUNCT ".")
(ID complex_type)
(PUNCT ")")
(KEYWORD else)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_numeric)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_numeric)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID common_type)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(KEYWORD not)
(ID common_type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID find_common_int_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID new_common_type)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type1)
(PUNCT ".")
(ID is_ctuple)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_ctuple)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT "==")
(ID type2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID type1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type2)
(PUNCT ".")
(ID is_numeric)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand2)
(PUNCT ".")
(ID check_for_coercion_error)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_numeric)
(KEYWORD or)
(ID type1)
(PUNCT ".")
(ID is_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand1)
(PUNCT ".")
(ID check_for_coercion_error)
(PUNCT "(")
(ID type2)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID py_object_type)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(KEYWORD and)
(ID py_object_type)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID invalid_types_error)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(ID new_common_type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID type1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type2)
(PUNCT ".")
(ID assignable_from)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID type2)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID invalid_types_error)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(ID new_common_type)
(PUNCT "=")
(ID error_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID new_common_type)
(PUNCT ".")
(ID is_string)
(KEYWORD and)
(PUNCT "(")
(ID isinstance)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID BytesNode)
(PUNCT ")")
(KEYWORD or)
(ID isinstance)
(PUNCT "(")
(ID operand2)
(PUNCT ",")
(ID BytesNode)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID new_common_type)
(PUNCT "=")
(ID bytes_type)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID common_type)
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID new_common_type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID new_common_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID spanning_type)
(PUNCT "(")
(ID common_type)
(PUNCT ",")
(ID new_common_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID find_common_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID operand2)
(PUNCT ",")
(ID common_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID common_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID invalid_types_error)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID op)
(PUNCT ",")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_python_comparison)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_ptr_contains)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_c_string_contains)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID has_python_operands)
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID cascade)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID is_python_comparison)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_operands_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(NEWLINE)
(KEYWORD if)
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID dst_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID coerce_operands_to)
(PUNCT "(")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID is_python_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID has_python_operands)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_c_string_contains)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_ptr_contains)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID cascade)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID is_python_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_c_string_contains)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(KEYWORD and)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytes_type)
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_unicode_char)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_ptr_contains)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID container_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID container_type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD or)
(ID container_type)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID container_type)
(PUNCT ".")
(ID is_string)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID find_special_bool_compare_function)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID result_is_bool)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID result_is_bool)
(KEYWORD or)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID type2)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID type1)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID unicode_type)
(KEYWORD or)
(ID type2)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(KEYWORD or)
(ID type2)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID basestring_type)
(KEYWORD or)
(ID type2)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID basestring_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID str_type)
(KEYWORD or)
(ID type2)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID str_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID dict_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID set_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID Builtin)
(PUNCT ".")
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_operation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID result_code)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID op)
(PUNCT ",")
(ID operand2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error_clause)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(NEWLINE)
(ID got_ref)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID result_code)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID coerce_result)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID coerce_result)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error_clause)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(NEWLINE)
(ID got_ref)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(ID coerce_result)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result1)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result1)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result2)
(PUNCT "=")
(ID operand2)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result2)
(PUNCT "=")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID special_bool_cmp_utility_code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_code)
(PUNCT ",")
(ID coerce_result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT ",")
(ID result1)
(PUNCT ",")
(ID result2)
(PUNCT ",")
(ID richcmp_constants)
(PUNCT "[")
(ID op)
(PUNCT "]")
(PUNCT ",")
(ID got_ref)
(PUNCT ",")
(ID error_clause)
(PUNCT "(")
(ID result_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID op)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID op)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID op)
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_code)
(PUNCT ",")
(ID operand1)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID richcmp_constants)
(PUNCT "[")
(ID op)
(PUNCT "]")
(PUNCT ",")
(ID got_ref)
(PUNCT ",")
(ID error_clause)
(PUNCT "(")
(ID result_code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_code)
(PUNCT ",")
(ID coerce_result)
(PUNCT ",")
(ID op)
(PUNCT "==")
(LIT "s")
(KEYWORD and)
(LIT "s")
(KEYWORD or)
(LIT "s")
(PUNCT ",")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID unary_op)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID type1)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID type2)
(PUNCT ".")
(ID is_extension_type)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID type1)
(PUNCT ".")
(ID same_as)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID type1)
(PUNCT ".")
(ID is_numeric)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID widest_numeric_type)
(PUNCT "(")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID type1)
(NEWLINE)
(DEDENT)
(ID code1)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID common_type)
(PUNCT ")")
(NEWLINE)
(ID code2)
(PUNCT "=")
(ID operand2)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID common_type)
(PUNCT ")")
(NEWLINE)
(ID statement)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result_code)
(PUNCT ",")
(ID coerce_result)
(PUNCT ",")
(ID code1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID c_operator)
(PUNCT "(")
(ID op)
(PUNCT ")")
(PUNCT ",")
(ID code2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cpp_comparison)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID translate_cpp_exception)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID statement)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID statement)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID c_operator)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID op)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID op)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID op)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID op)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PrimaryCmpNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ",")
(ID CmpNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID child_attrs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID cascade)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID coerced_operand2)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID is_memslice_nonecheck)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(KEYWORD or)
(ID is_pythran_expr)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_supported_type)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(KEYWORD and)
(ID is_pythran_supported_type)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID PythranExpr)
(PUNCT "(")
(ID pythran_binop_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID cascade)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID calculate_cascaded_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID constant_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID compile_time_value)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID compile_time_value)
(PUNCT "(")
(ID denv)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID cascaded_compile_time_value)
(PUNCT "(")
(ID operand1)
(PUNCT ",")
(ID denv)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_cpp_comparison)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID analyse_cpp_comparison)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(ID type1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(KEYWORD or)
(ID is_pythran_expr)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_supported_type)
(PUNCT "(")
(ID type1)
(PUNCT ")")
(KEYWORD and)
(ID is_pythran_supported_type)
(PUNCT "(")
(ID type2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PythranExpr)
(PUNCT "(")
(ID pythran_binop_type)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID analyse_memoryviewslice_comparison)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_c_string_contains)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID common_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(ID bytes_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_ptr_contains)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID find_special_bool_compare_function)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID common_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID find_special_bool_compare_function)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID common_type)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID common_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID find_common_type)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(ID common_type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID common_type)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID common_type)
(PUNCT ".")
(ID is_error)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID common_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID common_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID coerce_operands_to)
(PUNCT "(")
(ID common_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID coerce_cascaded_operands_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID optimise_comparison)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID operand2)
(KEYWORD is)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID coerced_operand2)
(PUNCT "=")
(ID operand2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_python_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(DEDENT)
(ID cdr)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(NEWLINE)
(KEYWORD while)
(ID cdr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cdr)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID cdr)
(PUNCT "=")
(ID cdr)
(PUNCT ".")
(ID cascade)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID cascade)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID special_bool_cmp_function)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_cpp_comparison)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID type2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID entry)
(PUNCT "=")
(ID env)
(PUNCT ".")
(ID lookup_operator)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(PUNCT "[")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID entry)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID type1)
(PUNCT ",")
(ID type2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID error_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_code)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID func_type)
(PUNCT "=")
(ID entry)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(ID func_type)
(PUNCT ".")
(ID is_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID func_type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID base_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_check)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_value)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID exception_value)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_check)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_value)
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID env)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID len)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT ")")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "0")
(PUNCT "]")
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID func_type)
(PUNCT ".")
(ID args)
(PUNCT "[")
(LIT "1")
(PUNCT "]")
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID func_type)
(PUNCT ".")
(ID return_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_memoryviewslice_comparison)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID have_none)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID is_none)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID is_none)
(NEWLINE)
(ID have_slice)
(PUNCT "=")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ")")
(NEWLINE)
(ID ops)
(PUNCT "=")
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID have_slice)
(KEYWORD and)
(ID have_none)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(ID ops)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_memslice_nonecheck)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID find_special_bool_compare_function)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID result_is_bool)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID optimise_comparison)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID result_is_bool)
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID operand2)
(KEYWORD is)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID coerced_operand2)
(PUNCT "=")
(ID operand2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID ExprNode)
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID has_python_operands)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(NEWLINE)
(KEYWORD if)
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID negation)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID negation)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID negation)
(PUNCT ",")
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID binary_op)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ",")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID is_c_string_contains)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID unicode_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID method)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID method)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID negation)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID negation)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID negation)
(PUNCT ",")
(ID method)
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID is_pythran_expr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result1)
(PUNCT ",")
(ID result2)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID pythran_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result1)
(PUNCT ",")
(ID result2)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID operand2)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_memslice_nonecheck)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result1)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID result1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID result2)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID result2)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID result1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID c_operator)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ")")
(PUNCT ",")
(ID result2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID allocate_temp_result)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_operation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID coerced_operand2)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID needs_evaluation)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID coerced_operand2)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_subexpr_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_subexpr_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand1)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CascadedCmpNode)
(PUNCT "(")
(ID Node)
(PUNCT ",")
(ID CmpNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID child_attrs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID cascade)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID coerced_operand2)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID constant_result)
(PUNCT "=")
(ID constant_value_not_set)
(NEWLINE)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID py_object_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID has_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID constant_result)
(KEYWORD is)
(KEYWORD not)
(ID constant_value_not_set)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID constant_result)
(KEYWORD is)
(KEYWORD not)
(ID not_a_constant)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID analyse_types)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID has_python_operands)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_cpp_comparison)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID optimise_comparison)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID result_is_bool)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID find_special_bool_compare_function)
(PUNCT "(")
(ID env)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID result_is_bool)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_pycmp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID operand1)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT "=")
(ID operand1)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID optimise_comparison)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID result_is_bool)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID operand2)
(KEYWORD is)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID coerced_operand2)
(PUNCT "=")
(ID operand2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID operand1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_operands_to_pyobjects)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to_pyobject)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID dict_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID operator)
(KEYWORD in)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID coerce_operands_to_pyobjects)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_cascaded_operands_to_temp)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID coerce_cascaded_operands_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID result)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID needs_evaluation)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID result)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_decref)
(PUNCT "(")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID needs_evaluation)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID generate_operation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID result)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operator)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ",")
(ID result)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID coerced_operand2)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ",")
(ID needs_evaluation)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID coerced_operand2)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID needs_evaluation)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID operand1)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID operand1)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID operand2)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID cascade)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID binop_node_classes)
(PUNCT "=")
(PUNCT "{")
(LIT "s")
(PUNCT ":")
(ID BoolBinopNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID BoolBinopNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID IntBinopNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID IntBinopNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID IntBinopNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID IntBinopNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID IntBinopNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID AddNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID SubNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID MulNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID MatMultNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID DivNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID DivNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID ModNode)
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID PowNode)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID binop_node)
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID operator)
(PUNCT ",")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT ",")
(ID inplace)
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID binop_node_classes)
(PUNCT "[")
(ID operator)
(PUNCT "]")
(PUNCT "(")
(ID pos)
(PUNCT ",")
(ID operator)
(PUNCT "=")
(ID operator)
(PUNCT ",")
(ID operand1)
(PUNCT "=")
(ID operand1)
(PUNCT ",")
(ID operand2)
(PUNCT "=")
(ID operand2)
(PUNCT ",")
(ID inplace)
(PUNCT "=")
(ID inplace)
(PUNCT ",")
(PUNCT "**")
(ID kwargs)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID CoercionNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID constant_result)
(PUNCT "=")
(ID not_a_constant)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID arg)
(NEWLINE)
(KEYWORD if)
(ID debug_coercion)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID print)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID annotate)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID file)
(PUNCT ",")
(ID line)
(PUNCT ",")
(ID col)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID pos)
(NEWLINE)
(ID code)
(PUNCT ".")
(ID annotate)
(PUNCT "(")
(PUNCT "(")
(ID file)
(PUNCT ",")
(ID line)
(PUNCT ",")
(ID col)
(PUNCT "-")
(LIT "1")
(PUNCT ")")
(PUNCT ",")
(ID AnnotationItem)
(PUNCT "(")
(ID style)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID tag)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID text)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CoerceToMemViewSliceNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID dst_type)
(PUNCT ".")
(ID is_memoryviewslice)
(NEWLINE)
(KEYWORD assert)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(NEWLINE)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID env)
(PUNCT "=")
(ID env)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID arg)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID create_from_py_utility_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_py_call_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CastNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID new_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID new_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_result_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID PyTypeTestNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID exact_builtin_type)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID notnone)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID dst_type)
(PUNCT ".")
(ID is_extension_type)
(KEYWORD or)
(ID dst_type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ",")
(LIT "s")
(NEWLINE)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID notnone)
(PUNCT "=")
(ID notnone)
(NEWLINE)
(DEDENT)
(ID nogil_check)
(PUNCT "=")
(ID Node)
(PUNCT ".")
(ID gil_error)
(NEWLINE)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID notnone)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result_in_temp)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID reanalyse)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "!=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD or)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID typeobj_is_available)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID notnone)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID as_none_safe_node)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID name)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_constant_result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID typeobj_is_available)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_builtin_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_test)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID type_test_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID notnone)
(PUNCT ",")
(ID exact)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID exact_builtin_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type_test)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID type_test_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID notnone)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID globalstate)
(PUNCT ".")
(ID use_utility_code)
(PUNCT "(")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID type_test)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_post_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID NoneCheckNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_nonecheck)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID exception_type_cname)
(PUNCT ",")
(ID exception_message)
(PUNCT ",")
(ID exception_format_args)
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_type_cname)
(PUNCT "=")
(ID exception_type_cname)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_message)
(PUNCT "=")
(ID exception_message)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID exception_format_args)
(PUNCT "=")
(ID tuple)
(PUNCT "(")
(ID exception_format_args)
(KEYWORD or)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID nogil_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result_in_temp)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result_in_temp)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID nonlocally_immutable)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID nonlocally_immutable)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID condition)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID Exception)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID classmethod)
(NEWLINE)
(KEYWORD def)
(ID generate)
(PUNCT "(")
(ID cls)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID exception_message)
(PUNCT ",")
(ID exception_type_cname)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID exception_format_args)
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID in_nogil_context)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID node)
(PUNCT "=")
(ID cls)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID exception_type_cname)
(PUNCT ",")
(ID exception_message)
(PUNCT ",")
(ID exception_format_args)
(PUNCT ")")
(NEWLINE)
(ID node)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT "=")
(ID in_nogil_context)
(NEWLINE)
(ID node)
(PUNCT ".")
(ID put_nonecheck)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID classmethod)
(NEWLINE)
(KEYWORD def)
(ID generate_if_needed)
(PUNCT "(")
(ID cls)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID exception_message)
(PUNCT ",")
(ID exception_type_cname)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID exception_format_args)
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID in_nogil_context)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID cls)
(PUNCT ".")
(ID generate)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID exception_message)
(PUNCT ",")
(ID exception_type_cname)
(PUNCT ",")
(ID exception_format_args)
(PUNCT ",")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID put_nonecheck)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID condition)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_ensure_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID escape)
(PUNCT "=")
(ID StringEncoding)
(PUNCT ".")
(ID escape_byte_string)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID exception_format_args)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID exception_type_cname)
(PUNCT ",")
(ID StringEncoding)
(PUNCT ".")
(ID escape_byte_string)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID exception_message)
(PUNCT ".")
(ID encode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(PUNCT "[")
(LIT "s")
(PUNCT "%")
(ID escape)
(PUNCT "(")
(ID str)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(PUNCT ".")
(ID encode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID arg)
(KEYWORD in)
(ID self)
(PUNCT ".")
(ID exception_format_args)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID exception_type_cname)
(PUNCT ",")
(ID escape)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID exception_message)
(PUNCT ".")
(ID encode)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_release_ensured_gil)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID put_nonecheck)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_post_assignment_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_post_assignment_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CoerceToPyTypeNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID target_type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID env)
(PUNCT ",")
(ID type)
(PUNCT "=")
(ID py_object_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID create_to_py_utility_code)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID type)
(KEYWORD is)
(ID py_object_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID default_str_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(KEYWORD or)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_unicode_char)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID unicode_type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID complex_type)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID target_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_cpp_string)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID type)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID bytes_type)
(PUNCT ",")
(ID bytearray_type)
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID env)
(PUNCT ".")
(ID directives)
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ",")
(ID type)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID target_type)
(PUNCT "=")
(ID type)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID target_type)
(PUNCT "=")
(ID type)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg_type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID arg_type)
(PUNCT "==")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(KEYWORD or)
(PUNCT "(")
(ID arg_type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID arg_type)
(PUNCT ".")
(ID name)
(PUNCT "==")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to_temp)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID CoerceToBooleanNode)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID coerce_to_integer)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_int)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_long_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID to_py_call_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID target_type)
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CoerceIntToBytesNode)
(PUNCT "(")
(ID CoerceToPyTypeNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(NEWLINE)
(ID arg_result)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_uchar_type)
(PUNCT ",")
(ID PyrexTypes)
(PUNCT ".")
(ID c_schar_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID signed)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID arg_result)
(PUNCT ",")
(ID arg_result)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(ID arg_result)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID code)
(PUNCT ".")
(ID error_goto)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID temp)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD is)
(KEYWORD not)
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID temp)
(PUNCT "=")
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID allocate_temp)
(PUNCT "(")
(ID PyrexTypes)
(PUNCT ".")
(ID c_char_type)
(PUNCT ",")
(ID manage_ref)
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID temp)
(PUNCT ",")
(ID arg_result)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID arg_result)
(PUNCT "=")
(ID temp)
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID arg_result)
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID temp)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID funcstate)
(PUNCT ".")
(ID release_temp)
(PUNCT "(")
(ID temp)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CoerceFromPyTypeNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID result_type)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID result_type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID result_type)
(PUNCT ".")
(ID create_from_py_utility_code)
(PUNCT "(")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID result_type)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD or)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyunicode_ptr)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_name)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID entry)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID entry)
(PUNCT ".")
(ID is_pyglobal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID warning)
(PUNCT "(")
(ID arg)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT "%")
(ID result_type)
(PUNCT ",")
(ID level)
(PUNCT "=")
(LIT "1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_ephemeral)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_ptr)
(KEYWORD and)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_array)
(PUNCT ")")
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_ephemeral)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID from_py_function)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_string)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(KEYWORD is)
(ID bytes_type)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_py_function)
(PUNCT ".")
(ID startswith)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID from_py_function)
(PUNCT "=")
(LIT "s")
(PUNCT "+")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_py_function)
(PUNCT "[")
(ID len)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID NoneCheckNode)
(PUNCT ".")
(ID generate_if_needed)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ",")
(ID code)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_py_call_code)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(ID code)
(PUNCT ",")
(ID from_py_function)
(PUNCT "=")
(ID from_py_function)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID error)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CoerceToBooleanNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID PyrexTypes)
(PUNCT ".")
(ID c_bint_type)
(NEWLINE)
(ID _special_builtins)
(PUNCT "=")
(PUNCT "{")
(ID Builtin)
(PUNCT ".")
(ID list_type)
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID tuple_type)
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID set_type)
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID frozenset_type)
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID bytes_type)
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID bytearray_type)
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(ID Builtin)
(PUNCT ".")
(ID unicode_type)
(PUNCT ":")
(LIT "s")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID nogil_check)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID _special_builtins)
(PUNCT ".")
(ID get)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID gil_error)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID check_const)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID not_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID check_const)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID test_func)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID _special_builtins)
(PUNCT ".")
(ID get)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID test_func)
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID checks)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(KEYWORD else)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID checks)
(PUNCT ".")
(ID append)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID test_func)
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "s")
(PUNCT ".")
(ID join)
(PUNCT "(")
(ID checks)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID py_result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_neg)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CoerceToComplexNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID arg)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID coerce_to_simple)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID dst_type)
(NEWLINE)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID dst_type)
(PUNCT ".")
(ID create_declaration_utility_code)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_complex)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID real_part)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID imag_part)
(PUNCT "=")
(LIT "s")
(PUNCT "%")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID real_part)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID imag_part)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID from_parts)
(PUNCT ",")
(ID real_part)
(PUNCT ",")
(ID imag_part)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CoerceToTempNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID as_argument_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID gil_message)
(PUNCT "=")
(LIT "s")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to_boolean)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to_boolean)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(NEWLINE)
(DEDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID type)
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result_as)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID use_managed_ref)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_incref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID ctype)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_memoryviewslice)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID put_incref_memoryviewslice)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(KEYWORD not)
(ID self)
(PUNCT ".")
(ID in_nogil_context)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ProxyNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "s")
(NEWLINE)
(ID nogil_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID super)
(PUNCT "(")
(ID ProxyNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID _proxy_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID analyse_expressions)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID _proxy_type)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID _proxy_type)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result_ctype)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID entry)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_result_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_simple)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_evaluation_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID generate_disposal_code)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID free_temps)
(PUNCT "(")
(ID code)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CloneNode)
(PUNCT "(")
(ID CoercionNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID nogil_check)
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID CoercionNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID arg)
(PUNCT ")")
(NEWLINE)
(ID self)
(PUNCT ".")
(ID constant_result)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID constant_result)
(NEWLINE)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID result_ctype)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID arg)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID arg)
(PUNCT ".")
(ID entry)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID result)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID may_be_none)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID type_dependencies)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type_dependencies)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID infer_type)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID infer_type)
(PUNCT "(")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID type)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID result_ctype)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID result_ctype)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID is_temp)
(PUNCT "=")
(LIT "1")
(NEWLINE)
(KEYWORD if)
(ID hasattr)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID self)
(PUNCT ".")
(ID entry)
(PUNCT "=")
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID entry)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dest_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID is_literal)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(PUNCT ".")
(ID arg)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dest_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID super)
(PUNCT "(")
(ID CloneNode)
(PUNCT ",")
(ID self)
(PUNCT ")")
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID dest_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID is_simple)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_evaluation_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_disposal_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID free_temps)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID CMethodSelfCloneNode)
(PUNCT "(")
(ID CloneNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID dst_type)
(PUNCT ".")
(ID is_builtin_type)
(KEYWORD and)
(ID self)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID subtype_of)
(PUNCT "(")
(ID dst_type)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID CloneNode)
(PUNCT ".")
(ID coerce_to)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID dst_type)
(PUNCT ",")
(ID env)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID ModuleRefNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID may_be_none)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID calculate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID Naming)
(PUNCT ".")
(ID module_cname)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID DocstringRefNode)
(PUNCT "(")
(ID ExprNode)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID subexprs)
(PUNCT "=")
(PUNCT "[")
(LIT "s")
(PUNCT "]")
(NEWLINE)
(ID type)
(PUNCT "=")
(ID py_object_type)
(NEWLINE)
(ID is_temp)
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ",")
(ID body)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID ExprNode)
(PUNCT ".")
(ID __init__)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID pos)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID body)
(PUNCT ".")
(ID type)
(PUNCT ".")
(ID is_pyobject)
(NEWLINE)
(ID self)
(PUNCT ".")
(ID body)
(PUNCT "=")
(ID body)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID analyse_types)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID env)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID self)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID generate_result_code)
(PUNCT "(")
(ID self)
(PUNCT ",")
(ID code)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID code)
(PUNCT ".")
(ID putln)
(PUNCT "(")
(LIT "s")
(PUNCT "%")
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID body)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID intern_identifier)
(PUNCT "(")
(ID StringEncoding)
(PUNCT ".")
(ID EncodedString)
(PUNCT "(")
(LIT "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID code)
(PUNCT ".")
(ID error_goto_if_null)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID self)
(PUNCT ".")
(ID pos)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID code)
(PUNCT ".")
(ID put_gotref)
(PUNCT "(")
(ID self)
(PUNCT ".")
(ID result)
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID pyerr_occurred_withgil_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT "(")
(ID proto)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID impl)
(PUNCT "=")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID raise_unbound_local_error_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT "(")
(ID proto)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID impl)
(PUNCT "=")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID raise_closure_name_error_utility_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT "(")
(ID proto)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID impl)
(PUNCT "=")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID raise_unbound_memoryview_utility_code_nogil)
(PUNCT "=")
(ID UtilityCode)
(PUNCT "(")
(ID proto)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID impl)
(PUNCT "=")
(LIT "s")
(PUNCT ",")
(ID requires)
(PUNCT "=")
(PUNCT "[")
(ID raise_unbound_local_error_utility_code)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID raise_too_many_values_to_unpack)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID raise_need_more_values_to_unpack)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ID tuple_unpacking_error_code)
(PUNCT "=")
(ID UtilityCode)
(PUNCT ".")
(ID load_cached)
(PUNCT "(")
(LIT "s")
(PUNCT ",")
(LIT "s")
(PUNCT ")")
(NEWLINE)
(ENDMARKER)
